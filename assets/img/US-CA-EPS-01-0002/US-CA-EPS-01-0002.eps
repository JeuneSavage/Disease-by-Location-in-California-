%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: US-CA-EPS-01-0002.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: Ted Grajeda
%%CreationDate: 11/3/14
%%BoundingBox: 0 0 720 540
%%HiResBoundingBox: 0 0 720 540
%%CropBox: 0 0 720 540
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.0 x430 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2014-11-03T22:58:49-07:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-11-03T22:58:49-07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-11-03T22:58:49-07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Q4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYqxD8ytU13S9MtrvS5jAiyFLhwFJ+IfCKMG7jFXn9x5/8ANsaRKuov6hXn&#xA;IxSPfkAQOPDag+/FVH/lYfnL/q5N/wABF/zRirv+Vh+cv+rk3/ARf80Yqvm/MDzgrgLqTAcUP2Iu&#xA;pUE/s4qs/wCVh+cv+rk3/ARf80Yq9ws3Z7SB3NWaNWY+JKgnFVXFXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWJfmhc+h5VkAUM0s0aAlQwG/KpBBH7OKvJD/AKda&#xA;lysUMkDKiblFYPzcj4iVG4qOnh4YquXT4YmeC5qs4iMjMSVSIFAyV2JYliFIp9/ZVBmGMH+/jPuB&#xA;J/zTiqtPbxn03NxGA6LxqJK/COB6J4qcVUvq8P8Ay1RfdL/zRir6KsP94bf/AIxJ/wARGKq+KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvMPzf1ktLaaPG2yD6xO&#xA;BXqaqg+6pxV5/JJIdPgUseIkkAWppsFI26V+I74q26ehZAMOMtweVD19JR8O3gzb7+AxVTis7uVe&#xA;UUEki9OSqzCv0DFVa8trhILcvE6BIyrkqRQ+q5ofvxVB4q+kbD/eG3/4xJ/xEYqr4q7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwn8w/JP6XiOp2jEX9unFozUrJG&#xA;prsACeQqenXFXlTRQfVki+tRh0d2IIl6MFA/Y/ycVVNQv7xbo+ncMqsqOfSLIhZ0DMQo49WYnpiq&#xA;gsNxcOkty7rC27XLhmHEGhpX7XhTxxVXubn6vchkQSpJBF/egty2VqnfejL8u2KqUbR3lImRUuTX&#xA;0nQKiseyMqgCpOwP3+yr6FsP94bf/jEn/ERiqvirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVfOuucP01qHBSifWZeKnsOZ2xVEXIeNVC3bRGFmgLMzjmIwtCFj&#xA;VqCjeOKrWjkurIRi4W5nSUcauQaSClP3qr/J+y2KqkHC3sSHkUXCn/Rpi3JY3J+JU9Pnyqm5PQH3&#xA;xVaUmDK0U9uhU/7sS3icEdNl5EfTvir3uw/3ht/+MSf8RGKq+KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV4x+Yfl66tPMNxezNHFaXr+pBJRypNByU8Vajd8V&#xA;SRCjXbTxTcrWY0va8gFEgPI0J3HUr13260qq1ai2S5+rIjCUvG8Ds1VZlNU/YVgHVtvmPoVXytBA&#xA;odY09OFFSJ45Q8wZhyYclJUUZm+Lh8vHFUFG0EjCO3tPUkevwuzMRt+zwKdOu+KvafJvm7T9ZtFt&#xA;lYJe2yIksfRWIXrGT1GxxVkmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxVCarpNhqtlJZ3sQlhfseoPZlPYjFXiD+X2h16XRopRcy+oYCnEhif50pUHh16g9sV&#xA;VDpGqJLBaS2rmEI8csrwqSrUJYhiC1E5fDvvTbFUIhjN9eFZl9WfmQFQuFo3qP8AaA3AU8afhirU&#xA;WpGIetHEnCMhQ5jRXlbrRqCgG1TTf3rviqnaXDpEX08NBeRSxyqVk+P4VcHgKA7cum+30nFXqfkf&#xA;z/BrKrY35WHVAPhI2SUDuvg3tirM8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirHvNmnaZFZtrL2qtd6eOaSKDXgTR6hSKjixOKvJdZsra31FpLWOW4gciSC4j&#xA;PFHVwGU04sVPXkv6sVQsoitb+4Cq73LNKkUcZ2XmCqnl8RY0PQff2xVziF7b1ZxylgCgWsZAUBjU&#xA;uxHSrbEdantsMVU7ea3jHrpBSONl5l2DOW3KhCAvH7Neh969MVdNaTtcG4sY34cuarHu8RJqoPH7&#xA;Ptir1LyP52urxF0/Wo3iuxRYbp0KrL7MaUD/AK8VZvirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdiqld2y3NpNbOSqTxtGxHUBwVNPvxV4x5g8lavZTOZrcJAhWG3u&#xA;w6+nIAtE51IKs1KV6V2piqTXqsIhLHRphS3mZG5gBI1RaUAI50I+jwxVZbxRW6rK6tcmRjC9umwq&#xA;QCAW+Kp32AHUddsVcD9XZZbtXWSM1trQVXjQg1bkDRfxP44qhYJgrOJKtHICslKV8Qwr3Db+/Tvi&#xA;q2VDFKVBrShVhtUHdW+kb4q9M8hfmL6hj0rWpP3h+G2vXPXwSQnv4Nir0jFXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWB/m4+orotusNTZPJS7AWtCKGMluwrXFX&#xA;mMcstw6SROI7tFo7MyoJB0rVuIrTYg9cVW3cdxZTNCC0Dug9eFW6cv2SQdxTf6cVXJawRGcyuJZL&#xA;bcxLUKaSKhBY0P7XQD6cVUfr1yqqsTmFFFOEbMo61qd9ziq66Yzwx3JJaQUinY92A+A1r3UU+jFU&#xA;Lir0XyF+Yht/S0rWJP8ARx8NveMd08Fc/wAvge2KvU1YMAymoO4I6EYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVO5t4Lm3kt50EkMqlJEPQqRQjFXhnmzylNoWovE&#xA;z1s5DW2mZXoQd+JIUjkMVS+3VJ/3ZaOSdEPoOA9fgFaMOPxUUGn0dtsVQ6hKS8rhS0i0r8ZqeQbf&#xA;4fbFVP0Y/wDf6fc//NOKq0X1ZYZY5Z6o/FlEasx5qaA0bgPss3fFWrm1gimeET1aNirl1IFQafCV&#xA;MlcVUvRj/wB/p9z/APNOKs78i+ff0b6em6pcLJYbLBN8fKIk9CSv2P1Yq9XVldQykMrCqsNwQe4x&#xA;VvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUBrmkW2raZNZzxpJzU&#xA;+lzrRZKEK22+xPbFXhd5oOq6bqMtvIAj2jDlcgkRAihBDtT+uKqN1au0BueCo609UJT02Gy84yvw&#xA;dTRgDsfwVQGKuxVEah/vfc/8ZX/4kcVQ+KuxVnPkT8wJNLMem6mxfTiaRTHdoa/rT9WKvXlZWUMp&#xA;qrCoI6EHFW8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeT+c/JHmW&#xA;78x3l1Y2vrW10Q4ZHUDZQKNy471WuKscXQvMmlCW4ubWe0gCSK8pBVOXBuO42PxdMVQEd3LJFIOE&#xA;PqLR1/cxbqNmAHH3r9BxVR+vTfyxf8iYv+acVavm5Xtw380jn72OKqGKuxV2KvbPy78zJqujR21x&#xA;OjajbVR460do1oFeh67dcVZZirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdiqHvjfrA7WQjecD93HKSqk17stT09sVWxxXsjSJdiF7ZxQRqrEkEbhixoe/bFWI3X5U6Q0sj2&#xA;dzJarJyBTislAwoVUtuBirzO70K6sJJTfq8UEcpiWUIT6jKxB4cuI6LXFVK8+pLOzmKVhKTIkiuq&#xA;qwY1qoKNtXbr86HbFVDnp/8AvmX/AJGr/wBU8VcXsO0Mv/I1f+qeKu+sW42W1jIHQs0hb6SGUfhi&#xA;r2H8uvL2mWukW+qpCv128j5NIOXwqT9leRanTfxxVl+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxVazMGUBCwP2mBG334q24ZkIVuLEbMKGn34qgrjTY9R01rPVoopx&#xA;ICJAlePsy13U4q8h87+Wv0Bcww+n6unygm1mBZXBH21etV5b+HSnhirGOVt/vt/+DH/NGKr5ltY3&#xA;4+nJWik1cdSoJH2MVX2aWct5BE6ScJJEVqOOjMAf2cVfQun2VvY2MFnbikECCOMVJ2A8TiqIxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVbLGksbRuKo4KsPY4q1&#xA;BEYoUjLtIUAHqOQWNO5IA3xVjP5h+XLrW9GRLQFri2f1I4hSrkjjSpIp1xV57D+V3m6QAtBFFX+e&#xA;Vf8AjXliqZt+Uuu3FzNLJc28KySMyirsaE1HRRiqIg/Jq45L6+poF25BIiTTvQlhir0LRNLTStLg&#xA;sElaZYAR6r/aNSSf14qjsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqy4SV7eVIZPRmZGWOXiG4MRQNxOxod6Yqw3/&#xA;AA9+Zxcxf4qthbGBED/UVMglUAMxo61DU3+IHfbjiq7S/Ln5kIlm2pea4pHjkEl3HDZRhXBWTlGG&#xA;Y1pydaGg+z0xVXt/LvntIjBN5qEkQiWNJRYxCfmHQmRnLFSTGrL9nqa9qYq3HoXn8w8JfM8XqGCV&#xA;DLHYxD98yERShSxoEejFa79PcKqaaH+ZKzTV8zWrW5iKwj6gocSmJl5V9QiiyEPQ1qNvdlU30PT/&#xA;ADLa3E8mraumowyU9CFLZYPToB+0rMWrvWvt4bqv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:DocumentID>xmp.did:5f18b656-ccef-4b5a-a273-4c7b64c6b5c7</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:5f18b656-ccef-4b5a-a273-4c7b64c6b5c7</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:0b38989a-87f9-0b4b-94ba-937cc065c955</stRef:instanceID>
            <stRef:documentID>uuid:A5C37AED0006E2118036FE4A7E57740D</stRef:documentID>
            <stRef:originalDocumentID>uuid:A5C37AED0006E2118036FE4A7E57740D</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:OriginalDocumentID>uuid:A5C37AED0006E2118036FE4A7E57740D</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5f18b656-ccef-4b5a-a273-4c7b64c6b5c7</stEvt:instanceID>
                  <stEvt:when>2014-11-03T22:58:49-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>720.000000</stDim:w>
            <stDim:h>540.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Roboto-Light</stFnt:fontName>
                  <stFnt:fontFamily>Roboto</stFnt:fontFamily>
                  <stFnt:fontFace>Light</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 1.100140; 2013</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Roboto-Light.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Maps</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Sea</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>219</xmpG:green>
                           <xmpG:blue>229</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>River</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>182</xmpG:green>
                           <xmpG:blue>198</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Land</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>244</xmpG:green>
                           <xmpG:blue>244</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Country</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>241</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Border</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>163</xmpG:red>
                           <xmpG:green>163</xmpG:green>
                           <xmpG:blue>163</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Marker</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>81</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Text</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -540 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 540 li
720 540 li
720 0 li
cp
clp
720 540 mo
0 540 li
0 0 li
720 0 li
720 540 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0148623 .00836194 .00836194 0 cmyk
f
295.845 127.236 mo
265.19 127.278 li
264.424 126.454 li
264.399 126.029 li
264.888 122.736 li
265.528 122.007 li
264.67 121.168 li
263.998 121.046 li
263.583 120.11 li
262.751 120.034 li
262.376 121.602 li
260.843 121.834 li
260.503 123.044 li
258.744 123.68 li
258.231 124.687 li
257.071 125.395 li
256.381 126.448 li
255.501 126.43 li
254.874 126.752 li
253.843 126.62 li
252.55 127.479 li
251.53 127.525 li
251.617 129.167 li
251.318 130.957 li
252.669 131.918 li
253.254 133.527 li
253.017 134.585 li
252.581 134.77 li
251.113 133.924 li
249.579 134.303 li
248.417 132.395 li
246.765 131.508 li
244.967 131.695 li
243.679 131.459 li
241.57 128.886 li
240.681 128.75 li
240.034 128.19 li
239.312 128.397 li
238.335 127.505 li
237.286 125.819 li
237.402 123.84 li
236.972 123.354 li
237.138 122.615 li
236.446 121.719 li
236.421 120.565 li
235.842 119.75 li
231.174 119.678 li
231.597 118.795 li
231.569 117.889 li
232.356 116.516 li
232.286 115.79 li
231.525 114.72 li
231.244 113.544 li
230.288 112.79 li
230.21 111.439 li
229.376 111.408 li
229.597 110.196 li
230.435 109.279 li
230.384 108.3 li
230.742 107.488 li
230.733 106.093 li
230.232 104.642 li
230.479 103.532 li
229.838 102.161 li
230.887 101.371 li
231.44 99.7002 li
232.605 99.7633 li
232.945 99.1837 li
233.582 99.2118 li
234.029 98.858 li
234.766 96.9225 li
234.739 95.7562 li
235.134 95.1722 li
243.678 95 li
271.192 95.0564 li
295.94 95.3103 li
295.905 97.268 li
295.655 97.3335 li
295.569 104.305 li
295.894 104.308 li
295.845 127.236 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
.25 lw
1 lc
1 lj
4 ml
[] 0 dsh
true sadj
295.845 127.236 mo
265.19 127.278 li
264.424 126.454 li
264.399 126.029 li
264.888 122.736 li
265.528 122.007 li
264.67 121.168 li
263.998 121.046 li
263.583 120.11 li
262.751 120.034 li
262.376 121.602 li
260.843 121.834 li
260.503 123.044 li
258.744 123.68 li
258.231 124.687 li
257.071 125.395 li
256.381 126.448 li
255.501 126.43 li
254.874 126.752 li
253.843 126.62 li
252.55 127.479 li
251.53 127.525 li
251.617 129.167 li
251.318 130.957 li
252.669 131.918 li
253.254 133.527 li
253.017 134.585 li
252.581 134.77 li
251.113 133.924 li
249.579 134.303 li
248.417 132.395 li
246.765 131.508 li
244.967 131.695 li
243.679 131.459 li
241.57 128.886 li
240.681 128.75 li
240.034 128.19 li
239.312 128.397 li
238.335 127.505 li
237.286 125.819 li
237.402 123.84 li
236.972 123.354 li
237.138 122.615 li
236.446 121.719 li
236.421 120.565 li
235.842 119.75 li
231.174 119.678 li
231.597 118.795 li
231.569 117.889 li
232.356 116.516 li
232.286 115.79 li
231.525 114.72 li
231.244 113.544 li
230.288 112.79 li
230.21 111.439 li
229.376 111.408 li
229.597 110.196 li
230.435 109.279 li
230.384 108.3 li
230.742 107.488 li
230.733 106.093 li
230.232 104.642 li
230.479 103.532 li
229.838 102.161 li
230.887 101.371 li
231.44 99.7002 li
232.605 99.7633 li
232.945 99.1837 li
233.582 99.2118 li
234.029 98.858 li
234.766 96.9225 li
234.739 95.7562 li
235.134 95.1722 li
243.678 95 li
271.192 95.0564 li
295.94 95.3103 li
295.905 97.268 li
295.655 97.3335 li
295.569 104.305 li
295.894 104.308 li
295.845 127.236 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
231.174 119.678 mo
227.75 119.65 li
227.737 116.214 li
219.146 116.396 li
216.614 105.838 li
213.711 103.888 li
214.756 101.07 li
214.787 95.1795 li
226.155 95.365 li
235.134 95.1722 li
234.739 95.7562 li
234.766 96.9225 li
234.029 98.858 li
233.582 99.2118 li
232.945 99.1837 li
232.605 99.7633 li
231.44 99.7002 li
230.887 101.371 li
229.838 102.161 li
230.479 103.532 li
230.232 104.642 li
230.733 106.093 li
230.742 107.488 li
230.384 108.3 li
230.435 109.279 li
229.597 110.196 li
229.376 111.408 li
230.21 111.439 li
230.288 112.79 li
231.244 113.544 li
231.525 114.72 li
232.286 115.79 li
232.356 116.516 li
231.569 117.889 li
231.597 118.795 li
231.174 119.678 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
231.174 119.678 mo
227.75 119.65 li
227.737 116.214 li
219.146 116.396 li
216.614 105.838 li
213.711 103.888 li
214.756 101.07 li
214.787 95.1795 li
226.155 95.365 li
235.134 95.1722 li
234.739 95.7562 li
234.766 96.9225 li
234.029 98.858 li
233.582 99.2118 li
232.945 99.1837 li
232.605 99.7633 li
231.44 99.7002 li
230.887 101.371 li
229.838 102.161 li
230.479 103.532 li
230.232 104.642 li
230.733 106.093 li
230.742 107.488 li
230.384 108.3 li
230.435 109.279 li
229.597 110.196 li
229.376 111.408 li
230.21 111.439 li
230.288 112.79 li
231.244 113.544 li
231.525 114.72 li
232.286 115.79 li
232.356 116.516 li
231.569 117.889 li
231.597 118.795 li
231.174 119.678 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
299.328 127.307 mo
295.845 127.236 li
295.894 104.308 li
295.569 104.305 li
295.655 97.3335 li
295.905 97.268 li
295.94 95.3103 li
312.658 95.5734 li
338.441 95.5129 li
338.357 127.362 li
299.328 127.307 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
299.328 127.307 mo
295.845 127.236 li
295.894 104.308 li
295.569 104.305 li
295.655 97.3335 li
295.905 97.268 li
295.94 95.3103 li
312.658 95.5734 li
338.441 95.5129 li
338.357 127.362 li
299.328 127.307 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
234.444 172.957 mo
220.622 172.931 li
218.071 169.028 li
210.712 163.187 li
210.982 160.296 li
209.322 156.147 li
217.634 135.124 li
216.453 129.261 li
218.745 122.043 li
219.146 116.396 li
227.737 116.214 li
227.75 119.65 li
231.174 119.678 li
235.842 119.75 li
236.421 120.565 li
236.446 121.719 li
237.138 122.615 li
236.972 123.354 li
237.402 123.84 li
237.286 125.819 li
238.335 127.505 li
238.003 128.413 li
237.867 130.372 li
236.977 131.246 li
237.979 132.524 li
238.446 133.855 li
237.347 135.838 li
237.306 136.548 li
236.024 137.676 li
234.171 136.759 li
232.582 137.062 li
232.494 137.334 li
232.947 139.191 li
234.095 141.036 li
234.254 142.031 li
233.997 142.7 li
234.58 144.915 li
234.444 172.957 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
234.444 172.957 mo
220.622 172.931 li
218.071 169.028 li
210.712 163.187 li
210.982 160.296 li
209.322 156.147 li
217.634 135.124 li
216.453 129.261 li
218.745 122.043 li
219.146 116.396 li
227.737 116.214 li
227.75 119.65 li
231.174 119.678 li
235.842 119.75 li
236.421 120.565 li
236.446 121.719 li
237.138 122.615 li
236.972 123.354 li
237.402 123.84 li
237.286 125.819 li
238.335 127.505 li
238.003 128.413 li
237.867 130.372 li
236.977 131.246 li
237.979 132.524 li
238.446 133.855 li
237.347 135.838 li
237.306 136.548 li
236.024 137.676 li
234.171 136.759 li
232.582 137.062 li
232.494 137.334 li
232.947 139.191 li
234.095 141.036 li
234.254 142.031 li
233.997 142.7 li
234.58 144.915 li
234.444 172.957 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
252.164 173.672 mo
234.533 173.735 li
234.444 172.957 li
234.58 144.915 li
233.997 142.7 li
234.254 142.031 li
234.095 141.036 li
232.947 139.191 li
232.494 137.334 li
232.582 137.062 li
234.171 136.759 li
236.024 137.676 li
237.306 136.548 li
237.347 135.838 li
238.446 133.855 li
237.979 132.524 li
236.977 131.246 li
237.867 130.372 li
238.003 128.413 li
238.335 127.505 li
239.312 128.397 li
240.034 128.19 li
240.681 128.75 li
241.57 128.886 li
243.679 131.459 li
244.967 131.695 li
246.765 131.508 li
248.417 132.395 li
249.579 134.303 li
251.113 133.924 li
252.581 134.77 li
253.017 134.585 li
253.254 133.527 li
252.669 131.918 li
251.318 130.957 li
251.617 129.167 li
251.53 127.525 li
252.55 127.479 li
253.843 126.62 li
254.874 126.752 li
255.501 126.43 li
256.381 126.448 li
257.071 125.395 li
258.231 124.687 li
258.744 123.68 li
260.503 123.044 li
260.843 121.834 li
262.376 121.602 li
262.751 120.034 li
263.583 120.11 li
263.998 121.046 li
264.67 121.168 li
265.528 122.007 li
264.888 122.736 li
264.399 126.029 li
264.424 126.454 li
265.19 127.278 li
266.575 128.564 li
266.268 130.689 li
264.217 131.478 li
264.01 134.037 li
261.875 136.351 li
261.704 138.567 li
260.464 141.127 li
260.263 143.112 li
258.973 143.91 li
258.6 144.53 li
258.831 145.396 li
258.603 146.043 li
257.791 146.461 li
258.271 148.472 li
259.394 150.25 li
259.267 151.1 li
258.153 151.201 li
257.541 151.957 li
256.651 152.239 li
256.366 153.098 li
255.045 153.581 li
254.709 154.461 li
253.958 154.945 li
253.338 156.105 li
252.794 155.928 li
251.688 156.977 li
250.419 157.406 li
250.132 158.457 li
248.738 159.962 li
248.622 162.278 li
249.496 162.922 li
250.421 163.249 li
251.043 163.839 li
251.245 165.625 li
250.901 167.443 li
251.154 167.794 li
251.331 170.293 li
251.738 171.139 li
251.659 171.84 li
252.164 173.672 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
252.164 173.672 mo
234.533 173.735 li
234.444 172.957 li
234.58 144.915 li
233.997 142.7 li
234.254 142.031 li
234.095 141.036 li
232.947 139.191 li
232.494 137.334 li
232.582 137.062 li
234.171 136.759 li
236.024 137.676 li
237.306 136.548 li
237.347 135.838 li
238.446 133.855 li
237.979 132.524 li
236.977 131.246 li
237.867 130.372 li
238.003 128.413 li
238.335 127.505 li
239.312 128.397 li
240.034 128.19 li
240.681 128.75 li
241.57 128.886 li
243.679 131.459 li
244.967 131.695 li
246.765 131.508 li
248.417 132.395 li
249.579 134.303 li
251.113 133.924 li
252.581 134.77 li
253.017 134.585 li
253.254 133.527 li
252.669 131.918 li
251.318 130.957 li
251.617 129.167 li
251.53 127.525 li
252.55 127.479 li
253.843 126.62 li
254.874 126.752 li
255.501 126.43 li
256.381 126.448 li
257.071 125.395 li
258.231 124.687 li
258.744 123.68 li
260.503 123.044 li
260.843 121.834 li
262.376 121.602 li
262.751 120.034 li
263.583 120.11 li
263.998 121.046 li
264.67 121.168 li
265.528 122.007 li
264.888 122.736 li
264.399 126.029 li
264.424 126.454 li
265.19 127.278 li
266.575 128.564 li
266.268 130.689 li
264.217 131.478 li
264.01 134.037 li
261.875 136.351 li
261.704 138.567 li
260.464 141.127 li
260.263 143.112 li
258.973 143.91 li
258.6 144.53 li
258.831 145.396 li
258.603 146.043 li
257.791 146.461 li
258.271 148.472 li
259.394 150.25 li
259.267 151.1 li
258.153 151.201 li
257.541 151.957 li
256.651 152.239 li
256.366 153.098 li
255.045 153.581 li
254.709 154.461 li
253.958 154.945 li
253.338 156.105 li
252.794 155.928 li
251.688 156.977 li
250.419 157.406 li
250.132 158.457 li
248.738 159.962 li
248.622 162.278 li
249.496 162.922 li
250.421 163.249 li
251.043 163.839 li
251.245 165.625 li
250.901 167.443 li
251.154 167.794 li
251.331 170.293 li
251.738 171.139 li
251.659 171.84 li
252.164 173.672 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
299.44 155.655 mo
294.241 155.7 li
292.644 155.705 li
292.26 156.196 li
289.916 156.186 li
288.677 155.528 li
286.924 156.332 li
284.276 156.254 li
281.721 156.943 li
276.945 157.56 li
273.781 158.744 li
272.952 158.509 li
269.773 159.068 li
268.068 159.023 li
266.28 158.774 li
264.713 158.075 li
260.975 160.251 li
259.877 160.263 li
257.87 159.052 li
254.614 159.756 li
252.943 161.397 li
250.701 161.256 li
249.52 161.924 li
249.496 162.922 li
248.622 162.278 li
248.738 159.962 li
250.132 158.457 li
250.419 157.406 li
251.688 156.977 li
252.794 155.928 li
253.338 156.105 li
253.958 154.945 li
254.709 154.461 li
255.045 153.581 li
256.366 153.098 li
256.651 152.239 li
257.541 151.957 li
258.153 151.201 li
259.267 151.1 li
259.394 150.25 li
258.271 148.472 li
257.791 146.461 li
258.603 146.043 li
258.831 145.396 li
258.6 144.53 li
258.973 143.91 li
260.263 143.112 li
260.464 141.127 li
261.704 138.567 li
261.875 136.351 li
264.01 134.037 li
264.217 131.478 li
266.268 130.689 li
266.575 128.564 li
265.19 127.278 li
295.845 127.236 li
299.328 127.307 li
299.363 138.157 li
299.738 138.158 li
299.44 155.655 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
299.44 155.655 mo
294.241 155.7 li
292.644 155.705 li
292.26 156.196 li
289.916 156.186 li
288.677 155.528 li
286.924 156.332 li
284.276 156.254 li
281.721 156.943 li
276.945 157.56 li
273.781 158.744 li
272.952 158.509 li
269.773 159.068 li
268.068 159.023 li
266.28 158.774 li
264.713 158.075 li
260.975 160.251 li
259.877 160.263 li
257.87 159.052 li
254.614 159.756 li
252.943 161.397 li
250.701 161.256 li
249.52 161.924 li
249.496 162.922 li
248.622 162.278 li
248.738 159.962 li
250.132 158.457 li
250.419 157.406 li
251.688 156.977 li
252.794 155.928 li
253.338 156.105 li
253.958 154.945 li
254.709 154.461 li
255.045 153.581 li
256.366 153.098 li
256.651 152.239 li
257.541 151.957 li
258.153 151.201 li
259.267 151.1 li
259.394 150.25 li
258.271 148.472 li
257.791 146.461 li
258.603 146.043 li
258.831 145.396 li
258.6 144.53 li
258.973 143.91 li
260.263 143.112 li
260.464 141.127 li
261.704 138.567 li
261.875 136.351 li
264.01 134.037 li
264.217 131.478 li
266.268 130.689 li
266.575 128.564 li
265.19 127.278 li
295.845 127.236 li
299.328 127.307 li
299.363 138.157 li
299.738 138.158 li
299.44 155.655 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
334.143 183.953 mo
334.182 183.035 li
334.515 182.989 li
334.867 181.974 li
335.236 181.962 li
335.054 177.53 li
335.404 177.484 li
335.333 176.411 li
335.015 176.369 li
335.015 175.31 li
334.316 174.95 li
334.286 174.569 li
333.662 174.364 li
333.739 174.031 li
333.476 174.075 li
333.477 173.571 li
333.212 173.545 li
333.243 172.918 li
332.855 172.913 li
332.84 172.462 li
332.454 172.509 li
332.092 170.696 li
331.561 170.661 li
331.571 169.913 li
331.077 169.929 li
331.045 169.008 li
330.499 169.026 li
330.489 168.765 li
328.316 168.718 li
328.291 168.51 li
327.313 168.335 li
327.307 167.656 li
326.864 167.619 li
326.456 167.094 li
326.065 167.021 li
326.068 166.62 li
325.297 166.333 li
325.274 165.707 li
324.886 165.721 li
324.83 165.165 li
324.281 165.132 li
324.206 164.542 li
323.781 164.54 li
323.482 163.626 li
322.107 163.293 li
322.094 162.944 li
321.405 162.97 li
321.359 162.238 li
320.064 162.182 li
320.07 161.867 li
319.398 161.875 li
319.379 161.404 li
319.061 161.417 li
319.033 161.156 li
316.857 161.204 li
316.878 160.837 li
315.833 160.842 li
315.628 161.462 li
315.006 161.416 li
314.931 162.188 li
313.913 162.403 li
313.905 163.066 li
313.321 163.072 li
313.329 163.7 li
312.78 163.67 li
312.842 165.185 li
312.223 165.175 li
312.201 165.489 li
311.139 165.463 li
311.131 164.87 li
310.425 164.899 li
310.405 164.411 li
309.061 164.432 li
309.108 163.872 li
307.799 163.891 li
307.774 162.898 li
307.368 162.915 li
307.233 155.701 li
299.44 155.655 li
299.738 138.158 li
299.363 138.157 li
299.328 127.307 li
338.357 127.362 li
338.362 183.559 li
337.835 183.576 li
337.848 183.973 li
334.143 183.953 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
334.143 183.953 mo
334.182 183.035 li
334.515 182.989 li
334.867 181.974 li
335.236 181.962 li
335.054 177.53 li
335.404 177.484 li
335.333 176.411 li
335.015 176.369 li
335.015 175.31 li
334.316 174.95 li
334.286 174.569 li
333.662 174.364 li
333.739 174.031 li
333.476 174.075 li
333.477 173.571 li
333.212 173.545 li
333.243 172.918 li
332.855 172.913 li
332.84 172.462 li
332.454 172.509 li
332.092 170.696 li
331.561 170.661 li
331.571 169.913 li
331.077 169.929 li
331.045 169.008 li
330.499 169.026 li
330.489 168.765 li
328.316 168.718 li
328.291 168.51 li
327.313 168.335 li
327.307 167.656 li
326.864 167.619 li
326.456 167.094 li
326.065 167.021 li
326.068 166.62 li
325.297 166.333 li
325.274 165.707 li
324.886 165.721 li
324.83 165.165 li
324.281 165.132 li
324.206 164.542 li
323.781 164.54 li
323.482 163.626 li
322.107 163.293 li
322.094 162.944 li
321.405 162.97 li
321.359 162.238 li
320.064 162.182 li
320.07 161.867 li
319.398 161.875 li
319.379 161.404 li
319.061 161.417 li
319.033 161.156 li
316.857 161.204 li
316.878 160.837 li
315.833 160.842 li
315.628 161.462 li
315.006 161.416 li
314.931 162.188 li
313.913 162.403 li
313.905 163.066 li
313.321 163.072 li
313.329 163.7 li
312.78 163.67 li
312.842 165.185 li
312.223 165.175 li
312.201 165.489 li
311.139 165.463 li
311.131 164.87 li
310.425 164.899 li
310.405 164.411 li
309.061 164.432 li
309.108 163.872 li
307.799 163.891 li
307.774 162.898 li
307.368 162.915 li
307.233 155.701 li
299.44 155.655 li
299.738 138.158 li
299.363 138.157 li
299.328 127.307 li
338.357 127.362 li
338.362 183.559 li
337.835 183.576 li
337.848 183.973 li
334.143 183.953 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
252.291 180.684 mo
251.675 178.76 li
251.937 176.781 li
252.566 176.134 li
252.831 175.301 li
252.164 173.672 li
251.659 171.84 li
251.738 171.139 li
251.331 170.293 li
251.154 167.794 li
250.901 167.443 li
251.245 165.625 li
251.043 163.839 li
250.421 163.249 li
249.496 162.922 li
249.52 161.924 li
250.701 161.256 li
252.943 161.397 li
254.614 159.756 li
257.87 159.052 li
259.877 160.263 li
260.975 160.251 li
264.713 158.075 li
266.28 158.774 li
268.068 159.023 li
269.773 159.068 li
272.952 158.509 li
273.781 158.744 li
276.945 157.56 li
281.721 156.943 li
284.276 156.254 li
286.924 156.332 li
288.677 155.528 li
289.916 156.186 li
292.26 156.196 li
292.644 155.705 li
294.241 155.7 li
295.031 156.994 li
295.235 158.664 li
295.883 159.613 li
297.75 160.122 li
298.837 161.034 li
298.848 161.645 li
298.28 161.618 li
298.131 161.852 li
298.629 162.266 li
298.461 164.752 li
297.558 165.107 li
297.261 165.557 li
296.542 165.694 li
296.227 166.127 li
296.426 166.972 li
295.933 167.013 li
295.993 167.916 li
295.746 167.927 li
295.764 168.292 li
295.322 168.295 li
295.319 168.592 li
294.717 168.567 li
294.715 168.898 li
291.693 169.232 li
291.814 170.62 li
291.418 170.83 li
291.273 171.481 li
290.764 171.54 li
290.795 172.165 li
290.567 172.176 li
290.553 172.976 li
290.202 173.011 li
290.147 173.674 li
288.246 173.749 li
287.261 175.553 li
286.809 177.051 li
286.405 177.436 li
277.68 177.308 li
277.625 177.919 li
278.37 177.689 li
278.572 177.852 li
278.106 178.345 li
277.935 179.1 li
278.021 180.362 li
278.357 180.726 li
252.291 180.684 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
252.291 180.684 mo
251.675 178.76 li
251.937 176.781 li
252.566 176.134 li
252.831 175.301 li
252.164 173.672 li
251.659 171.84 li
251.738 171.139 li
251.331 170.293 li
251.154 167.794 li
250.901 167.443 li
251.245 165.625 li
251.043 163.839 li
250.421 163.249 li
249.496 162.922 li
249.52 161.924 li
250.701 161.256 li
252.943 161.397 li
254.614 159.756 li
257.87 159.052 li
259.877 160.263 li
260.975 160.251 li
264.713 158.075 li
266.28 158.774 li
268.068 159.023 li
269.773 159.068 li
272.952 158.509 li
273.781 158.744 li
276.945 157.56 li
281.721 156.943 li
284.276 156.254 li
286.924 156.332 li
288.677 155.528 li
289.916 156.186 li
292.26 156.196 li
292.644 155.705 li
294.241 155.7 li
295.031 156.994 li
295.235 158.664 li
295.883 159.613 li
297.75 160.122 li
298.837 161.034 li
298.848 161.645 li
298.28 161.618 li
298.131 161.852 li
298.629 162.266 li
298.461 164.752 li
297.558 165.107 li
297.261 165.557 li
296.542 165.694 li
296.227 166.127 li
296.426 166.972 li
295.933 167.013 li
295.993 167.916 li
295.746 167.927 li
295.764 168.292 li
295.322 168.295 li
295.319 168.592 li
294.717 168.567 li
294.715 168.898 li
291.693 169.232 li
291.814 170.62 li
291.418 170.83 li
291.273 171.481 li
290.764 171.54 li
290.795 172.165 li
290.567 172.176 li
290.553 172.976 li
290.202 173.011 li
290.147 173.674 li
288.246 173.749 li
287.261 175.553 li
286.809 177.051 li
286.405 177.436 li
277.68 177.308 li
277.625 177.919 li
278.37 177.689 li
278.572 177.852 li
278.106 178.345 li
277.935 179.1 li
278.021 180.362 li
278.357 180.726 li
252.291 180.684 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
308.881 187.034 mo
306.799 188.383 li
306.539 188.464 li
306.471 187.689 li
305.65 187.775 li
305.633 187.396 li
305.089 187.385 li
305.019 186.194 li
304.546 186.215 li
304.293 185.655 li
303.978 185.686 li
303.971 185.132 li
303.48 185.136 li
303.458 184.653 li
302.931 184.641 li
302.866 183.605 li
302.252 183.615 li
302.227 183.062 li
301.773 183.116 li
301.696 182.583 li
301.204 182.587 li
301.143 182.018 li
300.669 182.022 li
300.29 181.051 li
299.683 180.853 li
299.7 180.453 li
299.206 180.423 li
299.183 179.921 li
298.672 179.91 li
298.358 178.467 li
297.062 178.231 li
297.001 176.932 li
296.613 176.915 li
296.624 176.411 li
297.08 176.372 li
296.828 174.751 li
297.09 174.704 li
297.116 173.747 li
296.833 173.725 li
296.883 172.923 li
296.602 172.953 li
296.654 172.186 li
296.988 172.153 li
297.246 171.271 li
297.792 171.246 li
297.807 170.428 li
298.126 170.448 li
298.08 169.841 li
297.483 169.537 li
297.516 169.118 li
297.024 169.175 li
297.045 166.996 li
296.426 166.972 li
296.227 166.127 li
296.542 165.694 li
297.261 165.557 li
297.558 165.107 li
298.461 164.752 li
298.629 162.266 li
298.131 161.852 li
298.28 161.618 li
298.848 161.645 li
298.837 161.034 li
297.75 160.122 li
295.883 159.613 li
295.235 158.664 li
295.031 156.994 li
294.241 155.7 li
299.44 155.655 li
307.233 155.701 li
307.368 162.915 li
307.774 162.898 li
307.799 163.891 li
309.108 163.872 li
309.061 164.432 li
310.405 164.411 li
310.425 164.899 li
311.131 164.87 li
311.139 165.463 li
312.201 165.489 li
312.223 165.175 li
312.842 165.185 li
312.78 163.67 li
313.329 163.7 li
313.321 163.072 li
313.905 163.066 li
313.913 162.403 li
314.931 162.188 li
315.006 161.416 li
315.628 161.462 li
315.833 160.842 li
316.878 160.837 li
316.857 161.204 li
319.033 161.156 li
319.061 161.417 li
319.379 161.404 li
319.398 161.875 li
320.07 161.867 li
320.064 162.182 li
321.359 162.238 li
321.405 162.97 li
322.094 162.944 li
322.107 163.293 li
323.482 163.626 li
323.781 164.54 li
324.206 164.542 li
324.281 165.132 li
324.83 165.165 li
324.886 165.721 li
325.274 165.707 li
325.297 166.333 li
326.068 166.62 li
326.065 167.021 li
326.456 167.094 li
326.864 167.619 li
327.307 167.656 li
327.313 168.335 li
328.291 168.51 li
328.316 168.718 li
330.489 168.765 li
330.499 169.026 li
331.045 169.008 li
331.077 169.929 li
331.571 169.913 li
331.561 170.661 li
332.092 170.696 li
332.454 172.509 li
332.84 172.462 li
332.855 172.913 li
333.243 172.918 li
333.212 173.545 li
333.477 173.571 li
333.476 174.075 li
333.739 174.031 li
333.662 174.364 li
334.286 174.569 li
334.316 174.95 li
335.015 175.31 li
335.015 176.369 li
335.333 176.411 li
335.404 177.484 li
335.054 177.53 li
335.236 181.962 li
334.867 181.974 li
334.515 182.989 li
334.182 183.035 li
334.143 183.953 li
324.856 184.011 li
324.815 184.325 li
319.583 184.327 li
318.58 185.178 li
317.382 184.186 li
316.369 183.896 li
315.073 183.981 li
313.401 181.762 li
312.869 181.645 li
312.315 182.273 li
311.258 182.628 li
310.688 185.368 li
308.881 187.034 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
308.881 187.034 mo
306.799 188.383 li
306.539 188.464 li
306.471 187.689 li
305.65 187.775 li
305.633 187.396 li
305.089 187.385 li
305.019 186.194 li
304.546 186.215 li
304.293 185.655 li
303.978 185.686 li
303.971 185.132 li
303.48 185.136 li
303.458 184.653 li
302.931 184.641 li
302.866 183.605 li
302.252 183.615 li
302.227 183.062 li
301.773 183.116 li
301.696 182.583 li
301.204 182.587 li
301.143 182.018 li
300.669 182.022 li
300.29 181.051 li
299.683 180.853 li
299.7 180.453 li
299.206 180.423 li
299.183 179.921 li
298.672 179.91 li
298.358 178.467 li
297.062 178.231 li
297.001 176.932 li
296.613 176.915 li
296.624 176.411 li
297.08 176.372 li
296.828 174.751 li
297.09 174.704 li
297.116 173.747 li
296.833 173.725 li
296.883 172.923 li
296.602 172.953 li
296.654 172.186 li
296.988 172.153 li
297.246 171.271 li
297.792 171.246 li
297.807 170.428 li
298.126 170.448 li
298.08 169.841 li
297.483 169.537 li
297.516 169.118 li
297.024 169.175 li
297.045 166.996 li
296.426 166.972 li
296.227 166.127 li
296.542 165.694 li
297.261 165.557 li
297.558 165.107 li
298.461 164.752 li
298.629 162.266 li
298.131 161.852 li
298.28 161.618 li
298.848 161.645 li
298.837 161.034 li
297.75 160.122 li
295.883 159.613 li
295.235 158.664 li
295.031 156.994 li
294.241 155.7 li
299.44 155.655 li
307.233 155.701 li
307.368 162.915 li
307.774 162.898 li
307.799 163.891 li
309.108 163.872 li
309.061 164.432 li
310.405 164.411 li
310.425 164.899 li
311.131 164.87 li
311.139 165.463 li
312.201 165.489 li
312.223 165.175 li
312.842 165.185 li
312.78 163.67 li
313.329 163.7 li
313.321 163.072 li
313.905 163.066 li
313.913 162.403 li
314.931 162.188 li
315.006 161.416 li
315.628 161.462 li
315.833 160.842 li
316.878 160.837 li
316.857 161.204 li
319.033 161.156 li
319.061 161.417 li
319.379 161.404 li
319.398 161.875 li
320.07 161.867 li
320.064 162.182 li
321.359 162.238 li
321.405 162.97 li
322.094 162.944 li
322.107 163.293 li
323.482 163.626 li
323.781 164.54 li
324.206 164.542 li
324.281 165.132 li
324.83 165.165 li
324.886 165.721 li
325.274 165.707 li
325.297 166.333 li
326.068 166.62 li
326.065 167.021 li
326.456 167.094 li
326.864 167.619 li
327.307 167.656 li
327.313 168.335 li
328.291 168.51 li
328.316 168.718 li
330.489 168.765 li
330.499 169.026 li
331.045 169.008 li
331.077 169.929 li
331.571 169.913 li
331.561 170.661 li
332.092 170.696 li
332.454 172.509 li
332.84 172.462 li
332.855 172.913 li
333.243 172.918 li
333.212 173.545 li
333.477 173.571 li
333.476 174.075 li
333.739 174.031 li
333.662 174.364 li
334.286 174.569 li
334.316 174.95 li
335.015 175.31 li
335.015 176.369 li
335.333 176.411 li
335.404 177.484 li
335.054 177.53 li
335.236 181.962 li
334.867 181.974 li
334.515 182.989 li
334.182 183.035 li
334.143 183.953 li
324.856 184.011 li
324.815 184.325 li
319.583 184.327 li
318.58 185.178 li
317.382 184.186 li
316.369 183.896 li
315.073 183.981 li
313.401 181.762 li
312.869 181.645 li
312.315 182.273 li
311.258 182.628 li
310.688 185.368 li
308.881 187.034 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
290.855 199.364 mo
282.578 199.463 li
283.007 196.289 li
283.365 194.771 li
283.417 192.076 li
284.429 190.627 li
281.262 190.736 li
280.488 191.017 li
279.871 190.617 li
279.732 189.985 li
280.345 188 li
280.135 187.008 li
280.639 186.255 li
280.134 185.675 li
281.213 185.152 li
281.567 184.217 li
280.972 182.931 li
280.047 182.718 li
279.393 182.007 li
279.425 180.948 li
278.357 180.726 li
278.021 180.362 li
277.935 179.1 li
278.106 178.345 li
278.572 177.852 li
278.37 177.689 li
277.625 177.919 li
277.68 177.308 li
286.405 177.436 li
286.809 177.051 li
287.261 175.553 li
288.246 173.749 li
290.147 173.674 li
290.202 173.011 li
290.553 172.976 li
290.567 172.176 li
290.795 172.165 li
290.764 171.54 li
291.273 171.481 li
291.418 170.83 li
291.814 170.62 li
291.693 169.232 li
294.715 168.898 li
294.717 168.567 li
295.319 168.592 li
295.322 168.295 li
295.764 168.292 li
295.746 167.927 li
295.993 167.916 li
295.933 167.013 li
296.426 166.972 li
297.045 166.996 li
297.024 169.175 li
297.516 169.118 li
297.483 169.537 li
298.08 169.841 li
298.126 170.448 li
297.807 170.428 li
297.792 171.246 li
297.246 171.271 li
296.988 172.153 li
296.654 172.186 li
296.602 172.953 li
296.883 172.923 li
296.833 173.725 li
297.116 173.747 li
297.09 174.704 li
296.828 174.751 li
297.08 176.372 li
296.624 176.411 li
296.613 176.915 li
297.001 176.932 li
297.062 178.231 li
298.358 178.467 li
298.672 179.91 li
299.183 179.921 li
299.206 180.423 li
299.7 180.453 li
299.683 180.853 li
300.29 181.051 li
300.669 182.022 li
301.143 182.018 li
301.204 182.587 li
301.696 182.583 li
301.773 183.116 li
302.227 183.062 li
302.252 183.615 li
302.866 183.605 li
302.931 184.641 li
303.458 184.653 li
303.48 185.136 li
303.971 185.132 li
303.978 185.686 li
304.293 185.655 li
304.546 186.215 li
305.019 186.194 li
305.089 187.385 li
305.633 187.396 li
305.65 187.775 li
306.471 187.689 li
306.539 188.464 li
306.799 188.383 li
306.808 188.988 li
306.247 188.994 li
306.263 189.771 li
305.108 189.803 li
305.139 190.096 li
304.823 190.092 li
304.763 191.113 li
304.429 191.093 li
304.393 191.474 li
303.572 191.51 li
303.592 191.181 li
302.122 191.21 li
302.093 191.747 li
300.744 191.737 li
300.785 191.477 li
300.029 191.424 li
299.694 192.906 li
298.936 193.923 li
299.035 194.919 li
298.305 196.899 li
297.402 198.163 li
295.095 198.528 li
295.081 198.958 li
294.388 199.456 li
292.693 199.449 li
291.28 199.12 li
290.855 199.364 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
290.855 199.364 mo
282.578 199.463 li
283.007 196.289 li
283.365 194.771 li
283.417 192.076 li
284.429 190.627 li
281.262 190.736 li
280.488 191.017 li
279.871 190.617 li
279.732 189.985 li
280.345 188 li
280.135 187.008 li
280.639 186.255 li
280.134 185.675 li
281.213 185.152 li
281.567 184.217 li
280.972 182.931 li
280.047 182.718 li
279.393 182.007 li
279.425 180.948 li
278.357 180.726 li
278.021 180.362 li
277.935 179.1 li
278.106 178.345 li
278.572 177.852 li
278.37 177.689 li
277.625 177.919 li
277.68 177.308 li
286.405 177.436 li
286.809 177.051 li
287.261 175.553 li
288.246 173.749 li
290.147 173.674 li
290.202 173.011 li
290.553 172.976 li
290.567 172.176 li
290.795 172.165 li
290.764 171.54 li
291.273 171.481 li
291.418 170.83 li
291.814 170.62 li
291.693 169.232 li
294.715 168.898 li
294.717 168.567 li
295.319 168.592 li
295.322 168.295 li
295.764 168.292 li
295.746 167.927 li
295.993 167.916 li
295.933 167.013 li
296.426 166.972 li
297.045 166.996 li
297.024 169.175 li
297.516 169.118 li
297.483 169.537 li
298.08 169.841 li
298.126 170.448 li
297.807 170.428 li
297.792 171.246 li
297.246 171.271 li
296.988 172.153 li
296.654 172.186 li
296.602 172.953 li
296.883 172.923 li
296.833 173.725 li
297.116 173.747 li
297.09 174.704 li
296.828 174.751 li
297.08 176.372 li
296.624 176.411 li
296.613 176.915 li
297.001 176.932 li
297.062 178.231 li
298.358 178.467 li
298.672 179.91 li
299.183 179.921 li
299.206 180.423 li
299.7 180.453 li
299.683 180.853 li
300.29 181.051 li
300.669 182.022 li
301.143 182.018 li
301.204 182.587 li
301.696 182.583 li
301.773 183.116 li
302.227 183.062 li
302.252 183.615 li
302.866 183.605 li
302.931 184.641 li
303.458 184.653 li
303.48 185.136 li
303.971 185.132 li
303.978 185.686 li
304.293 185.655 li
304.546 186.215 li
305.019 186.194 li
305.089 187.385 li
305.633 187.396 li
305.65 187.775 li
306.471 187.689 li
306.539 188.464 li
306.799 188.383 li
306.808 188.988 li
306.247 188.994 li
306.263 189.771 li
305.108 189.803 li
305.139 190.096 li
304.823 190.092 li
304.763 191.113 li
304.429 191.093 li
304.393 191.474 li
303.572 191.51 li
303.592 191.181 li
302.122 191.21 li
302.093 191.747 li
300.744 191.737 li
300.785 191.477 li
300.029 191.424 li
299.694 192.906 li
298.936 193.923 li
299.035 194.919 li
298.305 196.899 li
297.402 198.163 li
295.095 198.528 li
295.081 198.958 li
294.388 199.456 li
292.693 199.449 li
291.28 199.12 li
290.855 199.364 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
255.728 216.779 mo
247.929 216.541 li
247.909 217.038 li
246.415 217.047 li
246.347 218.13 li
239.543 218.194 li
239.535 219.358 li
235.971 219.288 li
234.821 220.052 li
229.009 213.755 li
230.138 209.336 li
226.314 197.747 li
228.048 189.99 li
227.2 184.837 li
225.598 179.52 li
220.622 172.931 li
234.444 172.957 li
234.533 173.735 li
252.164 173.672 li
252.831 175.301 li
252.566 176.134 li
251.937 176.781 li
251.675 178.76 li
252.291 180.684 li
252.36 182.605 li
253.081 182.613 li
253.109 183.894 li
253.609 184.002 li
253.726 188.946 li
253.759 190.863 li
252.356 190.863 li
252.321 191.418 li
249.755 191.335 li
249.708 191.683 li
249.128 191.668 li
249.148 191.977 li
248.694 192.006 li
248.657 193.874 li
248.326 193.894 li
248.268 195.434 li
248.831 195.485 li
248.889 196.654 li
249.203 196.635 li
249.481 198.496 li
249.911 198.935 li
249.994 200.497 li
250.296 200.564 li
250.635 202.041 li
250.112 202.056 li
250.142 202.519 li
249.812 202.557 li
249.845 202.795 li
249.322 202.811 li
249.095 204.167 li
248.262 204.236 li
247.648 208.21 li
248.76 208.964 li
248.95 210.291 li
249.609 210.507 li
249.633 210.883 li
250.784 210.914 li
250.767 211.464 li
251.101 211.511 li
251.114 212.814 li
251.38 212.883 li
251.397 213.43 li
251.989 213.702 li
252.025 214.556 li
252.874 214.504 li
252.874 214.778 li
253.398 214.814 li
253.453 215.41 li
254.076 215.372 li
254.126 215.883 li
254.453 215.846 li
254.47 216.102 li
255.754 216.366 li
255.728 216.779 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
255.728 216.779 mo
247.929 216.541 li
247.909 217.038 li
246.415 217.047 li
246.347 218.13 li
239.543 218.194 li
239.535 219.358 li
235.971 219.288 li
234.821 220.052 li
229.009 213.755 li
230.138 209.336 li
226.314 197.747 li
228.048 189.99 li
227.2 184.837 li
225.598 179.52 li
220.622 172.931 li
234.444 172.957 li
234.533 173.735 li
252.164 173.672 li
252.831 175.301 li
252.566 176.134 li
251.937 176.781 li
251.675 178.76 li
252.291 180.684 li
252.36 182.605 li
253.081 182.613 li
253.109 183.894 li
253.609 184.002 li
253.726 188.946 li
253.759 190.863 li
252.356 190.863 li
252.321 191.418 li
249.755 191.335 li
249.708 191.683 li
249.128 191.668 li
249.148 191.977 li
248.694 192.006 li
248.657 193.874 li
248.326 193.894 li
248.268 195.434 li
248.831 195.485 li
248.889 196.654 li
249.203 196.635 li
249.481 198.496 li
249.911 198.935 li
249.994 200.497 li
250.296 200.564 li
250.635 202.041 li
250.112 202.056 li
250.142 202.519 li
249.812 202.557 li
249.845 202.795 li
249.322 202.811 li
249.095 204.167 li
248.262 204.236 li
247.648 208.21 li
248.76 208.964 li
248.95 210.291 li
249.609 210.507 li
249.633 210.883 li
250.784 210.914 li
250.767 211.464 li
251.101 211.511 li
251.114 212.814 li
251.38 212.883 li
251.397 213.43 li
251.989 213.702 li
252.025 214.556 li
252.874 214.504 li
252.874 214.778 li
253.398 214.814 li
253.453 215.41 li
254.076 215.372 li
254.126 215.883 li
254.453 215.846 li
254.47 216.102 li
255.754 216.366 li
255.728 216.779 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
283.007 196.289 mo
279.459 196.35 li
279.427 195.093 li
275.843 195.178 li
275.834 196.282 li
258.166 196.381 li
258.095 188.925 li
253.726 188.946 li
253.609 184.002 li
253.109 183.894 li
253.081 182.613 li
252.36 182.605 li
252.291 180.684 li
278.357 180.726 li
279.425 180.948 li
279.393 182.007 li
280.047 182.718 li
280.972 182.931 li
281.567 184.217 li
281.213 185.152 li
280.134 185.675 li
280.639 186.255 li
280.135 187.008 li
280.345 188 li
279.732 189.985 li
279.871 190.617 li
280.488 191.017 li
281.262 190.736 li
284.429 190.627 li
283.417 192.076 li
283.365 194.771 li
283.007 196.289 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
283.007 196.289 mo
279.459 196.35 li
279.427 195.093 li
275.843 195.178 li
275.834 196.282 li
258.166 196.381 li
258.095 188.925 li
253.726 188.946 li
253.609 184.002 li
253.109 183.894 li
253.081 182.613 li
252.36 182.605 li
252.291 180.684 li
278.357 180.726 li
279.425 180.948 li
279.393 182.007 li
280.047 182.718 li
280.972 182.931 li
281.567 184.217 li
281.213 185.152 li
280.134 185.675 li
280.639 186.255 li
280.135 187.008 li
280.345 188 li
279.732 189.985 li
279.871 190.617 li
280.488 191.017 li
281.262 190.736 li
284.429 190.627 li
283.417 192.076 li
283.365 194.771 li
283.007 196.289 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
308.464 196.131 mo
308.264 191.448 li
307.819 191.294 li
307.862 190.671 li
308.948 189.848 li
308.881 187.034 li
310.688 185.368 li
311.258 182.628 li
312.315 182.273 li
312.869 181.645 li
313.401 181.762 li
315.073 183.981 li
316.369 183.896 li
317.382 184.186 li
318.58 185.178 li
319.583 184.327 li
324.815 184.325 li
324.856 184.011 li
334.143 183.953 li
337.848 183.973 li
337.835 183.576 li
338.362 183.559 li
338.366 194.112 li
323.813 194.154 li
323.15 193.73 li
322.076 191.734 li
321.221 191.334 li
319.559 191.396 li
318.13 192.02 li
317.572 192.956 li
316.195 193.992 li
309.866 195.366 li
308.902 196.147 li
308.464 196.131 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
308.464 196.131 mo
308.264 191.448 li
307.819 191.294 li
307.862 190.671 li
308.948 189.848 li
308.881 187.034 li
310.688 185.368 li
311.258 182.628 li
312.315 182.273 li
312.869 181.645 li
313.401 181.762 li
315.073 183.981 li
316.369 183.896 li
317.382 184.186 li
318.58 185.178 li
319.583 184.327 li
324.815 184.325 li
324.856 184.011 li
334.143 183.953 li
337.848 183.973 li
337.835 183.576 li
338.362 183.559 li
338.366 194.112 li
323.813 194.154 li
323.15 193.73 li
322.076 191.734 li
321.221 191.334 li
319.559 191.396 li
318.13 192.02 li
317.572 192.956 li
316.195 193.992 li
309.866 195.366 li
308.902 196.147 li
308.464 196.131 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
300.671 209.614 mo
299.76 209.105 li
298.29 210.423 li
296.872 210.984 li
295.437 211.17 li
293.114 212.05 li
292.382 213.437 li
292.041 213.573 li
291.331 208.329 li
291.608 206.874 li
290.674 202.057 li
290.855 199.364 li
291.28 199.12 li
292.693 199.449 li
294.388 199.456 li
295.081 198.958 li
295.095 198.528 li
297.402 198.163 li
298.305 196.899 li
299.035 194.919 li
298.936 193.923 li
299.694 192.906 li
300.029 191.424 li
300.785 191.477 li
300.744 191.737 li
302.093 191.747 li
302.122 191.21 li
303.592 191.181 li
303.572 191.51 li
304.393 191.474 li
304.429 191.093 li
304.763 191.113 li
304.823 190.092 li
305.139 190.096 li
305.108 189.803 li
306.263 189.771 li
306.247 188.994 li
306.808 188.988 li
306.799 188.383 li
308.881 187.034 li
308.948 189.848 li
307.862 190.671 li
307.819 191.294 li
308.264 191.448 li
308.464 196.131 li
306.387 196.218 li
305.151 197.132 li
304.488 198.331 li
303.802 198.24 li
303.584 198.439 li
303.117 200.112 li
301.372 200.911 li
301.272 201.775 li
300.799 202.501 li
300.671 209.614 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
300.671 209.614 mo
299.76 209.105 li
298.29 210.423 li
296.872 210.984 li
295.437 211.17 li
293.114 212.05 li
292.382 213.437 li
292.041 213.573 li
291.331 208.329 li
291.608 206.874 li
290.674 202.057 li
290.855 199.364 li
291.28 199.12 li
292.693 199.449 li
294.388 199.456 li
295.081 198.958 li
295.095 198.528 li
297.402 198.163 li
298.305 196.899 li
299.035 194.919 li
298.936 193.923 li
299.694 192.906 li
300.029 191.424 li
300.785 191.477 li
300.744 191.737 li
302.093 191.747 li
302.122 191.21 li
303.592 191.181 li
303.572 191.51 li
304.393 191.474 li
304.429 191.093 li
304.763 191.113 li
304.823 190.092 li
305.139 190.096 li
305.108 189.803 li
306.263 189.771 li
306.247 188.994 li
306.808 188.988 li
306.799 188.383 li
308.881 187.034 li
308.948 189.848 li
307.862 190.671 li
307.819 191.294 li
308.264 191.448 li
308.464 196.131 li
306.387 196.218 li
305.151 197.132 li
304.488 198.331 li
303.802 198.24 li
303.584 198.439 li
303.117 200.112 li
301.372 200.911 li
301.272 201.775 li
300.799 202.501 li
300.671 209.614 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
255.728 216.779 mo
255.754 216.366 li
254.47 216.102 li
254.453 215.846 li
254.126 215.883 li
254.076 215.372 li
253.453 215.41 li
253.398 214.814 li
252.874 214.778 li
252.874 214.504 li
252.025 214.556 li
251.989 213.702 li
251.397 213.43 li
251.38 212.883 li
251.114 212.814 li
251.101 211.511 li
250.767 211.464 li
250.784 210.914 li
249.633 210.883 li
249.609 210.507 li
248.95 210.291 li
248.76 208.964 li
247.648 208.21 li
248.262 204.236 li
249.095 204.167 li
249.322 202.811 li
249.845 202.795 li
249.812 202.557 li
250.142 202.519 li
250.112 202.056 li
250.635 202.041 li
250.296 200.564 li
249.994 200.497 li
249.911 198.935 li
249.481 198.496 li
249.203 196.635 li
248.889 196.654 li
248.831 195.485 li
248.268 195.434 li
248.326 193.894 li
248.657 193.874 li
248.694 192.006 li
249.148 191.977 li
249.128 191.668 li
249.708 191.683 li
249.755 191.335 li
252.321 191.418 li
252.356 190.863 li
253.759 190.863 li
253.726 188.946 li
258.095 188.925 li
258.166 196.381 li
257.099 196.393 li
257.161 196.82 li
257.662 197.014 li
257.752 197.612 li
257.215 198.265 li
256.964 199.313 li
257.805 200.469 li
260.19 202.633 li
262.876 203.165 li
264.237 203.156 li
265.83 204.44 li
265.798 205.37 li
265.065 205.961 li
265.342 208.898 li
266.626 210.01 li
267.534 210.061 li
267.554 211.912 li
269.348 213.765 li
267.708 213.976 li
267.521 214.637 li
268.109 215.803 li
268.15 216.502 li
268.651 217.979 li
268.482 218.365 li
268.006 218.528 li
267.706 219.656 li
266.05 221.884 li
261.347 223.264 li
260.789 222.341 li
259.43 221.652 li
257.513 218.126 li
255.724 217.001 li
255.728 216.779 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
255.728 216.779 mo
255.754 216.366 li
254.47 216.102 li
254.453 215.846 li
254.126 215.883 li
254.076 215.372 li
253.453 215.41 li
253.398 214.814 li
252.874 214.778 li
252.874 214.504 li
252.025 214.556 li
251.989 213.702 li
251.397 213.43 li
251.38 212.883 li
251.114 212.814 li
251.101 211.511 li
250.767 211.464 li
250.784 210.914 li
249.633 210.883 li
249.609 210.507 li
248.95 210.291 li
248.76 208.964 li
247.648 208.21 li
248.262 204.236 li
249.095 204.167 li
249.322 202.811 li
249.845 202.795 li
249.812 202.557 li
250.142 202.519 li
250.112 202.056 li
250.635 202.041 li
250.296 200.564 li
249.994 200.497 li
249.911 198.935 li
249.481 198.496 li
249.203 196.635 li
248.889 196.654 li
248.831 195.485 li
248.268 195.434 li
248.326 193.894 li
248.657 193.874 li
248.694 192.006 li
249.148 191.977 li
249.128 191.668 li
249.708 191.683 li
249.755 191.335 li
252.321 191.418 li
252.356 190.863 li
253.759 190.863 li
253.726 188.946 li
258.095 188.925 li
258.166 196.381 li
257.099 196.393 li
257.161 196.82 li
257.662 197.014 li
257.752 197.612 li
257.215 198.265 li
256.964 199.313 li
257.805 200.469 li
260.19 202.633 li
262.876 203.165 li
264.237 203.156 li
265.83 204.44 li
265.798 205.37 li
265.065 205.961 li
265.342 208.898 li
266.626 210.01 li
267.534 210.061 li
267.554 211.912 li
269.348 213.765 li
267.708 213.976 li
267.521 214.637 li
268.109 215.803 li
268.15 216.502 li
268.651 217.979 li
268.482 218.365 li
268.006 218.528 li
267.706 219.656 li
266.05 221.884 li
261.347 223.264 li
260.789 222.341 li
259.43 221.652 li
257.513 218.126 li
255.724 217.001 li
255.728 216.779 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
300.671 209.614 mo
300.799 202.501 li
301.272 201.775 li
301.372 200.911 li
303.117 200.112 li
303.584 198.439 li
303.802 198.24 li
304.488 198.331 li
305.151 197.132 li
306.387 196.218 li
308.464 196.131 li
308.902 196.147 li
309.866 195.366 li
316.195 193.992 li
317.572 192.956 li
318.13 192.02 li
319.559 191.396 li
321.221 191.334 li
322.076 191.734 li
323.15 193.73 li
323.813 194.154 li
338.366 194.112 li
338.387 199.123 li
318.532 199.138 li
313.803 203.071 li
313.144 204.025 li
312.043 204.379 li
310.188 206.274 li
309.546 207.141 li
309.636 208.029 li
307.98 210.413 li
306.351 210.567 li
305.218 209.724 li
303.85 210.263 li
302.515 210.355 li
300.671 209.614 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
300.671 209.614 mo
300.799 202.501 li
301.272 201.775 li
301.372 200.911 li
303.117 200.112 li
303.584 198.439 li
303.802 198.24 li
304.488 198.331 li
305.151 197.132 li
306.387 196.218 li
308.464 196.131 li
308.902 196.147 li
309.866 195.366 li
316.195 193.992 li
317.572 192.956 li
318.13 192.02 li
319.559 191.396 li
321.221 191.334 li
322.076 191.734 li
323.15 193.73 li
323.813 194.154 li
338.366 194.112 li
338.387 199.123 li
318.532 199.138 li
313.803 203.071 li
313.144 204.025 li
312.043 204.379 li
310.188 206.274 li
309.546 207.141 li
309.636 208.029 li
307.98 210.413 li
306.351 210.567 li
305.218 209.724 li
303.85 210.263 li
302.515 210.355 li
300.671 209.614 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
269.348 213.765 mo
267.554 211.912 li
267.534 210.061 li
266.626 210.01 li
265.342 208.898 li
265.065 205.961 li
265.798 205.37 li
265.83 204.44 li
264.237 203.156 li
262.876 203.165 li
260.19 202.633 li
257.805 200.469 li
256.964 199.313 li
257.215 198.265 li
257.752 197.612 li
257.662 197.014 li
257.161 196.82 li
257.099 196.393 li
258.166 196.381 li
275.834 196.282 li
275.843 195.178 li
279.427 195.093 li
279.459 196.35 li
283.007 196.289 li
282.578 199.463 li
281.534 201.529 li
281.824 203.389 li
281.607 204.242 li
282.014 205.355 li
281.546 206.066 li
282.538 206.685 li
283.292 208.449 li
284.346 208.636 li
284.884 210.616 li
285.467 211.135 li
285.032 211.465 li
284.953 211.966 li
284.529 212.176 li
284.447 213.618 li
269.348 213.765 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
269.348 213.765 mo
267.554 211.912 li
267.534 210.061 li
266.626 210.01 li
265.342 208.898 li
265.065 205.961 li
265.798 205.37 li
265.83 204.44 li
264.237 203.156 li
262.876 203.165 li
260.19 202.633 li
257.805 200.469 li
256.964 199.313 li
257.215 198.265 li
257.752 197.612 li
257.662 197.014 li
257.161 196.82 li
257.099 196.393 li
258.166 196.381 li
275.834 196.282 li
275.843 195.178 li
279.427 195.093 li
279.459 196.35 li
283.007 196.289 li
282.578 199.463 li
281.534 201.529 li
281.824 203.389 li
281.607 204.242 li
282.014 205.355 li
281.546 206.066 li
282.538 206.685 li
283.292 208.449 li
284.346 208.636 li
284.884 210.616 li
285.467 211.135 li
285.032 211.465 li
284.953 211.966 li
284.529 212.176 li
284.447 213.618 li
269.348 213.765 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
294.723 220.935 mo
294.75 220.046 li
295.321 220.02 li
295.314 213.694 li
296.859 213.657 li
296.872 210.984 li
298.29 210.423 li
299.76 209.105 li
300.671 209.614 li
302.515 210.355 li
303.85 210.263 li
305.218 209.724 li
306.351 210.567 li
307.98 210.413 li
309.636 208.029 li
309.546 207.141 li
310.188 206.274 li
312.043 204.379 li
313.144 204.025 li
313.803 203.071 li
318.532 199.138 li
338.387 199.123 li
338.38 204.914 li
338.409 206.904 li
338.391 208.516 li
334.249 208.493 li
333.983 209.393 li
333.426 209.36 li
333.009 209.888 li
331.564 209.868 li
330.984 210.195 li
325.895 209.909 li
324.694 212.23 li
323.192 213.448 li
321.723 214.101 li
318.811 212.481 li
318.256 211.612 li
317.538 211.502 li
316.854 210.912 li
314.703 211.03 li
313.665 212.031 li
313.399 212.743 li
310.999 212.703 li
310.866 213.273 li
309.474 214.032 li
307.799 214.273 li
307.398 215.453 li
307.306 216.928 li
306.214 218.153 li
305.619 220.399 li
304.763 221.818 li
294.723 220.935 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
294.723 220.935 mo
294.75 220.046 li
295.321 220.02 li
295.314 213.694 li
296.859 213.657 li
296.872 210.984 li
298.29 210.423 li
299.76 209.105 li
300.671 209.614 li
302.515 210.355 li
303.85 210.263 li
305.218 209.724 li
306.351 210.567 li
307.98 210.413 li
309.636 208.029 li
309.546 207.141 li
310.188 206.274 li
312.043 204.379 li
313.144 204.025 li
313.803 203.071 li
318.532 199.138 li
338.387 199.123 li
338.38 204.914 li
338.409 206.904 li
338.391 208.516 li
334.249 208.493 li
333.983 209.393 li
333.426 209.36 li
333.009 209.888 li
331.564 209.868 li
330.984 210.195 li
325.895 209.909 li
324.694 212.23 li
323.192 213.448 li
321.723 214.101 li
318.811 212.481 li
318.256 211.612 li
317.538 211.502 li
316.854 210.912 li
314.703 211.03 li
313.665 212.031 li
313.399 212.743 li
310.999 212.703 li
310.866 213.273 li
309.474 214.032 li
307.799 214.273 li
307.398 215.453 li
307.306 216.928 li
306.214 218.153 li
305.619 220.399 li
304.763 221.818 li
294.723 220.935 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
291.476 220.815 mo
291.651 219.799 li
291.082 219.16 li
289.663 219.928 li
288.908 219.743 li
288.877 218.771 li
287.798 218.362 li
287.611 216.713 li
287.157 215.982 li
286.838 215.861 li
286.283 216.214 li
285.565 216.095 li
285.181 215.721 li
285.135 215.159 li
285.882 214.488 li
285.43 214.477 li
285.43 214.134 li
284.798 214.012 li
284.447 213.618 li
284.529 212.176 li
284.953 211.966 li
285.032 211.465 li
285.467 211.135 li
284.884 210.616 li
284.346 208.636 li
283.292 208.449 li
282.538 206.685 li
281.546 206.066 li
282.014 205.355 li
281.607 204.242 li
281.824 203.389 li
281.534 201.529 li
282.578 199.463 li
290.855 199.364 li
290.674 202.057 li
291.608 206.874 li
291.331 208.329 li
292.041 213.573 li
292.382 213.437 li
293.114 212.05 li
295.437 211.17 li
296.872 210.984 li
296.859 213.657 li
295.314 213.694 li
295.321 220.02 li
294.75 220.046 li
294.723 220.935 li
291.476 220.815 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
291.476 220.815 mo
291.651 219.799 li
291.082 219.16 li
289.663 219.928 li
288.908 219.743 li
288.877 218.771 li
287.798 218.362 li
287.611 216.713 li
287.157 215.982 li
286.838 215.861 li
286.283 216.214 li
285.565 216.095 li
285.181 215.721 li
285.135 215.159 li
285.882 214.488 li
285.43 214.477 li
285.43 214.134 li
284.798 214.012 li
284.447 213.618 li
284.529 212.176 li
284.953 211.966 li
285.032 211.465 li
285.467 211.135 li
284.884 210.616 li
284.346 208.636 li
283.292 208.449 li
282.538 206.685 li
281.546 206.066 li
282.014 205.355 li
281.607 204.242 li
281.824 203.389 li
281.534 201.529 li
282.578 199.463 li
290.855 199.364 li
290.674 202.057 li
291.608 206.874 li
291.331 208.329 li
292.041 213.573 li
292.382 213.437 li
293.114 212.05 li
295.437 211.17 li
296.872 210.984 li
296.859 213.657 li
295.314 213.694 li
295.321 220.02 li
294.75 220.046 li
294.723 220.935 li
291.476 220.815 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
308.421 229.535 mo
305.601 221.577 li
305.234 221.9 li
304.763 221.818 li
305.619 220.399 li
306.214 218.153 li
307.306 216.928 li
307.398 215.453 li
307.799 214.273 li
309.474 214.032 li
310.866 213.273 li
310.999 212.703 li
313.399 212.743 li
313.665 212.031 li
314.703 211.03 li
316.854 210.912 li
317.538 211.502 li
318.256 211.612 li
318.811 212.481 li
321.723 214.101 li
323.192 213.448 li
324.694 212.23 li
325.895 209.909 li
330.984 210.195 li
331.564 209.868 li
333.009 209.888 li
333.426 209.36 li
333.983 209.393 li
334.249 208.493 li
338.391 208.516 li
338.388 211.138 li
341.497 213.85 li
341.411 214.451 li
341.962 214.862 li
341.951 216.179 li
341.237 216.662 li
341.003 217.506 li
339.754 219.166 li
336.322 222.328 li
335.082 222.538 li
334.277 224.337 li
332.124 225.634 li
331.419 226.765 li
330.805 227.007 li
329.988 227.851 li
328.793 228.284 li
327.545 228.157 li
325.755 228.832 li
324.907 228.777 li
323.411 229.444 li
321.121 229.63 li
319.226 229.31 li
317.016 228.05 li
315.088 227.802 li
314.73 227.509 li
312.768 228.541 li
312.544 228.992 li
311.939 228.965 li
311.264 229.367 li
310.717 229.083 li
308.421 229.535 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
308.421 229.535 mo
305.601 221.577 li
305.234 221.9 li
304.763 221.818 li
305.619 220.399 li
306.214 218.153 li
307.306 216.928 li
307.398 215.453 li
307.799 214.273 li
309.474 214.032 li
310.866 213.273 li
310.999 212.703 li
313.399 212.743 li
313.665 212.031 li
314.703 211.03 li
316.854 210.912 li
317.538 211.502 li
318.256 211.612 li
318.811 212.481 li
321.723 214.101 li
323.192 213.448 li
324.694 212.23 li
325.895 209.909 li
330.984 210.195 li
331.564 209.868 li
333.009 209.888 li
333.426 209.36 li
333.983 209.393 li
334.249 208.493 li
338.391 208.516 li
338.388 211.138 li
341.497 213.85 li
341.411 214.451 li
341.962 214.862 li
341.951 216.179 li
341.237 216.662 li
341.003 217.506 li
339.754 219.166 li
336.322 222.328 li
335.082 222.538 li
334.277 224.337 li
332.124 225.634 li
331.419 226.765 li
330.805 227.007 li
329.988 227.851 li
328.793 228.284 li
327.545 228.157 li
325.755 228.832 li
324.907 228.777 li
323.411 229.444 li
321.121 229.63 li
319.226 229.31 li
317.016 228.05 li
315.088 227.802 li
314.73 227.509 li
312.768 228.541 li
312.544 228.992 li
311.939 228.965 li
311.264 229.367 li
310.717 229.083 li
308.421 229.535 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
276.624 229.506 mo
275.787 226.212 li
275.351 225.536 li
274.771 225.362 li
274.921 224.331 li
274.129 223.777 li
273.276 222.15 li
272.217 219.031 li
271.305 217.319 li
270.919 216.947 li
268.97 216.884 li
268.15 216.502 li
268.109 215.803 li
267.521 214.637 li
267.708 213.976 li
269.348 213.765 li
284.447 213.618 li
284.798 214.012 li
285.43 214.134 li
285.43 214.477 li
285.882 214.488 li
285.135 215.159 li
285.181 215.721 li
285.565 216.095 li
286.283 216.214 li
286.838 215.861 li
287.157 215.982 li
287.611 216.713 li
287.798 218.362 li
288.877 218.771 li
288.908 219.743 li
289.663 219.928 li
291.082 219.16 li
291.651 219.799 li
291.476 220.815 li
290.625 222.904 li
291.499 224.107 li
292.414 224.405 li
292.834 225.936 li
293.748 225.876 li
294.169 226.334 li
293.902 228.339 li
293.489 228.733 li
293.613 229.169 li
292.926 229.593 li
293.03 230.32 li
294.049 231.037 li
294.135 231.374 li
294.026 231.991 li
293.508 232.355 li
293.886 233.374 li
293.58 234.901 li
293.16 235.498 li
292.4 235.822 li
292.193 236.511 li
291.762 236.514 li
288.742 236.439 li
288.691 228.877 li
288.057 228.312 li
285.801 228.814 li
283.689 228.426 li
281.868 228.655 li
281.253 228.788 li
280.1 229.869 li
279.064 230.195 li
277.569 229.405 li
276.624 229.506 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
276.624 229.506 mo
275.787 226.212 li
275.351 225.536 li
274.771 225.362 li
274.921 224.331 li
274.129 223.777 li
273.276 222.15 li
272.217 219.031 li
271.305 217.319 li
270.919 216.947 li
268.97 216.884 li
268.15 216.502 li
268.109 215.803 li
267.521 214.637 li
267.708 213.976 li
269.348 213.765 li
284.447 213.618 li
284.798 214.012 li
285.43 214.134 li
285.43 214.477 li
285.882 214.488 li
285.135 215.159 li
285.181 215.721 li
285.565 216.095 li
286.283 216.214 li
286.838 215.861 li
287.157 215.982 li
287.611 216.713 li
287.798 218.362 li
288.877 218.771 li
288.908 219.743 li
289.663 219.928 li
291.082 219.16 li
291.651 219.799 li
291.476 220.815 li
290.625 222.904 li
291.499 224.107 li
292.414 224.405 li
292.834 225.936 li
293.748 225.876 li
294.169 226.334 li
293.902 228.339 li
293.489 228.733 li
293.613 229.169 li
292.926 229.593 li
293.03 230.32 li
294.049 231.037 li
294.135 231.374 li
294.026 231.991 li
293.508 232.355 li
293.886 233.374 li
293.58 234.901 li
293.16 235.498 li
292.4 235.822 li
292.193 236.511 li
291.762 236.514 li
288.742 236.439 li
288.691 228.877 li
288.057 228.312 li
285.801 228.814 li
283.689 228.426 li
281.868 228.655 li
281.253 228.788 li
280.1 229.869 li
279.064 230.195 li
277.569 229.405 li
276.624 229.506 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
271.535 242.476 mo
270.28 240.739 li
269.601 241.2 li
271.173 242.48 li
267.853 242.404 li
267.639 241.513 li
268.511 241.108 li
269.524 241.069 li
269.08 239.329 li
268.534 238.817 li
267.977 236.625 li
266.385 235.049 li
266.358 234.286 li
265.971 233.866 li
265.863 233.209 li
265.372 233.067 li
265.249 231.56 li
264.079 230.776 li
263.539 228.951 li
261.06 226.846 li
260.869 225.97 li
261.509 223.647 li
261.347 223.264 li
266.05 221.884 li
267.706 219.656 li
268.006 218.528 li
268.482 218.365 li
268.651 217.979 li
268.15 216.502 li
268.97 216.884 li
270.919 216.947 li
271.305 217.319 li
272.217 219.031 li
273.276 222.15 li
274.129 223.777 li
274.921 224.331 li
274.771 225.362 li
275.351 225.536 li
275.787 226.212 li
276.624 229.506 li
275.912 232.606 li
277.409 234.72 li
277.893 236.019 li
277.575 236.528 li
273.751 236.579 li
273.603 237.334 li
274.031 237.905 li
273.416 238.312 li
273.935 238.657 li
273.665 239.062 li
274.084 239.785 li
273.507 241.495 li
274.02 242.043 li
274.042 242.449 li
271.535 242.476 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
271.535 242.476 mo
270.28 240.739 li
269.601 241.2 li
271.173 242.48 li
267.853 242.404 li
267.639 241.513 li
268.511 241.108 li
269.524 241.069 li
269.08 239.329 li
268.534 238.817 li
267.977 236.625 li
266.385 235.049 li
266.358 234.286 li
265.971 233.866 li
265.863 233.209 li
265.372 233.067 li
265.249 231.56 li
264.079 230.776 li
263.539 228.951 li
261.06 226.846 li
260.869 225.97 li
261.509 223.647 li
261.347 223.264 li
266.05 221.884 li
267.706 219.656 li
268.006 218.528 li
268.482 218.365 li
268.651 217.979 li
268.15 216.502 li
268.97 216.884 li
270.919 216.947 li
271.305 217.319 li
272.217 219.031 li
273.276 222.15 li
274.129 223.777 li
274.921 224.331 li
274.771 225.362 li
275.351 225.536 li
275.787 226.212 li
276.624 229.506 li
275.912 232.606 li
277.409 234.72 li
277.893 236.019 li
277.575 236.528 li
273.751 236.579 li
273.603 237.334 li
274.031 237.905 li
273.416 238.312 li
273.935 238.657 li
273.665 239.062 li
274.084 239.785 li
273.507 241.495 li
274.02 242.043 li
274.042 242.449 li
271.535 242.476 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
264.032 242.802 mo
262.974 241.507 li
260.921 241.728 li
258.694 240.774 li
258.13 240.841 li
253.271 236.704 li
252.094 236.912 li
251.205 236.763 li
250.354 237.327 li
248.765 237.442 li
246.63 232.222 li
241.452 227.957 li
234.821 220.052 li
235.971 219.288 li
239.535 219.358 li
239.543 218.194 li
246.347 218.13 li
246.415 217.047 li
247.909 217.038 li
247.929 216.541 li
255.728 216.779 li
255.724 217.001 li
257.513 218.126 li
259.43 221.652 li
260.789 222.341 li
261.347 223.264 li
261.509 223.647 li
260.869 225.97 li
261.06 226.846 li
263.539 228.951 li
264.079 230.776 li
265.249 231.56 li
265.372 233.067 li
265.863 233.209 li
265.971 233.866 li
266.358 234.286 li
266.385 235.049 li
267.977 236.625 li
268.534 238.817 li
269.08 239.329 li
269.524 241.069 li
268.511 241.108 li
267.639 241.513 li
267.853 242.404 li
266.95 244.178 li
265.197 244.192 li
264.032 242.802 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
264.032 242.802 mo
262.974 241.507 li
260.921 241.728 li
258.694 240.774 li
258.13 240.841 li
253.271 236.704 li
252.094 236.912 li
251.205 236.763 li
250.354 237.327 li
248.765 237.442 li
246.63 232.222 li
241.452 227.957 li
234.821 220.052 li
235.971 219.288 li
239.535 219.358 li
239.543 218.194 li
246.347 218.13 li
246.415 217.047 li
247.909 217.038 li
247.929 216.541 li
255.728 216.779 li
255.724 217.001 li
257.513 218.126 li
259.43 221.652 li
260.789 222.341 li
261.347 223.264 li
261.509 223.647 li
260.869 225.97 li
261.06 226.846 li
263.539 228.951 li
264.079 230.776 li
265.249 231.56 li
265.372 233.067 li
265.863 233.209 li
265.971 233.866 li
266.358 234.286 li
266.385 235.049 li
267.977 236.625 li
268.534 238.817 li
269.08 239.329 li
269.524 241.069 li
268.511 241.108 li
267.639 241.513 li
267.853 242.404 li
266.95 244.178 li
265.197 244.192 li
264.032 242.802 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
289.374 242.107 mo
289.974 241.468 li
291.343 240.961 li
291.69 239.606 li
291.429 238.159 li
291.762 236.514 li
292.193 236.511 li
292.4 235.822 li
293.16 235.498 li
293.58 234.901 li
293.886 233.374 li
293.508 232.355 li
294.026 231.991 li
294.135 231.374 li
294.049 231.037 li
293.03 230.32 li
292.926 229.593 li
293.613 229.169 li
293.489 228.733 li
293.902 228.339 li
294.169 226.334 li
293.748 225.876 li
292.834 225.936 li
292.414 224.405 li
291.499 224.107 li
290.625 222.904 li
291.476 220.815 li
294.723 220.935 li
304.763 221.818 li
305.234 221.9 li
305.601 221.577 li
308.421 229.535 li
308.424 237.248 li
306.185 237.648 li
304.245 238.952 li
303.106 239.289 li
301.067 239.124 li
299.535 239.871 li
297.154 239.758 li
296.512 238.923 li
295.255 238.913 li
293.783 241.236 li
293.439 242.658 li
292.634 243.299 li
289.539 244.824 li
289.374 242.107 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
289.374 242.107 mo
289.974 241.468 li
291.343 240.961 li
291.69 239.606 li
291.429 238.159 li
291.762 236.514 li
292.193 236.511 li
292.4 235.822 li
293.16 235.498 li
293.58 234.901 li
293.886 233.374 li
293.508 232.355 li
294.026 231.991 li
294.135 231.374 li
294.049 231.037 li
293.03 230.32 li
292.926 229.593 li
293.613 229.169 li
293.489 228.733 li
293.902 228.339 li
294.169 226.334 li
293.748 225.876 li
292.834 225.936 li
292.414 224.405 li
291.499 224.107 li
290.625 222.904 li
291.476 220.815 li
294.723 220.935 li
304.763 221.818 li
305.234 221.9 li
305.601 221.577 li
308.421 229.535 li
308.424 237.248 li
306.185 237.648 li
304.245 238.952 li
303.106 239.289 li
301.067 239.124 li
299.535 239.871 li
297.154 239.758 li
296.512 238.923 li
295.255 238.913 li
293.783 241.236 li
293.439 242.658 li
292.634 243.299 li
289.539 244.824 li
289.374 242.107 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
309.374 240.125 mo
308.424 237.248 li
308.421 229.535 li
310.717 229.083 li
311.264 229.367 li
311.939 228.965 li
312.544 228.992 li
312.768 228.541 li
314.73 227.509 li
315.088 227.802 li
317.016 228.05 li
319.226 229.31 li
321.121 229.63 li
323.411 229.444 li
324.907 228.777 li
325.755 228.832 li
327.545 228.157 li
328.793 228.284 li
329.988 227.851 li
330.805 227.007 li
331.419 226.765 li
332.124 225.634 li
334.277 224.337 li
335.082 222.538 li
336.322 222.328 li
336.226 229.432 li
334.053 230.047 li
332.151 229.956 li
328.632 231.044 li
325.732 231.027 li
323.916 231.874 li
323.152 232.666 li
320.709 233.742 li
320.615 234.883 li
319.745 236.002 li
316.173 237.615 li
314.889 237.784 li
313.536 238.821 li
312.458 240.22 li
311.641 240.015 li
309.374 240.125 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
309.374 240.125 mo
308.424 237.248 li
308.421 229.535 li
310.717 229.083 li
311.264 229.367 li
311.939 228.965 li
312.544 228.992 li
312.768 228.541 li
314.73 227.509 li
315.088 227.802 li
317.016 228.05 li
319.226 229.31 li
321.121 229.63 li
323.411 229.444 li
324.907 228.777 li
325.755 228.832 li
327.545 228.157 li
328.793 228.284 li
329.988 227.851 li
330.805 227.007 li
331.419 226.765 li
332.124 225.634 li
334.277 224.337 li
335.082 222.538 li
336.322 222.328 li
336.226 229.432 li
334.053 230.047 li
332.151 229.956 li
328.632 231.044 li
325.732 231.027 li
323.916 231.874 li
323.152 232.666 li
320.709 233.742 li
320.615 234.883 li
319.745 236.002 li
316.173 237.615 li
314.889 237.784 li
313.536 238.821 li
312.458 240.22 li
311.641 240.015 li
309.374 240.125 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
319.398 254.923 mo
311.268 245.482 li
309.374 240.125 li
311.641 240.015 li
312.458 240.22 li
313.536 238.821 li
314.889 237.784 li
316.173 237.615 li
319.745 236.002 li
320.615 234.883 li
320.709 233.742 li
323.152 232.666 li
323.916 231.874 li
325.732 231.027 li
328.632 231.044 li
332.151 229.956 li
334.053 230.047 li
336.226 229.432 li
336.153 231.934 li
336.782 231.676 li
337.803 232.273 li
337.166 232.853 li
336.563 232.889 li
335.993 233.366 li
335 233.585 li
333.849 234.233 li
328.812 240.948 li
328.45 241.892 li
326.493 244.803 li
326.215 245.659 li
325.035 247.188 li
324.826 248.057 li
323.034 248.747 li
322.868 249.344 li
323.432 250.202 li
322.896 250.559 li
322.552 251.432 li
321.585 252.581 li
320.775 252.898 li
319.922 253.875 li
319.398 254.923 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
319.398 254.923 mo
311.268 245.482 li
309.374 240.125 li
311.641 240.015 li
312.458 240.22 li
313.536 238.821 li
314.889 237.784 li
316.173 237.615 li
319.745 236.002 li
320.615 234.883 li
320.709 233.742 li
323.152 232.666 li
323.916 231.874 li
325.732 231.027 li
328.632 231.044 li
332.151 229.956 li
334.053 230.047 li
336.226 229.432 li
336.153 231.934 li
336.782 231.676 li
337.803 232.273 li
337.166 232.853 li
336.563 232.889 li
335.993 233.366 li
335 233.585 li
333.849 234.233 li
328.812 240.948 li
328.45 241.892 li
326.493 244.803 li
326.215 245.659 li
325.035 247.188 li
324.826 248.057 li
323.034 248.747 li
322.868 249.344 li
323.432 250.202 li
322.896 250.559 li
322.552 251.432 li
321.585 252.581 li
320.775 252.898 li
319.922 253.875 li
319.398 254.923 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
359.95 258.515 mo
359.051 258.082 li
358.736 257.063 li
356.964 254.613 li
356.176 254.565 li
355.264 253.678 li
353.546 253.435 li
351.891 252.382 li
351.238 252.298 li
350.395 253.383 li
348.948 254.282 li
348.558 255.623 li
346.426 256.424 li
345.492 257.225 li
344.289 257.579 li
342.311 257.183 li
341.463 257.393 li
340.535 257.219 li
336.485 255.189 li
336.111 255.268 li
334.854 256.555 li
332.888 256.585 li
332.604 257.285 li
331.435 257.576 li
331.126 258.041 li
329.967 258.131 li
329.756 258.441 li
328.484 258.72 li
328.289 258.996 li
329.08 260.113 li
329.236 261.134 li
328.799 261.334 li
328.053 260.535 li
327.16 260.398 li
326.899 260.727 li
327.28 261.353 li
326.842 261.973 li
319.398 254.923 li
319.922 253.875 li
320.775 252.898 li
321.585 252.581 li
322.552 251.432 li
322.896 250.559 li
323.432 250.202 li
322.868 249.344 li
323.034 248.747 li
324.826 248.057 li
325.035 247.188 li
326.215 245.659 li
326.493 244.803 li
328.45 241.892 li
328.812 240.948 li
333.849 234.233 li
335 233.585 li
335.993 233.366 li
336.563 232.889 li
337.166 232.853 li
337.803 232.273 li
342.114 235.028 li
342.966 234.731 li
344.427 233.432 li
345.874 232.796 li
346.789 232.839 li
347.342 233.468 li
347.553 234.804 li
348.368 235.596 li
349.166 235.794 li
348.757 237.756 li
348.945 238.327 li
349.598 238.92 li
349.744 239.831 li
349.401 240.467 li
349.496 241.412 li
350.823 241.529 li
351.288 242.837 li
352.627 243.411 li
352.951 242.692 li
353.193 242.736 li
353.472 243.558 li
354.574 244.934 li
354.799 245.013 li
355.349 244.39 li
357.733 245.65 li
358.266 246.381 li
358.556 247.692 li
358.294 248.897 li
358.499 250.242 li
359.066 251.005 li
360.978 252.141 li
361.558 252.785 li
361.309 253.836 li
362.061 254.527 li
361.577 255.043 li
361.912 256.198 li
360.789 257.132 li
359.95 258.515 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
359.95 258.515 mo
359.051 258.082 li
358.736 257.063 li
356.964 254.613 li
356.176 254.565 li
355.264 253.678 li
353.546 253.435 li
351.891 252.382 li
351.238 252.298 li
350.395 253.383 li
348.948 254.282 li
348.558 255.623 li
346.426 256.424 li
345.492 257.225 li
344.289 257.579 li
342.311 257.183 li
341.463 257.393 li
340.535 257.219 li
336.485 255.189 li
336.111 255.268 li
334.854 256.555 li
332.888 256.585 li
332.604 257.285 li
331.435 257.576 li
331.126 258.041 li
329.967 258.131 li
329.756 258.441 li
328.484 258.72 li
328.289 258.996 li
329.08 260.113 li
329.236 261.134 li
328.799 261.334 li
328.053 260.535 li
327.16 260.398 li
326.899 260.727 li
327.28 261.353 li
326.842 261.973 li
319.398 254.923 li
319.922 253.875 li
320.775 252.898 li
321.585 252.581 li
322.552 251.432 li
322.896 250.559 li
323.432 250.202 li
322.868 249.344 li
323.034 248.747 li
324.826 248.057 li
325.035 247.188 li
326.215 245.659 li
326.493 244.803 li
328.45 241.892 li
328.812 240.948 li
333.849 234.233 li
335 233.585 li
335.993 233.366 li
336.563 232.889 li
337.166 232.853 li
337.803 232.273 li
342.114 235.028 li
342.966 234.731 li
344.427 233.432 li
345.874 232.796 li
346.789 232.839 li
347.342 233.468 li
347.553 234.804 li
348.368 235.596 li
349.166 235.794 li
348.757 237.756 li
348.945 238.327 li
349.598 238.92 li
349.744 239.831 li
349.401 240.467 li
349.496 241.412 li
350.823 241.529 li
351.288 242.837 li
352.627 243.411 li
352.951 242.692 li
353.193 242.736 li
353.472 243.558 li
354.574 244.934 li
354.799 245.013 li
355.349 244.39 li
357.733 245.65 li
358.266 246.381 li
358.556 247.692 li
358.294 248.897 li
358.499 250.242 li
359.066 251.005 li
360.978 252.141 li
361.558 252.785 li
361.309 253.836 li
362.061 254.527 li
361.577 255.043 li
361.912 256.198 li
360.789 257.132 li
359.95 258.515 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
264.032 242.802 mo
265.62 245.235 li
264.683 247.725 li
266.581 249.055 li
265.165 250.96 li
266.098 254.588 li
264.411 255.038 li
259.989 251.885 li
259.245 252.35 li
255.416 248.134 li
252.511 247.279 li
251.471 248.764 li
249.882 248.626 li
251.98 242.705 li
250.354 237.327 li
251.205 236.763 li
252.094 236.912 li
253.271 236.704 li
258.13 240.841 li
258.694 240.774 li
260.921 241.728 li
262.974 241.507 li
264.032 242.802 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
264.032 242.802 mo
265.62 245.235 li
264.683 247.725 li
266.581 249.055 li
265.165 250.96 li
266.098 254.588 li
264.411 255.038 li
259.989 251.885 li
259.245 252.35 li
255.416 248.134 li
252.511 247.279 li
251.471 248.764 li
249.882 248.626 li
251.98 242.705 li
250.354 237.327 li
251.205 236.763 li
252.094 236.912 li
253.271 236.704 li
258.13 240.841 li
258.694 240.774 li
260.921 241.728 li
262.974 241.507 li
264.032 242.802 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
295.042 267.804 mo
295.029 267.184 li
294.484 266.823 li
294.32 266.26 li
293.252 266.024 li
292.77 265.577 li
292.843 255.494 li
293.327 254.544 li
292.187 253.282 li
292.691 250.608 li
292.069 249.1 li
292.214 248.214 li
292.591 247.842 li
292.438 247.172 li
292.132 247.238 li
292.182 246.047 li
292.83 246.055 li
292.085 244.178 li
292.634 243.299 li
293.439 242.658 li
293.783 241.236 li
295.255 238.913 li
296.512 238.923 li
297.154 239.758 li
299.535 239.871 li
301.067 239.124 li
303.106 239.289 li
304.245 238.952 li
306.185 237.648 li
308.424 237.248 li
309.374 240.125 li
311.268 245.482 li
311.264 258.072 li
310.414 258.19 li
309.324 257.477 li
308.173 258.148 li
307.288 257.849 li
307.01 258.147 li
306.072 258.186 li
305.611 258.61 li
304.465 258.979 li
303.863 259.661 li
303.83 260.067 li
302.986 259.901 li
302.722 260.115 li
302.563 260.761 li
301.956 260.939 li
295.042 267.804 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
295.042 267.804 mo
295.029 267.184 li
294.484 266.823 li
294.32 266.26 li
293.252 266.024 li
292.77 265.577 li
292.843 255.494 li
293.327 254.544 li
292.187 253.282 li
292.691 250.608 li
292.069 249.1 li
292.214 248.214 li
292.591 247.842 li
292.438 247.172 li
292.132 247.238 li
292.182 246.047 li
292.83 246.055 li
292.085 244.178 li
292.634 243.299 li
293.439 242.658 li
293.783 241.236 li
295.255 238.913 li
296.512 238.923 li
297.154 239.758 li
299.535 239.871 li
301.067 239.124 li
303.106 239.289 li
304.245 238.952 li
306.185 237.648 li
308.424 237.248 li
309.374 240.125 li
311.268 245.482 li
311.264 258.072 li
310.414 258.19 li
309.324 257.477 li
308.173 258.148 li
307.288 257.849 li
307.01 258.147 li
306.072 258.186 li
305.611 258.61 li
304.465 258.979 li
303.863 259.661 li
303.83 260.067 li
302.986 259.901 li
302.722 260.115 li
302.563 260.761 li
301.956 260.939 li
295.042 267.804 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
291.762 236.515 mo
288.742 236.439 li
288.691 228.877 li
288.057 228.312 li
285.801 228.814 li
283.689 228.426 li
281.868 228.655 li
281.253 228.788 li
280.1 229.869 li
279.064 230.195 li
277.569 229.405 li
276.624 229.506 li
275.912 232.606 li
277.409 234.72 li
277.893 236.019 li
277.575 236.528 li
273.751 236.579 li
273.603 237.334 li
274.031 237.905 li
273.416 238.312 li
273.935 238.657 li
273.665 239.062 li
274.084 239.785 li
273.507 241.495 li
274.02 242.043 li
274.042 242.449 li
271.535 242.476 li
272.731 245.771 li
280.001 243.219 li
282.402 245.703 li
285.936 245.932 li
289.374 242.107 li
289.974 241.468 li
291.343 240.961 li
291.69 239.606 li
291.429 238.159 li
291.762 236.515 li
cp
267.853 242.404 mo
271.542 244.786 li
271.173 242.48 li
267.853 242.404 li
cp
.494789 .410681 .411505 .0505074 cmyk
f
291.762 236.515 mo
288.742 236.439 li
288.691 228.877 li
288.057 228.312 li
285.801 228.814 li
283.689 228.426 li
281.868 228.655 li
281.253 228.788 li
280.1 229.869 li
279.064 230.195 li
277.569 229.405 li
276.624 229.506 li
275.912 232.606 li
277.409 234.72 li
277.893 236.019 li
277.575 236.528 li
273.751 236.579 li
273.603 237.334 li
274.031 237.905 li
273.416 238.312 li
273.935 238.657 li
273.665 239.062 li
274.084 239.785 li
273.507 241.495 li
274.02 242.043 li
274.042 242.449 li
271.535 242.476 li
272.731 245.771 li
280.001 243.219 li
282.402 245.703 li
285.936 245.932 li
289.374 242.107 li
289.974 241.468 li
291.343 240.961 li
291.69 239.606 li
291.429 238.159 li
291.762 236.515 li
cp
267.853 242.404 mo
271.542 244.786 li
271.173 242.48 li
267.853 242.404 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
295.042 267.804 mo
301.956 260.939 li
302.563 260.761 li
302.722 260.115 li
302.986 259.901 li
303.83 260.067 li
303.863 259.661 li
304.465 258.979 li
305.611 258.61 li
306.072 258.186 li
307.01 258.147 li
307.288 257.849 li
308.173 258.148 li
309.324 257.477 li
310.414 258.19 li
311.264 258.072 li
311.268 245.482 li
319.398 254.923 li
326.842 261.973 li
326.926 262.424 li
309.69 270.903 li
309.534 271.228 li
309.843 271.701 li
310.073 273.116 li
302.653 280.522 li
301.007 279.007 li
299.804 279.412 li
298.574 278.865 li
298.013 279.208 li
298.061 279.875 li
297.32 279.641 li
297.014 278.184 li
296.696 277.563 li
295.781 276.869 li
295.704 276.337 li
295.851 274.774 li
296.467 274.511 li
296.948 273.886 li
296.524 272.482 li
296.805 271.581 li
296.548 271.19 li
295.523 270.751 li
295.189 270.18 li
295.437 268.944 li
294.983 268.344 li
295.042 267.804 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
295.042 267.804 mo
301.956 260.939 li
302.563 260.761 li
302.722 260.115 li
302.986 259.901 li
303.83 260.067 li
303.863 259.661 li
304.465 258.979 li
305.611 258.61 li
306.072 258.186 li
307.01 258.147 li
307.288 257.849 li
308.173 258.148 li
309.324 257.477 li
310.414 258.19 li
311.264 258.072 li
311.268 245.482 li
319.398 254.923 li
326.842 261.973 li
326.926 262.424 li
309.69 270.903 li
309.534 271.228 li
309.843 271.701 li
310.073 273.116 li
302.653 280.522 li
301.007 279.007 li
299.804 279.412 li
298.574 278.865 li
298.013 279.208 li
298.061 279.875 li
297.32 279.641 li
297.014 278.184 li
296.696 277.563 li
295.781 276.869 li
295.704 276.337 li
295.851 274.774 li
296.467 274.511 li
296.948 273.886 li
296.524 272.482 li
296.805 271.581 li
296.548 271.19 li
295.523 270.751 li
295.189 270.18 li
295.437 268.944 li
294.983 268.344 li
295.042 267.804 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
295.042 267.804 mo
283.694 267.85 li
282.059 268.503 li
280.272 268.433 li
276.818 267.079 li
273.686 258.265 li
270.378 256.659 li
270.521 252.448 li
271.854 252.158 li
272.258 252.338 li
274.02 254.116 li
274.654 255.364 li
275.184 255.353 li
276.453 256.01 li
278.445 256.125 li
279.657 257.022 li
279.531 257.872 li
280.245 258.424 li
280.467 259.053 li
292.186 255.71 li
292.648 255.351 li
292.843 255.494 li
292.77 265.577 li
293.252 266.024 li
294.32 266.26 li
294.484 266.823 li
295.029 267.184 li
295.042 267.804 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
295.042 267.804 mo
283.694 267.85 li
282.059 268.503 li
280.272 268.433 li
276.818 267.079 li
273.686 258.265 li
270.378 256.659 li
270.521 252.448 li
271.854 252.158 li
272.258 252.338 li
274.02 254.116 li
274.654 255.364 li
275.184 255.353 li
276.453 256.01 li
278.445 256.125 li
279.657 257.022 li
279.531 257.872 li
280.245 258.424 li
280.467 259.053 li
292.186 255.71 li
292.648 255.351 li
292.843 255.494 li
292.77 265.577 li
293.252 266.024 li
294.32 266.26 li
294.484 266.823 li
295.029 267.184 li
295.042 267.804 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
337.285 278.72 mo
336.263 277.533 li
334.007 277.07 li
333.464 276.57 li
332.941 274.663 li
330.861 271.535 li
330.34 269.759 li
330.52 269.066 li
329.208 267.114 li
326.926 262.424 li
326.842 261.973 li
327.28 261.353 li
326.899 260.727 li
327.16 260.398 li
328.053 260.535 li
328.799 261.334 li
329.236 261.134 li
329.08 260.113 li
328.289 258.996 li
328.484 258.72 li
329.756 258.441 li
329.967 258.131 li
331.126 258.041 li
331.435 257.576 li
332.604 257.285 li
332.888 256.585 li
334.854 256.555 li
336.111 255.268 li
336.485 255.189 li
340.535 257.219 li
341.463 257.393 li
342.311 257.183 li
344.289 257.579 li
345.492 257.225 li
346.426 256.424 li
348.558 255.623 li
348.948 254.282 li
350.395 253.383 li
351.238 252.298 li
351.891 252.382 li
353.546 253.435 li
355.264 253.678 li
356.176 254.565 li
356.964 254.613 li
358.736 257.063 li
350.817 264.979 li
350.765 267.43 li
349.661 267.51 li
349.655 268.533 li
348.857 268.622 li
348.65 270.304 li
345.621 270.305 li
337.285 278.72 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
337.285 278.72 mo
336.263 277.533 li
334.007 277.07 li
333.464 276.57 li
332.941 274.663 li
330.861 271.535 li
330.34 269.759 li
330.52 269.066 li
329.208 267.114 li
326.926 262.424 li
326.842 261.973 li
327.28 261.353 li
326.899 260.727 li
327.16 260.398 li
328.053 260.535 li
328.799 261.334 li
329.236 261.134 li
329.08 260.113 li
328.289 258.996 li
328.484 258.72 li
329.756 258.441 li
329.967 258.131 li
331.126 258.041 li
331.435 257.576 li
332.604 257.285 li
332.888 256.585 li
334.854 256.555 li
336.111 255.268 li
336.485 255.189 li
340.535 257.219 li
341.463 257.393 li
342.311 257.183 li
344.289 257.579 li
345.492 257.225 li
346.426 256.424 li
348.558 255.623 li
348.948 254.282 li
350.395 253.383 li
351.238 252.298 li
351.891 252.382 li
353.546 253.435 li
355.264 253.678 li
356.176 254.565 li
356.964 254.613 li
358.736 257.063 li
350.817 264.979 li
350.765 267.43 li
349.661 267.51 li
349.655 268.533 li
348.857 268.622 li
348.65 270.304 li
345.621 270.305 li
337.285 278.72 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
264.925 256.492 mo
264.925 259.561 li
268.796 259.48 li
269.379 258.635 li
267.78 255.539 li
264.925 256.492 li
cp
292.187 253.282 mo
292.691 250.608 li
292.069 249.1 li
292.214 248.214 li
292.591 247.842 li
292.438 247.172 li
292.132 247.238 li
292.182 246.047 li
291.967 244.911 li
289.593 245.211 li
288.384 247.545 li
279.53 246.29 li
270.874 247.869 li
268.404 249.409 li
268.644 251.794 li
270.521 252.448 li
271.854 252.158 li
272.258 252.338 li
274.02 254.116 li
274.654 255.364 li
275.184 255.353 li
276.453 256.01 li
278.445 256.125 li
279.657 257.022 li
279.531 257.872 li
280.245 258.424 li
280.467 259.053 li
292.186 255.71 li
292.648 255.351 li
292.843 255.494 li
293.327 254.544 li
292.187 253.282 li
cp
.494789 .410681 .411505 .0505074 cmyk
f
264.925 256.492 mo
264.925 259.561 li
268.796 259.48 li
269.379 258.635 li
267.78 255.539 li
264.925 256.492 li
cp
292.187 253.282 mo
292.691 250.608 li
292.069 249.1 li
292.214 248.214 li
292.591 247.842 li
292.438 247.172 li
292.132 247.238 li
292.182 246.047 li
291.967 244.911 li
289.593 245.211 li
288.384 247.545 li
279.53 246.29 li
270.874 247.869 li
268.404 249.409 li
268.644 251.794 li
270.521 252.448 li
271.854 252.158 li
272.258 252.338 li
274.02 254.116 li
274.654 255.364 li
275.184 255.353 li
276.453 256.01 li
278.445 256.125 li
279.657 257.022 li
279.531 257.872 li
280.245 258.424 li
280.467 259.053 li
292.186 255.71 li
292.648 255.351 li
292.843 255.494 li
293.327 254.544 li
292.187 253.282 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
322.791 283.922 mo
324.765 281.914 li
325.095 282.136 li
328.637 281.194 li
331.086 279.974 li
333.904 279.564 li
334.961 279.713 li
336.711 279.323 li
337.285 278.72 li
345.621 270.305 li
348.65 270.304 li
348.857 268.622 li
349.655 268.533 li
349.661 267.51 li
350.765 267.43 li
350.817 264.979 li
358.736 257.063 li
359.051 258.082 li
359.95 258.515 li
361.159 259.076 li
362.151 258.38 li
364.394 258.616 li
365.976 260.617 li
366.082 261.556 li
367.095 264.223 li
359.395 272.14 li
358.575 272.679 li
357.953 274.284 li
358.436 278.051 li
358.245 278.54 li
357.413 279.195 li
357.44 279.578 li
356.657 280.132 li
356.232 280.092 li
356.02 279.73 li
355.461 279.777 li
355.34 280.332 li
354.699 280.465 li
354.234 281.461 li
353.961 281.401 li
353.371 280.248 li
352.933 280.343 li
352.93 280.844 li
352.627 280.935 li
351.884 280.387 li
351.683 280.476 li
351.609 281.496 li
352.343 281.694 li
352.35 281.96 li
351.685 282.445 li
351.73 282.828 li
351.165 283.226 li
350.6 282.991 li
349.861 284.462 li
349.677 284.517 li
349.408 283.991 li
348.863 284.456 li
348.628 285.129 li
346.577 286.17 li
346.063 288.283 li
345.468 288.733 li
344.946 289.946 li
344.08 290.903 li
343.365 290.708 li
342.575 290.864 li
342.197 290.642 li
340.57 291.523 li
339.031 291.471 li
337.755 292.192 li
336.161 291.976 li
334.449 292.78 li
333.66 292.889 li
333.313 293.615 li
332.957 293.56 li
332.739 293.118 li
332.006 293.392 li
331.968 293.776 li
331.357 293.663 li
330.299 294.264 li
328.633 292.974 li
328.565 293.426 li
327.935 293.264 li
328.023 292.879 li
327.631 292.311 li
325.582 290.769 li
325.2 289.551 li
325.43 288.926 li
325.279 288.049 li
324.052 285.96 li
323.6 285.643 li
322.791 283.922 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
322.791 283.922 mo
324.765 281.914 li
325.095 282.136 li
328.637 281.194 li
331.086 279.974 li
333.904 279.564 li
334.961 279.713 li
336.711 279.323 li
337.285 278.72 li
345.621 270.305 li
348.65 270.304 li
348.857 268.622 li
349.655 268.533 li
349.661 267.51 li
350.765 267.43 li
350.817 264.979 li
358.736 257.063 li
359.051 258.082 li
359.95 258.515 li
361.159 259.076 li
362.151 258.38 li
364.394 258.616 li
365.976 260.617 li
366.082 261.556 li
367.095 264.223 li
359.395 272.14 li
358.575 272.679 li
357.953 274.284 li
358.436 278.051 li
358.245 278.54 li
357.413 279.195 li
357.44 279.578 li
356.657 280.132 li
356.232 280.092 li
356.02 279.73 li
355.461 279.777 li
355.34 280.332 li
354.699 280.465 li
354.234 281.461 li
353.961 281.401 li
353.371 280.248 li
352.933 280.343 li
352.93 280.844 li
352.627 280.935 li
351.884 280.387 li
351.683 280.476 li
351.609 281.496 li
352.343 281.694 li
352.35 281.96 li
351.685 282.445 li
351.73 282.828 li
351.165 283.226 li
350.6 282.991 li
349.861 284.462 li
349.677 284.517 li
349.408 283.991 li
348.863 284.456 li
348.628 285.129 li
346.577 286.17 li
346.063 288.283 li
345.468 288.733 li
344.946 289.946 li
344.08 290.903 li
343.365 290.708 li
342.575 290.864 li
342.197 290.642 li
340.57 291.523 li
339.031 291.471 li
337.755 292.192 li
336.161 291.976 li
334.449 292.78 li
333.66 292.889 li
333.313 293.615 li
332.957 293.56 li
332.739 293.118 li
332.006 293.392 li
331.968 293.776 li
331.357 293.663 li
330.299 294.264 li
328.633 292.974 li
328.565 293.426 li
327.935 293.264 li
328.023 292.879 li
327.631 292.311 li
325.582 290.769 li
325.2 289.551 li
325.43 288.926 li
325.279 288.049 li
324.052 285.96 li
323.6 285.643 li
322.791 283.922 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
268.796 259.48 mo
268.991 262.915 li
276.927 268.735 li
276.475 268.911 li
275.148 268.646 li
274.103 269.776 li
274.347 273.87 li
274.909 274.209 li
275.332 275.09 li
275.151 277.678 li
272.911 277.698 li
272.891 278.569 li
270.724 278.671 li
270.9 279.982 li
271.487 281.489 li
267.378 276.614 li
268.123 272.435 li
266.591 267.739 li
264.706 266.133 li
264.925 259.561 li
268.796 259.48 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
268.796 259.48 mo
268.991 262.915 li
276.927 268.735 li
276.475 268.911 li
275.148 268.646 li
274.103 269.776 li
274.347 273.87 li
274.909 274.209 li
275.332 275.09 li
275.151 277.678 li
272.911 277.698 li
272.891 278.569 li
270.724 278.671 li
270.9 279.982 li
271.487 281.489 li
267.378 276.614 li
268.123 272.435 li
266.591 267.739 li
264.706 266.133 li
264.925 259.561 li
268.796 259.48 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
302.863 287.055 mo
302.15 285.886 li
302.422 285.54 li
302.3 284.328 li
302.801 283.805 li
303.068 282.959 li
302.32 282.157 li
302.701 281.59 li
302.866 280.73 li
302.653 280.522 li
310.073 273.116 li
309.843 271.701 li
309.534 271.228 li
309.69 270.903 li
326.926 262.424 li
329.208 267.114 li
330.52 269.066 li
330.34 269.759 li
330.861 271.535 li
332.941 274.663 li
333.464 276.57 li
334.007 277.07 li
336.263 277.533 li
337.285 278.72 li
336.711 279.323 li
334.961 279.713 li
333.904 279.564 li
331.086 279.974 li
328.637 281.194 li
325.095 282.136 li
324.765 281.914 li
322.791 283.922 li
311.671 295.007 li
311.055 294.384 li
305.15 291.353 li
305.07 290.691 li
303.961 288.923 li
302.617 288.365 li
302.492 287.854 li
302.863 287.055 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
302.863 287.055 mo
302.15 285.886 li
302.422 285.54 li
302.3 284.328 li
302.801 283.805 li
303.068 282.959 li
302.32 282.157 li
302.701 281.59 li
302.866 280.73 li
302.653 280.522 li
310.073 273.116 li
309.843 271.701 li
309.534 271.228 li
309.69 270.903 li
326.926 262.424 li
329.208 267.114 li
330.52 269.066 li
330.34 269.759 li
330.861 271.535 li
332.941 274.663 li
333.464 276.57 li
334.007 277.07 li
336.263 277.533 li
337.285 278.72 li
336.711 279.323 li
334.961 279.713 li
333.904 279.564 li
331.086 279.974 li
328.637 281.194 li
325.095 282.136 li
324.765 281.914 li
322.791 283.922 li
311.671 295.007 li
311.055 294.384 li
305.15 291.353 li
305.07 290.691 li
303.961 288.923 li
302.617 288.365 li
302.492 287.854 li
302.863 287.055 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
318.773 311.798 mo
318.693 311.025 li
319.026 310.549 li
321.175 309.725 li
321.188 304.345 li
311.671 295.007 li
322.791 283.922 li
323.6 285.643 li
324.052 285.96 li
325.279 288.049 li
325.43 288.926 li
325.2 289.551 li
325.582 290.769 li
327.631 292.311 li
328.023 292.879 li
327.935 293.264 li
328.565 293.426 li
328.633 292.974 li
330.299 294.264 li
331.357 293.663 li
331.968 293.776 li
332.006 293.392 li
332.739 293.118 li
332.957 293.56 li
333.313 293.615 li
333.66 292.889 li
334.449 292.78 li
336.161 291.976 li
337.755 292.192 li
339.031 291.471 li
340.57 291.523 li
342.197 290.642 li
342.575 290.864 li
343.365 290.708 li
344.08 290.903 li
344.946 289.946 li
345.468 288.733 li
346.063 288.283 li
346.577 286.17 li
348.628 285.129 li
348.863 284.456 li
349.408 283.991 li
349.677 284.517 li
349.861 284.462 li
350.6 282.991 li
351.165 283.226 li
351.73 282.828 li
351.685 282.445 li
352.35 281.96 li
352.343 281.694 li
351.609 281.496 li
351.683 280.476 li
351.884 280.387 li
352.627 280.935 li
352.93 280.844 li
352.933 280.343 li
353.371 280.248 li
353.961 281.401 li
354.234 281.461 li
354.699 280.465 li
355.34 280.332 li
355.461 279.777 li
356.02 279.73 li
356.232 280.092 li
356.657 280.132 li
357.44 279.578 li
357.413 279.195 li
358.245 278.54 li
358.436 278.051 li
357.953 274.284 li
358.575 272.679 li
359.395 272.14 li
367.095 264.223 li
370.335 265.953 li
370.914 266.764 li
371.547 266.936 li
371.749 267.67 li
372.197 267.963 li
373.421 267.839 li
374.322 268.711 li
374.644 269.493 li
373.894 271.216 li
374.424 272.261 li
374.22 273.152 li
375.114 273.738 li
376.325 274.017 li
377.518 276.171 li
377.458 276.59 li
376.973 276.983 li
377.309 277.762 li
377.308 278.631 li
377.725 279.208 li
377.729 280.361 li
379.191 280.636 li
384.199 283.46 li
384.968 286.216 li
386.265 289.344 li
386.511 291.171 li
385.589 291.616 li
386.255 294.449 li
386.751 294.974 li
381.139 294.991 li
381.074 295.191 li
368.295 295.058 li
368.159 298.166 li
358.779 298.125 li
358.787 301.193 li
354.429 301.151 li
351.23 304.134 li
348.676 306.521 li
348.16 306.088 li
347.884 306.41 li
346.101 306.874 li
345.725 307.232 li
339.899 307.189 li
339.762 315.092 li
329.584 325.077 li
329.108 324.814 li
328.17 323.299 li
327.066 322.794 li
325.965 322.8 li
323.786 320.787 li
323.122 320.893 li
321.491 319.305 li
321.218 318.293 li
320.209 318.15 li
319.544 317.383 li
319.122 316.013 li
319.498 315.768 li
320.18 314.355 li
318.947 313.246 li
318.773 311.798 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
318.773 311.798 mo
318.693 311.025 li
319.026 310.549 li
321.175 309.725 li
321.188 304.345 li
311.671 295.007 li
322.791 283.922 li
323.6 285.643 li
324.052 285.96 li
325.279 288.049 li
325.43 288.926 li
325.2 289.551 li
325.582 290.769 li
327.631 292.311 li
328.023 292.879 li
327.935 293.264 li
328.565 293.426 li
328.633 292.974 li
330.299 294.264 li
331.357 293.663 li
331.968 293.776 li
332.006 293.392 li
332.739 293.118 li
332.957 293.56 li
333.313 293.615 li
333.66 292.889 li
334.449 292.78 li
336.161 291.976 li
337.755 292.192 li
339.031 291.471 li
340.57 291.523 li
342.197 290.642 li
342.575 290.864 li
343.365 290.708 li
344.08 290.903 li
344.946 289.946 li
345.468 288.733 li
346.063 288.283 li
346.577 286.17 li
348.628 285.129 li
348.863 284.456 li
349.408 283.991 li
349.677 284.517 li
349.861 284.462 li
350.6 282.991 li
351.165 283.226 li
351.73 282.828 li
351.685 282.445 li
352.35 281.96 li
352.343 281.694 li
351.609 281.496 li
351.683 280.476 li
351.884 280.387 li
352.627 280.935 li
352.93 280.844 li
352.933 280.343 li
353.371 280.248 li
353.961 281.401 li
354.234 281.461 li
354.699 280.465 li
355.34 280.332 li
355.461 279.777 li
356.02 279.73 li
356.232 280.092 li
356.657 280.132 li
357.44 279.578 li
357.413 279.195 li
358.245 278.54 li
358.436 278.051 li
357.953 274.284 li
358.575 272.679 li
359.395 272.14 li
367.095 264.223 li
370.335 265.953 li
370.914 266.764 li
371.547 266.936 li
371.749 267.67 li
372.197 267.963 li
373.421 267.839 li
374.322 268.711 li
374.644 269.493 li
373.894 271.216 li
374.424 272.261 li
374.22 273.152 li
375.114 273.738 li
376.325 274.017 li
377.518 276.171 li
377.458 276.59 li
376.973 276.983 li
377.309 277.762 li
377.308 278.631 li
377.725 279.208 li
377.729 280.361 li
379.191 280.636 li
384.199 283.46 li
384.968 286.216 li
386.265 289.344 li
386.511 291.171 li
385.589 291.616 li
386.255 294.449 li
386.751 294.974 li
381.139 294.991 li
381.074 295.191 li
368.295 295.058 li
368.159 298.166 li
358.779 298.125 li
358.787 301.193 li
354.429 301.151 li
351.23 304.134 li
348.676 306.521 li
348.16 306.088 li
347.884 306.41 li
346.101 306.874 li
345.725 307.232 li
339.899 307.189 li
339.762 315.092 li
329.584 325.077 li
329.108 324.814 li
328.17 323.299 li
327.066 322.794 li
325.965 322.8 li
323.786 320.787 li
323.122 320.893 li
321.491 319.305 li
321.218 318.293 li
320.209 318.15 li
319.544 317.383 li
319.122 316.013 li
319.498 315.768 li
320.18 314.355 li
318.947 313.246 li
318.773 311.798 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
302.863 287.055 mo
297.121 286.928 li
296.182 286.054 li
295.121 286.153 li
294.546 286.513 li
294.278 287.642 li
293.234 288.441 li
292.776 289.462 li
292.203 289.49 li
292.087 288.845 li
290.741 288.31 li
289.813 286.987 li
289.135 286.637 li
288.595 285.312 li
287.11 283.749 li
284.302 281.868 li
279.689 279.63 li
278.115 277.504 li
277.162 277.471 li
276.694 276.374 li
275.332 275.09 li
274.909 274.209 li
274.347 273.87 li
274.103 269.776 li
275.148 268.646 li
276.475 268.911 li
276.927 268.735 li
280.272 268.433 li
282.059 268.503 li
283.694 267.85 li
295.042 267.804 li
294.983 268.344 li
295.437 268.944 li
295.189 270.18 li
295.523 270.751 li
296.548 271.19 li
296.805 271.581 li
296.524 272.482 li
296.948 273.886 li
296.467 274.511 li
295.851 274.774 li
295.704 276.337 li
295.781 276.869 li
296.696 277.563 li
297.014 278.184 li
297.32 279.641 li
298.061 279.875 li
298.013 279.208 li
298.574 278.865 li
299.804 279.412 li
301.007 279.007 li
302.653 280.522 li
302.866 280.73 li
302.701 281.59 li
302.32 282.157 li
303.068 282.959 li
302.801 283.805 li
302.3 284.328 li
302.422 285.54 li
302.15 285.886 li
302.863 287.055 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
302.863 287.055 mo
297.121 286.928 li
296.182 286.054 li
295.121 286.153 li
294.546 286.513 li
294.278 287.642 li
293.234 288.441 li
292.776 289.462 li
292.203 289.49 li
292.087 288.845 li
290.741 288.31 li
289.813 286.987 li
289.135 286.637 li
288.595 285.312 li
287.11 283.749 li
284.302 281.868 li
279.689 279.63 li
278.115 277.504 li
277.162 277.471 li
276.694 276.374 li
275.332 275.09 li
274.909 274.209 li
274.347 273.87 li
274.103 269.776 li
275.148 268.646 li
276.475 268.911 li
276.927 268.735 li
280.272 268.433 li
282.059 268.503 li
283.694 267.85 li
295.042 267.804 li
294.983 268.344 li
295.437 268.944 li
295.189 270.18 li
295.523 270.751 li
296.548 271.19 li
296.805 271.581 li
296.524 272.482 li
296.948 273.886 li
296.467 274.511 li
295.851 274.774 li
295.704 276.337 li
295.781 276.869 li
296.696 277.563 li
297.014 278.184 li
297.32 279.641 li
298.061 279.875 li
298.013 279.208 li
298.574 278.865 li
299.804 279.412 li
301.007 279.007 li
302.653 280.522 li
302.866 280.73 li
302.701 281.59 li
302.32 282.157 li
303.068 282.959 li
302.801 283.805 li
302.3 284.328 li
302.422 285.54 li
302.15 285.886 li
302.863 287.055 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
285.661 290.912 mo
282.966 286.809 li
277.748 287.345 li
274.457 285.384 li
271.487 281.489 li
270.9 279.982 li
270.724 278.671 li
272.891 278.569 li
272.911 277.698 li
275.151 277.678 li
275.332 275.09 li
276.694 276.374 li
277.162 277.471 li
278.115 277.504 li
279.689 279.63 li
284.302 281.868 li
287.11 283.749 li
288.595 285.312 li
289.135 286.637 li
289.813 286.987 li
290.741 288.31 li
292.087 288.845 li
292.203 289.49 li
291.9 289.171 li
290.855 288.904 li
290.5 289.238 li
290.067 288.692 li
287.899 288.647 li
287.336 288.875 li
286.785 289.668 li
286.119 289.884 li
285.661 290.912 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
285.661 290.912 mo
282.966 286.809 li
277.748 287.345 li
274.457 285.384 li
271.487 281.489 li
270.9 279.982 li
270.724 278.671 li
272.891 278.569 li
272.911 277.698 li
275.151 277.678 li
275.332 275.09 li
276.694 276.374 li
277.162 277.471 li
278.115 277.504 li
279.689 279.63 li
284.302 281.868 li
287.11 283.749 li
288.595 285.312 li
289.135 286.637 li
289.813 286.987 li
290.741 288.31 li
292.087 288.845 li
292.203 289.49 li
291.9 289.171 li
290.855 288.904 li
290.5 289.238 li
290.067 288.692 li
287.899 288.647 li
287.336 288.875 li
286.785 289.668 li
286.119 289.884 li
285.661 290.912 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
318.773 311.798 mo
317.082 310.591 li
316.491 310.481 li
317.437 311.916 li
318.117 313.872 li
317.989 314.438 li
316.72 314.537 li
315.342 313.583 li
314.004 311.603 li
312.265 310.896 li
311.5 311.059 li
311.074 311.688 li
310.023 311.417 li
310.003 311.749 li
309.153 312.246 li
308.817 311.847 li
308.363 311.816 li
307.856 309.771 li
303.399 305.409 li
302.262 303.686 li
300.202 303.512 li
300.209 302.566 li
299.503 301.105 li
299.636 299.622 li
299.028 298.488 li
298.537 298.078 li
297.642 298.035 li
296.854 297.407 li
296.146 297.406 li
295.338 296.729 li
295.099 295.959 li
295.752 295.863 li
295.843 295.642 li
295.451 294.147 li
294.264 294.036 li
292.352 292.196 li
290.545 290.151 li
290.5 289.238 li
290.855 288.904 li
291.9 289.171 li
292.203 289.49 li
292.776 289.462 li
293.234 288.441 li
294.278 287.642 li
294.546 286.513 li
295.121 286.153 li
296.182 286.054 li
297.121 286.928 li
302.863 287.055 li
302.492 287.854 li
302.617 288.365 li
303.961 288.923 li
305.07 290.691 li
305.15 291.353 li
311.055 294.384 li
311.671 295.007 li
321.188 304.345 li
321.175 309.725 li
319.026 310.549 li
318.693 311.025 li
318.773 311.798 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
318.773 311.798 mo
317.082 310.591 li
316.491 310.481 li
317.437 311.916 li
318.117 313.872 li
317.989 314.438 li
316.72 314.537 li
315.342 313.583 li
314.004 311.603 li
312.265 310.896 li
311.5 311.059 li
311.074 311.688 li
310.023 311.417 li
310.003 311.749 li
309.153 312.246 li
308.817 311.847 li
308.363 311.816 li
307.856 309.771 li
303.399 305.409 li
302.262 303.686 li
300.202 303.512 li
300.209 302.566 li
299.503 301.105 li
299.636 299.622 li
299.028 298.488 li
298.537 298.078 li
297.642 298.035 li
296.854 297.407 li
296.146 297.406 li
295.338 296.729 li
295.099 295.959 li
295.752 295.863 li
295.843 295.642 li
295.451 294.147 li
294.264 294.036 li
292.352 292.196 li
290.545 290.151 li
290.5 289.238 li
290.855 288.904 li
291.9 289.171 li
292.203 289.49 li
292.776 289.462 li
293.234 288.441 li
294.278 287.642 li
294.546 286.513 li
295.121 286.153 li
296.182 286.054 li
297.121 286.928 li
302.863 287.055 li
302.492 287.854 li
302.617 288.365 li
303.961 288.923 li
305.07 290.691 li
305.15 291.353 li
311.055 294.384 li
311.671 295.007 li
321.188 304.345 li
321.175 309.725 li
319.026 310.549 li
318.693 311.025 li
318.773 311.798 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
332.401 329.421 mo
299.24 329.139 li
295.822 326.285 li
288.652 315.351 li
283.003 310.772 li
280.86 300.708 li
282.148 298.6 li
283.44 299.797 li
285.167 298.315 li
286.551 292.061 li
285.661 290.912 li
286.119 289.884 li
286.785 289.668 li
287.336 288.875 li
287.899 288.647 li
290.067 288.692 li
290.5 289.238 li
290.545 290.151 li
292.352 292.196 li
294.264 294.036 li
295.451 294.147 li
295.843 295.642 li
295.752 295.863 li
295.099 295.959 li
295.338 296.729 li
296.146 297.406 li
296.854 297.407 li
297.642 298.035 li
298.537 298.078 li
299.028 298.488 li
299.636 299.622 li
299.503 301.105 li
300.209 302.566 li
300.202 303.512 li
302.262 303.686 li
303.399 305.409 li
307.856 309.771 li
308.363 311.816 li
308.817 311.847 li
309.153 312.246 li
310.003 311.749 li
310.023 311.417 li
311.074 311.688 li
311.5 311.059 li
312.265 310.896 li
314.004 311.603 li
315.342 313.583 li
316.72 314.537 li
317.989 314.438 li
318.117 313.872 li
317.437 311.916 li
316.491 310.481 li
317.082 310.591 li
318.773 311.798 li
318.947 313.246 li
320.18 314.355 li
319.498 315.768 li
319.122 316.013 li
319.544 317.383 li
320.209 318.15 li
321.218 318.293 li
321.491 319.305 li
323.122 320.893 li
323.786 320.787 li
325.965 322.8 li
327.066 322.794 li
328.17 323.299 li
329.108 324.814 li
329.584 325.077 li
330.629 325.387 li
331.321 326.087 li
331.262 327.766 li
332.267 328.423 li
332.401 329.421 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
332.401 329.421 mo
299.24 329.139 li
295.822 326.285 li
288.652 315.351 li
283.003 310.772 li
280.86 300.708 li
282.148 298.6 li
283.44 299.797 li
285.167 298.315 li
286.551 292.061 li
285.661 290.912 li
286.119 289.884 li
286.785 289.668 li
287.336 288.875 li
287.899 288.647 li
290.067 288.692 li
290.5 289.238 li
290.545 290.151 li
292.352 292.196 li
294.264 294.036 li
295.451 294.147 li
295.843 295.642 li
295.752 295.863 li
295.099 295.959 li
295.338 296.729 li
296.146 297.406 li
296.854 297.407 li
297.642 298.035 li
298.537 298.078 li
299.028 298.488 li
299.636 299.622 li
299.503 301.105 li
300.209 302.566 li
300.202 303.512 li
302.262 303.686 li
303.399 305.409 li
307.856 309.771 li
308.363 311.816 li
308.817 311.847 li
309.153 312.246 li
310.003 311.749 li
310.023 311.417 li
311.074 311.688 li
311.5 311.059 li
312.265 310.896 li
314.004 311.603 li
315.342 313.583 li
316.72 314.537 li
317.989 314.438 li
318.117 313.872 li
317.437 311.916 li
316.491 310.481 li
317.082 310.591 li
318.773 311.798 li
318.947 313.246 li
320.18 314.355 li
319.498 315.768 li
319.122 316.013 li
319.544 317.383 li
320.209 318.15 li
321.218 318.293 li
321.491 319.305 li
323.122 320.893 li
323.786 320.787 li
325.965 322.8 li
327.066 322.794 li
328.17 323.299 li
329.108 324.814 li
329.584 325.077 li
330.629 325.387 li
331.321 326.087 li
331.262 327.766 li
332.267 328.423 li
332.401 329.421 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
352.051 329.428 mo
332.7 329.378 li
332.401 329.421 li
332.267 328.423 li
331.262 327.766 li
331.321 326.087 li
330.629 325.387 li
329.584 325.077 li
339.762 315.092 li
339.899 307.189 li
345.725 307.232 li
346.101 306.874 li
347.884 306.41 li
348.16 306.088 li
348.676 306.521 li
351.23 304.134 li
352.425 304.185 li
352.508 307.295 li
354.037 307.355 li
354.127 312.031 li
352.367 312.043 li
352.051 329.428 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
352.051 329.428 mo
332.7 329.378 li
332.401 329.421 li
332.267 328.423 li
331.262 327.766 li
331.321 326.087 li
330.629 325.387 li
329.584 325.077 li
339.762 315.092 li
339.899 307.189 li
345.725 307.232 li
346.101 306.874 li
347.884 306.41 li
348.16 306.088 li
348.676 306.521 li
351.23 304.134 li
352.425 304.185 li
352.508 307.295 li
354.037 307.355 li
354.127 312.031 li
352.367 312.043 li
352.051 329.428 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
319.337 358.963 mo
320.147 355.301 li
319.511 352.961 li
312.968 350.476 li
312.315 348.673 li
313.301 344.892 li
312.561 342.616 li
309.135 341.577 li
304.597 335.346 li
300.966 334.111 li
299.24 329.139 li
332.401 329.421 li
332.7 329.378 li
332.947 335.678 li
335.972 335.727 li
336.108 338.836 li
336.541 338.888 li
336.589 339.361 li
337.072 339.411 li
337.168 340.325 li
337.566 340.329 li
337.632 340.834 li
338.082 340.886 li
338.114 341.375 li
338.514 341.445 li
338.607 342.276 li
341.726 342.378 li
342.002 345.426 li
343.791 345.456 li
343.902 348.604 li
348.036 348.617 li
348.006 351.637 li
351.159 351.584 li
351.094 354.617 li
353.173 354.66 li
353.269 355.163 li
353.633 355.202 li
353.769 361.594 li
353.373 361.587 li
353.334 361.962 li
352.331 361.972 li
349.463 360.049 li
348.078 359.387 li
344.376 358.435 li
342.096 356.581 li
341.126 356.675 li
340.345 355.966 li
338.555 355.695 li
336.58 354.796 li
335.808 353.908 li
333.992 354.896 li
333.272 355.555 li
333.009 356.541 li
332.267 357.038 li
331.284 357.217 li
330.652 357.059 li
329.958 357.49 li
328.675 357.566 li
328.73 358.199 li
329.119 358.463 li
329.809 359.822 li
329.857 361.187 li
329.508 361.573 li
327.49 359.48 li
325.19 358.292 li
324.269 358.357 li
321.697 359.184 li
320.447 359.247 li
319.738 359.664 li
319.337 358.963 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
319.337 358.963 mo
320.147 355.301 li
319.511 352.961 li
312.968 350.476 li
312.315 348.673 li
313.301 344.892 li
312.561 342.616 li
309.135 341.577 li
304.597 335.346 li
300.966 334.111 li
299.24 329.139 li
332.401 329.421 li
332.7 329.378 li
332.947 335.678 li
335.972 335.727 li
336.108 338.836 li
336.541 338.888 li
336.589 339.361 li
337.072 339.411 li
337.168 340.325 li
337.566 340.329 li
337.632 340.834 li
338.082 340.886 li
338.114 341.375 li
338.514 341.445 li
338.607 342.276 li
341.726 342.378 li
342.002 345.426 li
343.791 345.456 li
343.902 348.604 li
348.036 348.617 li
348.006 351.637 li
351.159 351.584 li
351.094 354.617 li
353.173 354.66 li
353.269 355.163 li
353.633 355.202 li
353.769 361.594 li
353.373 361.587 li
353.334 361.962 li
352.331 361.972 li
349.463 360.049 li
348.078 359.387 li
344.376 358.435 li
342.096 356.581 li
341.126 356.675 li
340.345 355.966 li
338.555 355.695 li
336.58 354.796 li
335.808 353.908 li
333.992 354.896 li
333.272 355.555 li
333.009 356.541 li
332.267 357.038 li
331.284 357.217 li
330.652 357.059 li
329.958 357.49 li
328.675 357.566 li
328.73 358.199 li
329.119 358.463 li
329.809 359.822 li
329.857 361.187 li
329.508 361.573 li
327.49 359.48 li
325.19 358.292 li
324.269 358.357 li
321.697 359.184 li
320.447 359.247 li
319.738 359.664 li
319.337 358.963 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
337.803 232.273 mo
336.782 231.676 li
336.153 231.934 li
336.226 229.432 li
336.322 222.328 li
339.754 219.166 li
341.003 217.506 li
341.237 216.662 li
341.951 216.179 li
341.962 214.862 li
341.411 214.451 li
341.497 213.85 li
350.703 222.112 li
349.776 223.637 li
349.531 225.415 li
351.332 229.281 li
351.551 230.381 li
351.28 231.187 li
351.292 232.885 li
351.08 233.333 li
349.625 233.694 li
349.71 234.897 li
349.166 235.794 li
348.368 235.596 li
347.553 234.804 li
347.342 233.468 li
346.789 232.839 li
345.874 232.796 li
344.427 233.432 li
342.966 234.731 li
342.114 235.028 li
337.803 232.273 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
337.803 232.273 mo
336.782 231.676 li
336.153 231.934 li
336.226 229.432 li
336.322 222.328 li
339.754 219.166 li
341.003 217.506 li
341.237 216.662 li
341.951 216.179 li
341.962 214.862 li
341.411 214.451 li
341.497 213.85 li
350.703 222.112 li
349.776 223.637 li
349.531 225.415 li
351.332 229.281 li
351.551 230.381 li
351.28 231.187 li
351.292 232.885 li
351.08 233.333 li
349.625 233.694 li
349.71 234.897 li
349.166 235.794 li
348.368 235.596 li
347.553 234.804 li
347.342 233.468 li
346.789 232.839 li
345.874 232.796 li
344.427 233.432 li
342.966 234.731 li
342.114 235.028 li
337.803 232.273 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
401.685 268.559 mo
374.322 268.711 li
373.421 267.839 li
372.197 267.963 li
371.749 267.67 li
371.547 266.936 li
370.914 266.764 li
370.335 265.953 li
367.095 264.223 li
366.082 261.556 li
365.976 260.617 li
364.394 258.616 li
362.151 258.38 li
361.159 259.076 li
359.95 258.515 li
360.789 257.132 li
361.912 256.198 li
361.577 255.043 li
362.061 254.527 li
361.309 253.836 li
361.558 252.785 li
360.978 252.141 li
359.066 251.005 li
358.499 250.242 li
358.294 248.897 li
358.556 247.692 li
358.266 246.381 li
357.733 245.65 li
355.349 244.39 li
354.799 245.013 li
354.574 244.934 li
353.472 243.558 li
353.193 242.736 li
352.951 242.692 li
352.627 243.411 li
351.288 242.837 li
350.823 241.529 li
349.496 241.412 li
349.401 240.467 li
349.744 239.831 li
349.598 238.92 li
348.945 238.327 li
348.757 237.756 li
349.166 235.794 li
349.71 234.897 li
349.625 233.694 li
351.08 233.333 li
351.292 232.885 li
351.28 231.187 li
351.551 230.381 li
351.332 229.281 li
349.531 225.415 li
349.776 223.637 li
350.703 222.112 li
358.242 228.716 li
363.125 233.038 li
384.699 252.637 li
401.685 268.559 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
401.685 268.559 mo
374.322 268.711 li
373.421 267.839 li
372.197 267.963 li
371.749 267.67 li
371.547 266.936 li
370.914 266.764 li
370.335 265.953 li
367.095 264.223 li
366.082 261.556 li
365.976 260.617 li
364.394 258.616 li
362.151 258.38 li
361.159 259.076 li
359.95 258.515 li
360.789 257.132 li
361.912 256.198 li
361.577 255.043 li
362.061 254.527 li
361.309 253.836 li
361.558 252.785 li
360.978 252.141 li
359.066 251.005 li
358.499 250.242 li
358.294 248.897 li
358.556 247.692 li
358.266 246.381 li
357.733 245.65 li
355.349 244.39 li
354.799 245.013 li
354.574 244.934 li
353.472 243.558 li
353.193 242.736 li
352.951 242.692 li
352.627 243.411 li
351.288 242.837 li
350.823 241.529 li
349.496 241.412 li
349.401 240.467 li
349.744 239.831 li
349.598 238.92 li
348.945 238.327 li
348.757 237.756 li
349.166 235.794 li
349.71 234.897 li
349.625 233.694 li
351.08 233.333 li
351.292 232.885 li
351.28 231.187 li
351.551 230.381 li
351.332 229.281 li
349.531 225.415 li
349.776 223.637 li
350.703 222.112 li
358.242 228.716 li
363.125 233.038 li
384.699 252.637 li
401.685 268.559 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
396.73 329.265 mo
396.94 327.095 li
397.618 326.595 li
397.585 325.083 li
397.054 323.724 li
396.582 323.268 li
396.788 322.262 li
395.823 321.005 li
395.179 318.722 li
395.026 316.977 li
395.286 316.381 li
395.228 315.656 li
394.011 314.613 li
393.719 312.537 li
393.274 311.733 li
393.9 309.38 li
392.487 307.661 li
392.969 307.291 li
392.86 306.614 li
392.504 306.337 li
391.161 306.287 li
390.746 305.399 li
390.102 304.91 li
390.147 303.271 li
388.591 301.27 li
388.998 300.303 li
387.802 299.026 li
387.313 297.721 li
386.699 297.182 li
387.542 296.025 li
386.751 294.974 li
386.255 294.449 li
385.589 291.616 li
386.511 291.171 li
386.265 289.344 li
384.968 286.216 li
384.199 283.46 li
379.191 280.636 li
377.729 280.361 li
377.725 279.208 li
377.308 278.631 li
377.309 277.762 li
376.973 276.983 li
377.458 276.59 li
377.518 276.171 li
376.325 274.017 li
375.114 273.738 li
374.22 273.152 li
374.424 272.261 li
373.894 271.216 li
374.644 269.493 li
374.322 268.711 li
401.685 268.559 li
421.593 286.901 li
459.004 321.885 li
466.623 329.332 li
437.827 329.298 li
407.453 328.97 li
398.974 328.996 li
399.01 329.242 li
396.73 329.265 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
396.73 329.265 mo
396.94 327.095 li
397.618 326.595 li
397.585 325.083 li
397.054 323.724 li
396.582 323.268 li
396.788 322.262 li
395.823 321.005 li
395.179 318.722 li
395.026 316.977 li
395.286 316.381 li
395.228 315.656 li
394.011 314.613 li
393.719 312.537 li
393.274 311.733 li
393.9 309.38 li
392.487 307.661 li
392.969 307.291 li
392.86 306.614 li
392.504 306.337 li
391.161 306.287 li
390.746 305.399 li
390.102 304.91 li
390.147 303.271 li
388.591 301.27 li
388.998 300.303 li
387.802 299.026 li
387.313 297.721 li
386.699 297.182 li
387.542 296.025 li
386.751 294.974 li
386.255 294.449 li
385.589 291.616 li
386.511 291.171 li
386.265 289.344 li
384.968 286.216 li
384.199 283.46 li
379.191 280.636 li
377.729 280.361 li
377.725 279.208 li
377.308 278.631 li
377.309 277.762 li
376.973 276.983 li
377.458 276.59 li
377.518 276.171 li
376.325 274.017 li
375.114 273.738 li
374.22 273.152 li
374.424 272.261 li
373.894 271.216 li
374.644 269.493 li
374.322 268.711 li
401.685 268.559 li
421.593 286.901 li
459.004 321.885 li
466.623 329.332 li
437.827 329.298 li
407.453 328.97 li
398.974 328.996 li
399.01 329.242 li
396.73 329.265 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
352.051 329.428 mo
352.367 312.043 li
354.127 312.031 li
354.037 307.355 li
352.508 307.295 li
352.425 304.185 li
351.23 304.134 li
354.429 301.151 li
358.787 301.193 li
358.779 298.125 li
368.159 298.166 li
368.295 295.058 li
381.074 295.191 li
381.139 294.991 li
386.751 294.974 li
387.542 296.025 li
386.699 297.182 li
387.313 297.721 li
387.802 299.026 li
388.998 300.303 li
388.591 301.27 li
390.147 303.271 li
390.102 304.91 li
390.746 305.399 li
391.161 306.287 li
392.504 306.337 li
392.86 306.614 li
392.969 307.291 li
392.487 307.661 li
393.9 309.38 li
393.274 311.733 li
393.719 312.537 li
394.011 314.613 li
395.228 315.656 li
395.286 316.381 li
395.026 316.977 li
395.179 318.722 li
395.823 321.005 li
396.788 322.262 li
396.582 323.268 li
397.054 323.724 li
397.585 325.083 li
397.618 326.595 li
396.94 327.095 li
396.73 329.265 li
352.051 329.428 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
352.051 329.428 mo
352.367 312.043 li
354.127 312.031 li
354.037 307.355 li
352.508 307.295 li
352.425 304.185 li
351.23 304.134 li
354.429 301.151 li
358.787 301.193 li
358.779 298.125 li
368.159 298.166 li
368.295 295.058 li
381.074 295.191 li
381.139 294.991 li
386.751 294.974 li
387.542 296.025 li
386.699 297.182 li
387.313 297.721 li
387.802 299.026 li
388.998 300.303 li
388.591 301.27 li
390.147 303.271 li
390.102 304.91 li
390.746 305.399 li
391.161 306.287 li
392.504 306.337 li
392.86 306.614 li
392.969 307.291 li
392.487 307.661 li
393.9 309.38 li
393.274 311.733 li
393.719 312.537 li
394.011 314.613 li
395.228 315.656 li
395.286 316.381 li
395.026 316.977 li
395.179 318.722 li
395.823 321.005 li
396.788 322.262 li
396.582 323.268 li
397.054 323.724 li
397.585 325.083 li
397.618 326.595 li
396.94 327.095 li
396.73 329.265 li
352.051 329.428 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
406.767 364.288 mo
370.795 364.603 li
369.315 364.584 li
369.32 364.827 li
360.506 364.629 li
360.47 363.136 li
359.548 363.092 li
359.489 362.688 li
356.559 362.612 li
356.468 361.623 li
354.675 361.652 li
353.769 361.594 li
353.633 355.202 li
353.269 355.163 li
353.173 354.66 li
351.094 354.617 li
351.159 351.584 li
348.006 351.637 li
348.036 348.617 li
343.902 348.604 li
343.791 345.456 li
342.002 345.426 li
341.726 342.378 li
338.607 342.276 li
338.514 341.445 li
338.114 341.375 li
338.082 340.886 li
337.632 340.834 li
337.566 340.329 li
337.168 340.325 li
337.072 339.411 li
336.589 339.361 li
336.541 338.888 li
336.108 338.836 li
335.972 335.727 li
332.947 335.678 li
332.7 329.378 li
352.051 329.428 li
396.73 329.265 li
399.01 329.242 li
398.974 328.996 li
407.453 328.97 li
407.505 332.544 li
406.675 332.615 li
406.732 333.713 li
408.029 333.721 li
408.033 334.377 li
407.568 334.429 li
407.819 354.459 li
407.423 354.445 li
407.572 364.266 li
406.767 364.288 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
406.767 364.288 mo
370.795 364.603 li
369.315 364.584 li
369.32 364.827 li
360.506 364.629 li
360.47 363.136 li
359.548 363.092 li
359.489 362.688 li
356.559 362.612 li
356.468 361.623 li
354.675 361.652 li
353.769 361.594 li
353.633 355.202 li
353.269 355.163 li
353.173 354.66 li
351.094 354.617 li
351.159 351.584 li
348.006 351.637 li
348.036 348.617 li
343.902 348.604 li
343.791 345.456 li
342.002 345.426 li
341.726 342.378 li
338.607 342.276 li
338.514 341.445 li
338.114 341.375 li
338.082 340.886 li
337.632 340.834 li
337.566 340.329 li
337.168 340.325 li
337.072 339.411 li
336.589 339.361 li
336.541 338.888 li
336.108 338.836 li
335.972 335.727 li
332.947 335.678 li
332.7 329.378 li
352.051 329.428 li
396.73 329.265 li
399.01 329.242 li
398.974 328.996 li
407.453 328.97 li
407.505 332.544 li
406.675 332.615 li
406.732 333.713 li
408.029 333.721 li
408.033 334.377 li
407.568 334.429 li
407.819 354.459 li
407.423 354.445 li
407.572 364.266 li
406.767 364.288 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
403.313 395.341 mo
402.978 394.137 li
403.975 392.793 li
405 392.849 li
406.097 389.379 li
407.523 383.434 li
407.046 373.608 li
406.8 373.594 li
406.767 364.288 li
407.572 364.266 li
407.423 354.445 li
407.819 354.459 li
407.568 334.429 li
408.033 334.377 li
408.029 333.721 li
406.732 333.713 li
406.675 332.615 li
407.505 332.544 li
407.453 328.97 li
437.827 329.298 li
466.623 329.332 li
496.124 358.022 li
495.795 358.067 li
496.126 360.003 li
495.848 360.866 li
495.943 362.439 li
497.617 364.001 li
498.444 366.571 li
498.928 366.966 li
499.742 367.114 li
500.686 368.36 li
501.959 371.892 li
501.606 372.317 li
502.327 372.861 li
503.293 374.541 li
503.087 376.66 li
503.302 377.279 li
504.59 377.451 li
505.464 378.131 li
506.035 378.974 li
506.785 379.208 li
509.009 380.641 li
509.85 381.663 li
510.416 382.441 li
510.678 383.931 li
509.953 384.131 li
507.433 386.998 li
505.977 387.53 li
504.879 388.591 li
502.314 389.962 li
501.908 390.823 li
475.842 390.838 li
475.835 392.158 li
456.437 392.416 li
428.505 392.367 li
428.52 393.398 li
419.738 393.34 li
419.754 392.953 li
415.394 392.871 li
415.36 392.372 li
410.024 392.414 li
410.016 393.878 li
408.525 394.547 li
408.454 396.124 li
407.122 396.197 li
407.062 396.937 li
406.315 396.99 li
406.419 397.809 li
403.313 395.341 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
403.313 395.341 mo
402.978 394.137 li
403.975 392.793 li
405 392.849 li
406.097 389.379 li
407.523 383.434 li
407.046 373.608 li
406.8 373.594 li
406.767 364.288 li
407.572 364.266 li
407.423 354.445 li
407.819 354.459 li
407.568 334.429 li
408.033 334.377 li
408.029 333.721 li
406.732 333.713 li
406.675 332.615 li
407.505 332.544 li
407.453 328.97 li
437.827 329.298 li
466.623 329.332 li
496.124 358.022 li
495.795 358.067 li
496.126 360.003 li
495.848 360.866 li
495.943 362.439 li
497.617 364.001 li
498.444 366.571 li
498.928 366.966 li
499.742 367.114 li
500.686 368.36 li
501.959 371.892 li
501.606 372.317 li
502.327 372.861 li
503.293 374.541 li
503.087 376.66 li
503.302 377.279 li
504.59 377.451 li
505.464 378.131 li
506.035 378.974 li
506.785 379.208 li
509.009 380.641 li
509.85 381.663 li
510.416 382.441 li
510.678 383.931 li
509.953 384.131 li
507.433 386.998 li
505.977 387.53 li
504.879 388.591 li
502.314 389.962 li
501.908 390.823 li
475.842 390.838 li
475.835 392.158 li
456.437 392.416 li
428.505 392.367 li
428.52 393.398 li
419.738 393.34 li
419.754 392.953 li
415.394 392.871 li
415.36 392.372 li
410.024 392.414 li
410.016 393.878 li
408.525 394.547 li
408.454 396.124 li
407.122 396.197 li
407.062 396.937 li
406.315 396.99 li
406.419 397.809 li
403.313 395.341 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
370.795 364.603 mo
376.809 379.137 li
378.369 383.294 li
378.478 384.907 li
377.319 384.862 li
377.283 387.427 li
373.698 387.444 li
369.443 390.621 li
369.38 392.179 li
361.25 388.413 li
359.77 385.157 li
353.423 380.297 li
354.403 379.538 li
354.312 378.57 li
354.8 377.847 li
354.675 361.652 li
356.468 361.623 li
356.559 362.612 li
359.489 362.688 li
359.548 363.092 li
360.47 363.136 li
360.506 364.629 li
369.32 364.827 li
369.315 364.584 li
370.795 364.603 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
370.795 364.603 mo
376.809 379.137 li
378.369 383.294 li
378.478 384.907 li
377.319 384.862 li
377.283 387.427 li
373.698 387.444 li
369.443 390.621 li
369.38 392.179 li
361.25 388.413 li
359.77 385.157 li
353.423 380.297 li
354.403 379.538 li
354.312 378.57 li
354.8 377.847 li
354.675 361.652 li
356.468 361.623 li
356.559 362.612 li
359.489 362.688 li
359.548 363.092 li
360.47 363.136 li
360.506 364.629 li
369.32 364.827 li
369.315 364.584 li
370.795 364.603 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
453.233 413.856 mo
425.404 413.807 li
425.388 413.551 li
419.35 413.575 li
419.333 413.175 li
415.548 411.555 li
415.659 410.882 li
411.361 410.949 li
411.307 409.957 li
414.23 405.616 li
412.279 403.957 li
410.707 403.82 li
410.665 402.216 li
409.626 401.917 li
406.419 397.809 li
406.315 396.99 li
407.062 396.937 li
407.122 396.197 li
408.454 396.124 li
408.525 394.547 li
410.016 393.878 li
410.024 392.414 li
415.36 392.372 li
415.394 392.871 li
419.754 392.953 li
419.738 393.34 li
428.52 393.398 li
428.505 392.367 li
456.437 392.416 li
475.835 392.158 li
475.842 390.838 li
501.908 390.823 li
501.762 392.541 li
499.143 394.835 li
498.925 395.282 li
499.731 396.251 li
499.063 398.447 li
499.334 399.188 li
499.058 399.751 li
499.544 401.669 li
499.376 402.676 li
499.805 403.905 li
498.608 404.809 li
498.936 405.417 li
498.88 406.946 li
498.497 408.413 li
498.814 409.133 li
497.122 410.915 li
496.799 411.736 li
496.124 412.353 li
495.845 413.379 li
483.038 413.723 li
453.233 413.856 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
453.233 413.856 mo
425.404 413.807 li
425.388 413.551 li
419.35 413.575 li
419.333 413.175 li
415.548 411.555 li
415.659 410.882 li
411.361 410.949 li
411.307 409.957 li
414.23 405.616 li
412.279 403.957 li
410.707 403.82 li
410.665 402.216 li
409.626 401.917 li
406.419 397.809 li
406.315 396.99 li
407.062 396.937 li
407.122 396.197 li
408.454 396.124 li
408.525 394.547 li
410.016 393.878 li
410.024 392.414 li
415.36 392.372 li
415.394 392.871 li
419.754 392.953 li
419.738 393.34 li
428.52 393.398 li
428.505 392.367 li
456.437 392.416 li
475.835 392.158 li
475.842 390.838 li
501.908 390.823 li
501.762 392.541 li
499.143 394.835 li
498.925 395.282 li
499.731 396.251 li
499.063 398.447 li
499.334 399.188 li
499.058 399.751 li
499.544 401.669 li
499.376 402.676 li
499.805 403.905 li
498.608 404.809 li
498.936 405.417 li
498.88 406.946 li
498.497 408.413 li
498.814 409.133 li
497.122 410.915 li
496.799 411.736 li
496.124 412.353 li
495.845 413.379 li
483.038 413.723 li
453.233 413.856 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
354.8 377.846 mo
354.675 361.652 li
353.769 361.594 li
353.373 361.587 li
353.334 361.962 li
352.331 361.972 li
349.463 360.049 li
348.078 359.387 li
344.376 358.435 li
342.096 356.581 li
341.126 356.675 li
340.345 355.966 li
338.555 355.695 li
336.58 354.796 li
335.808 353.908 li
333.992 354.896 li
333.272 355.555 li
333.009 356.541 li
332.267 357.038 li
331.284 357.217 li
330.652 357.059 li
329.958 357.49 li
328.675 357.566 li
328.73 358.199 li
329.118 358.463 li
329.809 359.822 li
329.857 361.187 li
329.508 361.573 li
327.49 359.479 li
325.19 358.292 li
324.269 358.357 li
321.697 359.184 li
320.447 359.247 li
319.738 359.664 li
319.337 358.963 li
318.703 361.427 li
320.399 363.151 li
319.709 366.573 li
320.591 368.569 li
319.427 373.266 li
323.298 375.082 li
324.859 377.891 li
334.135 376.844 li
337.912 377.209 li
342.081 379.233 li
349.805 378.818 li
353.423 380.297 li
354.403 379.538 li
354.312 378.57 li
354.8 377.846 li
cp
347.996 392.842 mo
342.129 390.933 li
340.371 391.502 li
341.948 392.469 li
341.505 393.433 li
342.732 394.716 li
346.686 394.827 li
351.769 393.368 li
352.247 392.373 li
350.794 391.622 li
347.996 392.842 li
cp
328.906 392.18 mo
328.555 391.927 li
328.394 391.873 li
328.136 391.952 li
327.8 391.931 li
327.663 391.718 li
327.793 391.526 li
327.713 391.297 li
327.618 391.059 li
327.417 390.898 li
327.419 391.072 li
327.096 391.441 li
326.684 391.711 li
326.409 391.776 li
326.061 391.668 li
325.395 392.233 li
325.065 392.328 li
325.156 392.528 li
325.388 392.551 li
325.811 392.715 li
326.063 392.448 li
326.326 392.486 li
326.721 392.678 li
327.026 392.744 li
327.277 392.969 li
327.67 393.075 li
327.94 392.924 li
328.575 392.938 li
329.2 392.953 li
329.252 392.663 li
329.112 392.377 li
328.906 392.18 li
cp
331.248 393.213 mo
333.336 396.282 li
335.045 397.32 li
339.324 395.447 li
336.875 392.142 li
331.248 393.213 li
cp
.494789 .410681 .411505 .0505074 cmyk
f
354.8 377.846 mo
354.675 361.652 li
353.769 361.594 li
353.373 361.587 li
353.334 361.962 li
352.331 361.972 li
349.463 360.049 li
348.078 359.387 li
344.376 358.435 li
342.096 356.581 li
341.126 356.675 li
340.345 355.966 li
338.555 355.695 li
336.58 354.796 li
335.808 353.908 li
333.992 354.896 li
333.272 355.555 li
333.009 356.541 li
332.267 357.038 li
331.284 357.217 li
330.652 357.059 li
329.958 357.49 li
328.675 357.566 li
328.73 358.199 li
329.118 358.463 li
329.809 359.822 li
329.857 361.187 li
329.508 361.573 li
327.49 359.479 li
325.19 358.292 li
324.269 358.357 li
321.697 359.184 li
320.447 359.247 li
319.738 359.664 li
319.337 358.963 li
318.703 361.427 li
320.399 363.151 li
319.709 366.573 li
320.591 368.569 li
319.427 373.266 li
323.298 375.082 li
324.859 377.891 li
334.135 376.844 li
337.912 377.209 li
342.081 379.233 li
349.805 378.818 li
353.423 380.297 li
354.403 379.538 li
354.312 378.57 li
354.8 377.846 li
cp
347.996 392.842 mo
342.129 390.933 li
340.371 391.502 li
341.948 392.469 li
341.505 393.433 li
342.732 394.716 li
346.686 394.827 li
351.769 393.368 li
352.247 392.373 li
350.794 391.622 li
347.996 392.842 li
cp
328.906 392.18 mo
328.555 391.927 li
328.394 391.873 li
328.136 391.952 li
327.8 391.931 li
327.663 391.718 li
327.793 391.526 li
327.713 391.297 li
327.618 391.059 li
327.417 390.898 li
327.419 391.072 li
327.096 391.441 li
326.684 391.711 li
326.409 391.776 li
326.061 391.668 li
325.395 392.233 li
325.065 392.328 li
325.156 392.528 li
325.388 392.551 li
325.811 392.715 li
326.063 392.448 li
326.326 392.486 li
326.721 392.678 li
327.026 392.744 li
327.277 392.969 li
327.67 393.075 li
327.94 392.924 li
328.575 392.938 li
329.2 392.953 li
329.252 392.663 li
329.112 392.377 li
328.906 392.18 li
cp
331.248 393.213 mo
333.336 396.282 li
335.045 397.32 li
339.324 395.447 li
336.875 392.142 li
331.248 393.213 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
411.361 410.949 mo
411.349 411.654 li
410.82 412.441 li
409.303 412.642 li
408.769 414.958 li
393.818 402.522 li
394.371 402 li
394.261 400.878 li
395.033 400.307 li
395.71 398.452 li
396.579 397.815 li
397.179 397.729 li
397.239 397.198 li
397.785 396.646 li
397.822 395.552 li
403.313 395.341 li
406.419 397.809 li
409.626 401.917 li
410.665 402.216 li
410.707 403.82 li
412.279 403.957 li
414.23 405.616 li
411.307 409.957 li
411.361 410.949 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
411.361 410.949 mo
411.349 411.654 li
410.82 412.441 li
409.303 412.642 li
408.769 414.958 li
393.818 402.522 li
394.371 402 li
394.261 400.878 li
395.033 400.307 li
395.71 398.452 li
396.579 397.815 li
397.179 397.729 li
397.239 397.198 li
397.785 396.646 li
397.822 395.552 li
403.313 395.341 li
406.419 397.809 li
409.626 401.917 li
410.665 402.216 li
410.707 403.82 li
412.279 403.957 li
414.23 405.616 li
411.307 409.957 li
411.361 410.949 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
422.541 445 mo
420.437 438.634 li
422.761 442.663 li
422.646 440.012 li
420.467 437.919 li
419.016 439.972 li
417.927 433.999 li
418.821 432.707 li
416.661 424.892 li
414.263 420.593 li
408.769 414.958 li
409.303 412.642 li
410.82 412.441 li
411.349 411.654 li
411.361 410.949 li
415.659 410.882 li
415.548 411.555 li
419.333 413.175 li
419.35 413.575 li
425.388 413.551 li
425.404 413.807 li
453.233 413.856 li
453.258 426.185 li
452.599 426.227 li
452.512 442.085 li
422.541 445 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
422.541 445 mo
420.437 438.634 li
422.761 442.663 li
422.646 440.012 li
420.467 437.919 li
419.016 439.972 li
417.927 433.999 li
418.821 432.707 li
416.661 424.892 li
414.263 420.593 li
408.769 414.958 li
409.303 412.642 li
410.82 412.441 li
411.349 411.654 li
411.361 410.949 li
415.659 410.882 li
415.548 411.555 li
419.333 413.175 li
419.35 413.575 li
425.388 413.551 li
425.404 413.807 li
453.233 413.856 li
453.258 426.185 li
452.599 426.227 li
452.512 442.085 li
422.541 445 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
379.493 411.923 mo
380.619 413.553 li
382.823 414.078 li
383.585 417.409 li
388.027 418.016 li
388.304 417.069 li
386.314 414.379 li
379.493 411.923 li
cp
407.046 373.608 mo
406.801 373.594 li
406.767 364.288 li
370.795 364.603 li
376.809 379.137 li
378.369 383.294 li
378.478 384.907 li
377.319 384.862 li
377.283 387.427 li
373.698 387.444 li
369.443 390.621 li
369.38 392.178 li
373.819 392.951 li
381.047 392.279 li
384.855 397.738 li
385.557 400.235 li
384.36 401.537 li
385.061 402.844 li
388.53 404.062 li
389.712 401.591 li
393.818 402.522 li
394.371 402 li
394.261 400.877 li
395.033 400.307 li
395.71 398.452 li
396.579 397.815 li
397.179 397.729 li
397.239 397.198 li
397.785 396.646 li
397.822 395.552 li
403.313 395.341 li
402.978 394.137 li
403.975 392.793 li
405 392.849 li
406.097 389.379 li
407.523 383.434 li
407.046 373.608 li
cp
380.177 427.537 mo
379.354 428.06 li
381.932 432.571 li
384.62 435.574 li
386.65 435.117 li
381.055 429.238 li
380.177 427.537 li
cp
354.586 420.309 mo
354.034 419.805 li
353.437 419.557 li
353.259 419.431 li
352.988 419.469 li
352.533 419.106 li
351.982 418.761 li
351.666 418.975 li
351.44 418.977 li
351.092 419.272 li
350.638 419.006 li
350.608 419.119 li
350.791 419.517 li
350.746 419.726 li
350.958 419.947 li
350.961 420.123 li
351.628 420.69 li
352.238 420.809 li
352.481 421.014 li
352.851 421.056 li
353.061 421.181 li
353.188 421.131 li
353.301 421.161 li
353.719 421.251 li
353.846 421.217 li
354.199 421.228 li
354.486 421.112 li
354.71 421.093 li
354.852 420.947 li
354.848 420.69 li
354.586 420.309 li
cp
.494789 .410681 .411505 .0505074 cmyk
f
379.493 411.923 mo
380.619 413.553 li
382.823 414.078 li
383.585 417.409 li
388.027 418.016 li
388.304 417.069 li
386.314 414.379 li
379.493 411.923 li
cp
407.046 373.608 mo
406.801 373.594 li
406.767 364.288 li
370.795 364.603 li
376.809 379.137 li
378.369 383.294 li
378.478 384.907 li
377.319 384.862 li
377.283 387.427 li
373.698 387.444 li
369.443 390.621 li
369.38 392.178 li
373.819 392.951 li
381.047 392.279 li
384.855 397.738 li
385.557 400.235 li
384.36 401.537 li
385.061 402.844 li
388.53 404.062 li
389.712 401.591 li
393.818 402.522 li
394.371 402 li
394.261 400.877 li
395.033 400.307 li
395.71 398.452 li
396.579 397.815 li
397.179 397.729 li
397.239 397.198 li
397.785 396.646 li
397.822 395.552 li
403.313 395.341 li
402.978 394.137 li
403.975 392.793 li
405 392.849 li
406.097 389.379 li
407.523 383.434 li
407.046 373.608 li
cp
380.177 427.537 mo
379.354 428.06 li
381.932 432.571 li
384.62 435.574 li
386.65 435.117 li
381.055 429.238 li
380.177 427.537 li
cp
354.586 420.309 mo
354.034 419.805 li
353.437 419.557 li
353.259 419.431 li
352.988 419.469 li
352.533 419.106 li
351.982 418.761 li
351.666 418.975 li
351.44 418.977 li
351.092 419.272 li
350.638 419.006 li
350.608 419.119 li
350.791 419.517 li
350.746 419.726 li
350.958 419.947 li
350.961 420.123 li
351.628 420.69 li
352.238 420.809 li
352.481 421.014 li
352.851 421.056 li
353.061 421.181 li
353.188 421.131 li
353.301 421.161 li
353.719 421.251 li
353.846 421.217 li
354.199 421.228 li
354.486 421.112 li
354.71 421.093 li
354.852 420.947 li
354.848 420.69 li
354.586 420.309 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
452.512 442.085 mo
452.599 426.227 li
453.258 426.185 li
453.233 413.856 li
483.038 413.723 li
495.845 413.379 li
495.419 414.094 li
493.076 414.377 li
493.702 416.438 li
492.768 418.079 li
494.462 419.402 li
494.168 420.412 li
494.393 420.926 li
494.45 422.938 li
493.53 424.511 li
493.474 425.456 li
494.866 427.434 li
495.417 427.242 li
495.746 427.621 li
496.451 427.851 li
497.943 427.509 li
499.072 427.827 li
500.606 429.574 li
500.369 431.039 li
500.81 434.201 li
498.908 435.441 li
498.648 436.205 li
498.794 436.786 li
498.41 436.792 li
498.416 437.158 li
497.87 437.158 li
497.895 437.57 li
497.558 437.574 li
497.566 437.971 li
496.639 438.026 li
496.627 438.361 li
493.983 437.832 li
493.435 438.056 li
493.16 438.55 li
452.512 442.085 li
cp
.494789 .410681 .411505 .0505074 cmyk
ef
452.512 442.085 mo
452.599 426.227 li
453.258 426.185 li
453.233 413.856 li
483.038 413.723 li
495.845 413.379 li
495.419 414.094 li
493.076 414.377 li
493.702 416.438 li
492.768 418.079 li
494.462 419.402 li
494.168 420.412 li
494.393 420.926 li
494.45 422.938 li
493.53 424.511 li
493.474 425.456 li
494.866 427.434 li
495.417 427.242 li
495.746 427.621 li
496.451 427.851 li
497.943 427.509 li
499.072 427.827 li
500.606 429.574 li
500.369 431.039 li
500.81 434.201 li
498.908 435.441 li
498.648 436.205 li
498.794 436.786 li
498.41 436.792 li
498.416 437.158 li
497.87 437.158 li
497.895 437.57 li
497.558 437.574 li
497.566 437.971 li
496.639 438.026 li
496.627 438.361 li
493.983 437.832 li
493.435 438.056 li
493.16 438.55 li
452.512 442.085 li
cp
.0148623 .00836194 .00836194 0 cmyk
@
.69482 .6318 .621515 .583612 cmyk
%ADOBeginSubsetFont: Roboto-Light Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Roboto-Light def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 46 /period putdup 67 /C putdup 70 /F putdup 77 /M putdup 86 /V putdup 97 /a putdup 99 /c putdup 101 /e putdup 103 /g putdup 104 /h putdup 105 /i putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 121 /y putdup 169 /copyright putdef/FontBBox {-744 -271 1146 1048} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings21 dict dup begin/.notdef <1C60D8A8C9B879BEDE> |-/space <1C60D8A8C9B879BEDE> |-/period <1C60D8A8C9B87DE052DAF2DBC128D720E2595608> |-/C <1C60D8A8C9B6747BB44878B23F86049CA257D46D48A1261C071844184873F7BA183ED0152D1D59A4ADDF6DE9D9DFB4EF8A18A1ED175E71E069D0EAA9FD842C798B44265C59E3C86183D506201A1F237BD0C8BC7F53538657CC18604B18157F7985DA2E347DDB6D500C686C53D4C51C131AE75D3F41B9DCF5BDA8378A172CBC4283CC7B961501DDC25D42B54111> |-/F <1C60D8A8C9B7FA137890F7F72C2AB1E2E52E8A73E44884901462C628970059482119B179DDADD1E1> |-/M <1C60D8A8C9B696EC04C08D17F96757A0750617AD912DAFAE38E30548A0467FB1B909B330834E35AC6DA3E862083FD4D7486CF6817357CD8D056F9A39932BC6021F7C238D3A> |-/V <1C60D8A8C9B7D2D01C90D387D361A2C35E8BCEA1D62F9C5E84DB3B209CD4B543787B3B8626FF1F78E852C3> |-/a <1C60D8A8C9B78181CF89FCCF642CFE9EA6860C048952730488D11972FFEF731BCAC8FFD7BD35754285A42F58217D37D3B5A5ADB70B00EB023D07E1621B4629DB39742A4BAF69B15C9A346F05A04C84874D31A2A6539DB37599170F61B3FA185D890E2CDC08F431CFDF3F9AB01C8CBB885E4E5678122366CDEEB66FC91C67F6A3A27EA9053126B807BC84791456CF37218760BF68E4DEEDACDF30140D613B9644A092713497283E70308303F32D20BF612686475E925A32DFBB4496F07B80580721198B9F5474F5372586E0A1A032> |-/c <1C60D8A8C9B7B577732738133CE9E5199706BFAF63B73D6D4D7F3719EEBB2794748FA303A3F18BE7DF65FD1FB9975A373A90990DCE0CD231BE178190FEF1D28ECE726723597E0E7EEB20DA677A3E87C53E008FEB0C9B62D537FBED4564E1B5AC7984271A65138F613D4F4AD7DA50A9A4A1C4D7D12C79A396682524361105ABE92A6984D9D989EC657FB2C3EE> |-/e <1C60D8A8C9B7B8EB25DECEDDB0EFF3948CD468921B6A30334F55EF106F35574F0FDE794219DDED2DA14EE9C51394D51873DDF8BCA064C45CF6A746C6C33986DFA6509FCBBF5B22B6C30F77255AED798DEC9143FB40D845056EFB7F355BCF768F1B59CCE415894890F4B50C82378998835AAF1B2361CFBD3E5D082308CC975D2E6566694B6A2DCB76AC8DDF3E8C1D65A1BFBB5B0DAA75F0> |-/g <1C60D8A8C9B7EE7C2F429DA4C282EF8AE244E3D23E25ED0A846D576A442E0FC75E8C646691153BD5D22818A1D6265B0370C36D905F70FA2F6F897933C24342FEB2DEDD20596B89FBB4C60608AEBB8B8A8DD892E5B706951F2AB6D35B267912219F3726B91D50739096F9D9AAAAC79C4FBDE14433110B66A47419C8ADEB595A2A843E14F14BEDFFD9CF6EF388A65E1950326BC85822229F5A393537F43D48159A388BEFEDAEE26A0898C64C6D9497C1E19BA41B0FFA521230778001C7113A4B620ED7063530131DC35A> |-/h <1C60D8A8C9B7EE7C19EBED65F02B761F1813C71640691DFA56D5D13D983CC70AD7F215039E1E190ADE282470089A084FE2297D5D2968BD7A532C5A03AFC6B18C8001194440D42077EAAE292E55EBFECAAE796B35396161B423> |-/i <1C60D8A8C9B88997F3B61BAB998BFD8FBD37E68D323462A94E3AF87651213078> |-/m <1C60D8A8C9B598EE5412DCE7BFF159EC67BFACAC413284E83E9CE6274754CC58E6CF3DA7C2D656EC74232675D4AD6AF7CC3F93C7302BCA64E337A5467C03413EC27A21D2ECEEC967FCDEA45BDA78B9A1424DE7A1FBA8D310A8A6113D38465F9C65E4597A53EFD492C85FE64CFB5EF84EB54139A9BCD96386DFACDAFBA1D54C71848E9612C9F415D47B81CE9ADAE71CF6C8A4B22F75D857FC81B0941E46F410B15FC55803875074> |-/o <1C60D8A8C9B7EE7C596447C564123A2E2BD67D1934DBBF29AFAEAAE04814BEF077BE3496F670F616A330629EA9C4677BBCA1C86B76B01830B2BDB3932F3A916103FE53FAF170DEC8E0DAFE3DBC54A604A64A4ACBB42989FE66B5FB794440662F252A670E5BF88802F0E8695AAA731B5AAFC10B3F2E73AF39DD63EAF3EB67D9AA95521F9ACF> |-/p <1C60D8A8C9B7EE7C16066AEB31BC1D50A6012C82270105001EFEF0953BF70FA5E6D6C7EA4CF9DEF7FFA56DFA2F419E2E4A770A84446E4BAD69EAB18044838F7ACC57A3677CC0D79AA3124B1C2389B869E561C5CCF35BCE41E3665EC5A9068073B9DD60DF7923346E5C5D5DAF17429AF75723C69FCC1B1758497AB2266C1403B830B9C8A0DC0495F7F1AAA745C6475187E59D> |-/r <1C60D8A8C9B816D2CD9E7E1576FC93ED2118319328882C00DD23034A7E3AD375EDE713635D86A03EE009D8725F2F46F79500FB77AFFBCB6A8328001773C9D52FF2B8FBDA351A94D866CF9B> |-/s <1C60D8A8C9B7BEB141370159723DAF4160B0EA53204AB4E1E50594107700AD6EF42AFEBC9AD448D66C53908F15A937AEC1FFFFC98C0567D9A356E6C355E54E05BBCEDB1DF03B48D4E730C25DE21DC37A1ACC3654BDDCD111B07A2E960E88F5C333CA44C870FC29C2EB2D3A50F540CDE4A47F53F1139D38B2903C30FA208EF9B4338054D6004AFFBE26898264263DB03CEDB6B68DDEC845C1E438A69222A3529384BC7F96133112B4C5CD7BFEC98EC85AAC13B2A92395F518973C7D0892453B5E> |-/t <1C60D8A8C9B81E5FA4B9BD6D27CEA1E2E3678A2B317013ED54F9E29FCD2F0531AD2610B6D6490B002F6DA07A5475C112424CA993CE2952471901CE529684D59B1EDF2E3477936F25D39E621A41D7BFE540FB933B03DB12F8BBB98D264D475A4703A4D0CE> |-/y <1C60D8A8C9B752AB6199BEE42C14215B0ABE7188848D65C43051962701F9A6317C00A5A63FE4868A0782B6276A2426FAB3497952B634FCEB04F921C29095186E785286D65A8251D2AB05D94AB47AB8E08223CC14469A9BEFDD795505ABFD9AFBD907851F> |-/copyright <1C60D8A8C9B6D24F7C03A9BBA01D6C0EA5E7D58BA86BBA2C5FC29CDC6271A8FFEBE42E796BCF3C17C7E9466EABD0FDBEEC0A2936B3CF4F23EC92CD48ACE06E864C396CCF84D70E27C21F425A4C66E4D8EB7965173FB9692064B0A0F8764238ED413A0C006457C7EF80A435820B31E0EB6ED41F912BC1468603D33F0F0160393498915C69397D8F038DDD4934BE34D72F66C94294E9C687DA88408AE45A41AA2D62F402154458AD8322E63740FB992D9E0908BA9095DB441A709BD5784A7900ABE5CBAF0DF98B39B287BD0CED19FBFE27B03763C6C5FDC7C86DBB6406A7C649BB7CA1025159A408262B1A4883DD61514C75BB2500D04D96E227D0448D588AB9F9CDCF8E836E76> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/LPNYLC+Roboto-Light /Roboto-Light findfont ct_VMDictPut/LPNYLC+Roboto-Light*1 [32{/.notdef}rp /space 13{/.notdef}rp /period 20{/.notdef}rp /C 2{/.notdef}rp /F 6{/.notdef}rp /M 8{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c /.notdef /e /.notdef /g /h /i 3{/.notdef}rp /m /.notdef /o /p /.notdef /r /s /t 4{/.notdef}rp /y 47{/.notdef}rp /copyright 86{/.notdef}rp]LPNYLC+Roboto-Light nfLPNYLC+Roboto-Light*1 [8 0 0 -8 0 0 ]msf583.709 527.832 mo(Copyright \251 Free Vector Maps.com)[5.20898 4.5332 4.49023 3.99365 2.80273 1.89648 4.53711 4.5332 2.73633 2.0249 6.47461 2.02539 4.5918 2.72852 4.20117 4.20068 2.02539 4.8418 4.20117 4.22461 2.6582 4.53271 2.80273 2.02539 7.01367 4.38086 4.5332 4.1543 1.98975 4.22461 4.5332 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/LPNYLC+Roboto-Light*1 uf/LPNYLC+Roboto-Light uf/Roboto-Light ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 18.1.0%%For: (Ted Grajeda) ()%%Title: (US-CA-EPS-01-0002.eps)%%CreationDate: 11/3/14 10:58 PM%%Canvassize: 16383%AI9_DataStream%Gb",Kq-"_1ZKDnj%e?m0_(;Uf-*%BWNS&&`Ci$oanKO%p)'NE?Vq_0j4T!&M,-rOl+n4aNGJ9L@me#:P*6QD]p5"ZtS_`K>4,m;(%CnpmRPtF=A8].3a`50[am'G8/Z[]m]>MYM%A[=1;h<UXhqu+cW]A)YT<&T6V4-c0*1]!qSq:KMm]DngG[-K(UA"W+03s05Dcope,%\k@CPZh)#cYD:#rX*1Pspq9]bamQB'1K^V]d7jD]6)E/r*]LjARt!<MiO@NY;DH@'"]Ja;en":9WdE<t?_.4;c%:gMRdngL054/1%bYkc<m;9>g*qfiPqOlSah<F<%qWG45+Us_d^\6">fPp+!isAQneCh=%<kGokm9S9JQ"6:kOj*-.TB8SsNkYTi^[Xu.RtC`a6b@q!%CqfiB@f2`%\st*5B]sq_RbKCQ5CtSbNEXU0A)k_ekC_o"M\jn.G.u1!2mdlKoWWU@(H@D\;DIg93Gcr@o<^\t%qIS`;(MKa0ONeh%mU$"AkDq/;Pi;WFmQ^7qP8+)tT-]-i5AF6u$\*qsW"S\UY?u3VLerQ05p]:if?goa;u3-(,dFaIc-*/2IF)N;O)2$o?e_+MHgG\&%Oq*4N,r,'(g5<<9J+Do]8=G%9Rf?Kh4DWLec(:G>XZ&4UrJM/h+=]VeL@&UAD5RQmk?`2^o9\9&Zb6DCFl2Vol[6EV/)pSp#"S@C%=`XT.BFhB./!VZ)5J7tAmaZeE6*67XY^b3i*-L0/%$sY(BJrOAH,[^A<lmZl'D0",>EFgbQ0T&'i,ddoR\k08Y6bg8H`aVTB>r+G%rV!VMC5e61%4dkE(JfH>)uID*s.@MtQ9,p?4)P9sphfWa(m5-I0+Vd8m7q/tH\id3e%[dHJNJPZmI$D?<rC4Wd-&<IREmZd?MunN%%[qh2X50l<[Rs6PY@bb,=gcgo21+sg^KTsNcdg:(Au!mof;m[!PMr0;I5P]G)pRZ^D`1OB>C9;7-?\aY>!H`o#T6Clc$rd[UGh[k%SNB(+SN$AfR;,YaD2s%u/3[oBpFU+.)JdeOg2sk%R;,gWG,9&"XDPF[gQe`HV<LgF%S'6+Wl(QJUOIC;lr=u]_.L$"6Mk'U&":0i%<mbiW!9'ru_fiXPW.G7.PHE7LQh=,6\4sTbA)9Pc26&%[X'\#/pF>^%7e<qB];WjlMW'j_h*If]>-2XCp\X?(s*U[D>nPQ!CitK-%7fIme2*9@3iH=W`WLa(HDQe'6Uomml-N:`\pJ6N\r51Il'ASTHF4fhhOcAcn3n<@W:YPJ7rfaReF]*/,#K9cB7(]QrGoC<_3pPj=%GL16!%S$J]SKPJr]#)Ve=7qbh[3gZ+F3*MCB=lk$NcZ0rV/#Ubs+_2S[[9/Ls,]G??R*&\)m-kY5`fI(MEUuAr,p_obDC*IHX33l%;bAc_rYKc;;a#!FJfT0aaOMdZVqV3'n6(h9m'tnj(),bY:t*7+GM"8WRAncW:iq'Nn![Y(FtpOEfpZ2tmuF1/DUE-!)XU1mrNZA"%](`&?>A<VN]UQD$;ZeDtn$f<,?ct`?ek^V-GN//JXFA"h+XAWR4]=KcG0]BdiFTVb*"X-643`]K8Y*Sb3SJ'dRQUUne0e\0;L(\q%MYLR;[G<k-67#a5HlL[k-5E<%eVPBK'.lX@*.<uFM%BG8.n@9]oB=e+F69g6`fY>]Uf!DcV>517Dpppe[FI8`Z5EKX,;s?A2]uG[%XQ+9iNu=-!clCI2TN,nh>,S8u>14cJ!EE$>)T*6J#VG=]!8^3$B6eY"Z?]KSba:Ml&d&.4<(rlalW<_p5M[m]XLcquP=c^]fHDgY%gV92JZXtMB"#Om/)LjjHFa;bZJ#g`l:96R?mJKH.qjPe7P%3Y)'n49=]l"AFVl.5rn7oFRg7=XAAZYG@,,a&Gn'E0>Q&XY)IpP/#%G2)VRaTh/\klj<F#4`5@n\oO^FZ'2KbuhqDg,S`bs!qSqeqm2.E+tkV_^N89j,O*42hiS8Ut6UZ_Z09.Hi)EM-[^a(>UP"N#&rM8%0uO#)A%X$(:L`]ubsl:Ep]pbMH==F<3!q)qSMU+ddH3B,T9R>GW""7PXfZQ3&aiG50_Wt6'3U%M#L.,.=?!ZKr'u0SEk^-dmb^4^%*bc/:^LnCga+&2X(YH)aZTb\^IcGB#RP]D+;?Hgk]+mADP:k69p-J[<_NI(9@=eBs1n"<NqNiGV)hYeXGW9Cr%tB]KG^4XSA6.,>%``NC3[l\-YGH]#B;;1ugC>8DV]m&krpDCC),T&ukU1&-4iMI[$F!MdJW2gmJ>D)'opN/'li'"%ZT%C07]P??pYimcl1`huS91uaN%.PY[_)FAb!<C51gBkaAi<VCbrd/;/'<Gpll<Vl/-@9*-dl?m/G-3K`PHn,0T,u*Fg1NV$B7R*#<)Y3n=!rfs>s85CMS]`[jiWm4h%+.B1Ck`?7hs/<$G&is=8U$A]TA[AZJN>=(fs'#*Z5u\2O9^Odb$2H(!5bR^2l`+a+W-rbYg?-B3rTH10g8OaM-f`,:\eiU157./S%p3t>qV,"I&CcBjj^FCb@&`(8ho7SYF&fUD;1irOKk*,W1CF5uBVa#VAkT=nuQ'[c^?\1n&^`O%u\-X#Y7-g,gb"QAaXIje'GI><*%<`Wi_<U^l;1!IRR?N,p?kO0cG*o9*Nd>UTQ:RU\]F5J74PM"*DH&mIMT/_!6keFl0e8U&=[5.Kbhq\43g"C:#Y[BqadIutR"Nu@Q%1CMfE&7j2,+7T<+2GT8&a+sN8h`r,:M)N<ur]`f>s0n=L;r.Fco7W[#qu_GL0ir>gs'`/3_dNM"_;<7@s4qbr*tJ+=>/kLIrdPT:%bk!OnH.]^@C)7:V,d5JQ%._t=#eDVBcm0s358"UD#!\(Gmj<#nldAhXWMrhom,E_+DOtANikg1i(,Wn1nOkgeg2Bd@9UR`<qICP(%'`D7<L"H!@F"h:ue6a<tp11@^>^=^=r\[U]`P+O05"ufj=UJF`%C;<!8<V&Sib1oLKe`SJZQRDqF*!,]])+Muj!_gK-;@3hp*RoA%:d.[fVNmSu%=o%(TlSBuOHf.C?@jTH'(cg(4H5Q05HqN5Ai<Qd5VIKW:;_9B4+IV?1ff-(KA>s\-?Qs]$$'?Q*n.=Ja!S(K61:0+%L6`JU#T-%N7#]'HYn>;2#U@@W-k?o30)^@H2S*?4F'i>e7ksk7SWdK!P(WjS1/018:FW_AL;>-*J"X9;p"i-bgYX6]\YJ:O#Q3]L%N<7Wm7f=?cFH971SB+<ibRLEoZg5oWYd`nMqTS<8WrG#?-iQ!C$gHQe-[4gQ\_=2@Q(fQp=t=^UB1)G"?[&^3GZgj98Jm4cnP'K0%eoA1UCK+%gKcmJhRLNt&#=+&)[AE[</J7+.r+=^Dp95u?$(6TkI8dnhc$JQVH67-Sf?29IhLX:lB#!$rX'*9,Z:D0KghO;&^SLDP%D?Z;($#l)al.$@a?2BI"W0QCh]A>P^(1.d3O+22uDI(Y[_)q["6#a6dl'EbSrl(.p>*m>+$4$#`W'GDlE(E.1SY?3mgRnVf?-M]/%=`;JQ^23Mh.gN_Kf"WI:A<`%G[,2r8Y(hS`^F7ZBa4=-9XKC",Xh%`RSB7(R;WgPC\Z"o`%,5X6R!6e]+5&/shTag/*=`V^Y4Pj%%mf-VR!U*Uh4"JlAk,(TT`4*GBl!XC\o\o13%hQYuDgS&=WjQ0:/q:$e^><ZjWt/m?Hejm3)opFjhqbbfgKaqqGIPRrNrOK+5AiD7%WnZD^2T/Vcs2Od-nD2Q3S%\7?7e`PD>E-J0CRaAkg?*+L[sciGqL4VKN6(P?VINRHNjU)\g?DtpHd0jX05AsN<;Hdg"r"r0n<e^Q%l(2/,ku.,UB3a'7+Eg-!kgsh>ZJN>-;!KFV\8!U&,L??hf51T2E/+a$og[tFB8#CFid>LQQ.g3(/Z>PZN4a12^EVJ"[k<I'\kYh,%.r>m3eH\h&jsK9i'm#nNc0gCSCuE[6P1UIu``]12p4n^sS)T>ka!@GoNO<-4SePB%[JdkCK`?H\oUFZ:M:R$Uj5HZaYQ!`,0-@Y-%QZ[7FS["/5^H0!>=JgL`2S,fabK&GTTR5p6d+%4!L$;r_DNq\*G!>7OBuq=hVe:hGWj^gHnIFb>gQK$%iof#\rBYe@+^M@sB_JS:%NU*]PZVJp8%8F#EQcO45r:Ui-)RoBb1@3K8'b.R']XmC=AiFN[[;gi16R0QE4#UjJNtLtVo;Sk;a4QuD0\!%TR-HF^D18PETR1hI%m%e322#%N$Pd]VnLDUuP\45TT=(SGQQ@Q^Dpq0O+%46&^g1F&tFR*7)=+pJLk,lnRY;Ii$27I$L0te$P^X;DWc8oH/24W*V8`1H"%U0Ds)L>C<Z]D3E5l@%VT2c0Pn:RjasZ0gC'M!jC@-f#7Qo`-c4L*`L(ThQRQl2-4D]uG*%f0Yr$"QNH#Ss"8DhX19b8cC0@Y.FS_%/PK894^5W4j'8(g*&e/#[d''*eb":Gg?u/6f@W<uC7kEmc@Me98Z.%Ok#.[7X'H#!l0G*CC=fY,hZqd$L:OYSBm--lhS`pOWpdW)%e'O@a#qI&/_$s*F]a(Z*5qU8g10'POo7h9La_l!XUURTjl$6;k[E00Rc;s,8HV:^%Qttln6(r<>f6dH8:2NlB\4q!;1`hT-l*e$1%o&D[YQdIX=U[^m2h;3<k)B-kjFp?-Lp<Dqug0F;G]:GF9)k-GTa.E,Om>UnbI-K^H;s]^f#T`NV-Cs:%*QHurNF;)HOH4]4et=$T%Pg7O%[1.G_qk`P9N8!6.$8Q@7m#4=_9]?Q,XZ.0*\&h[M`mt*7[63FHi2LFmHIl/9P>#\9VC:b64"'Pf[_.?%UNYW>\@EmlYoAIO%(PA7qj8<+sfY'>VJZEaBrXC7#%3!.K3X[h/&$Hh`rc-d51d+.MI=Bjc["aoWI[OpD"Ee^jhU--2qR;@lDKS#,SD8Wed`-Q@qB[Li%WG0&pnWrkXX_op#:+jT:VRa1ZLWbtWc/ZrYQd"V^jj1KTp\V/oS?Mi*:,BC48W+NdosAe52R&`USJtCeq[lW\alT^q'Wt<NmblmT%D6&Ac&j_SIDdF=WHH&)OaiK]qh>1cjrOUZDD4Z\g3tJo(mgj0Y9<c#c7ZQ?Y8%)!+\+16DhWUrqBfL%i29HnK7/eFVSj`-'5%:/L%ooCFi16q7YLOXY!q<I[Y`jY$6r`A\;)2G>pG1/+Y5C%#5Sm:kT>h(oB>hn=hd#K/'ID*&[br_?6/g/$[9IRAQ^Cl$;X4a,*6J,Q8%,;*)C!r5kEE"gNIfA1Vn/#Fe_rdF8.9rjpSqR+lP8#K^L'Dk5!e!NP(C#<`e"QAPhN<&lHc@^O%jp,uRR+sM6?c']t^QG^LR_n;R%3U4")&I<\IB"mQc^`UB.XqcdbH*\TifE#eKZ(.T\iT5'WhJ2e7B._cFaedcL#-V8nROPjrZVULrUNnH*,4$1bV;.*:A,A-DVDiG!%i&ME5`lplHWYU%mLSX`'q;1ZC#.nk$4N?-)P8A9sArULcj(OLIJ@3CL6T6[87>-/MTh2!DD8-sIRBk#F#".Ah(A4ufl(4F>\sH-V%8:QDme]?)uXq0T"l#4o?`b=#S1LiQ)A::W\?U:XH"u4KUC$TBgkUg'6"r#)Hd6@H4G%cA@P5)e9Z^E]D]8\NM?`Ya&j!QnI"FT7)%G23&^2^m3.D7=RQ6L*:mrXHR3)AB%+,n0V<DV;iXG3m]hO1\@Q`E`9,Qt@11Of98frQQ@t7XZ3DedWm1)#kqdcp[Go@=?)ADAB?9%S%*I8f/Dj]9_J7D'6Ck_==3e*qPd/VmnFD[S!HUH*YQkUEfSEOi@DEl7V[=i"XPXHG8J!aO7Qt]d]`ZSd]%F?:^ZCURF;QpTYa=7%O5J`0R&uo'!4Z8W_1d@&^\dr^7(9qB_o`_YEtuRPVPokE$0h$ifoN6FIo[Fc7MdR3D"2qO8Lj,#MgeEiQ.CK"W73?b3e-i2;-)K6%Cn1j>oPr-.B"QgN@W2.B0,[h\,N9ZjN4Z!_fsLU@@HR^VB$8Y+M:WnGHEF5P4NIFT33%.@ZeK2g/X[1e\$O,m!Eg:N1]6YLNc&l%%(.+84Ed-:@GtY'qEo?ZB,AD3TOU6FJgUqsO?=CQN=N>f(0#79%qED/k1<gD,^4!Ti5(%@^MFRlhe^a+^JGIDYiO5<S4@U9TIj6SH%HbjT/qq&A&=oHiL,j/boJhoeR>2BOe*H(<5B#tf+U(&A\cGiZRmseYGHiN<GCAl'0oB?2Qd`-V%l/h``=m+*%SNDaN%lRYbjo.F?%p=Zmf]<_G0l/S-#PEigG+1tkI%8YECmI4[FCZ>,,&G3G\Cn3-^pXWE\/jETJ>J07)pKrU(RG%8`]fSC7kkSWHm+IlAosM;T\Cl3#%pge/cq8$3JW4g2@)DBq#R9`BK4WSA;pp(K]>$A"5G5(iDSIa!^*o"<ESZV\Dqi)]b#Oc;;[n_S=a(f8]dekqMpZD(>[A2".GLHd;%Dn#:KII1M,bPFh\q/TnZEH\iJpU"p$1Wu8qo:<8$Xj\rlduF'IqnpS@`qa$64T/e;[c@8`XV8&8F+*GtKD3e)9tA%7p$?I\rjr,N%CU^QqB4ECfENaPqFLNK9peYl;B4g`WEsjAM-cqjgc1C_bl<8$_]"bK>C@V2<qW<F>4.FLR_oM5;h`Y=03N6BDYL^Sal/&t0Ck?Cb%mBuA1?YOq:hUlMf5'aB^>PN8AgH3(J'D%i'?[[AEc-4nlG@/p:SWa;F$]eVs<n#5V+19P(g-:R3]oua.E3Wl0*`'59pYXB,V%9$Z%q^?-ZZo4t-3a_LLdG3/ZF/,;?^6B@[gm_U,gg.PhIX<eFqK+@%TC(ITl"9\U_V2WAkEYQ3mMG<bEG(RQo[l@?M^/%6hqL(1m*k!S%Mg;qq;"It&0/-c$^>,a>fC&+_=npLa-l,$pj^,I=b\V7ra)9+N00J)oF+:=*hgQ`n2]&s<95!5(E0jDq6a6(Tnb-G%p#PJ%lf\5A%[FN9X='tbKM[<=3q\tA2Kc4ej0.-1"1]]E,kQ$U20uK/9)dD3EX%=-kM<u\fj.pk*oj_Fr[//eFG.mn5hM+1Bq^-eUqr)C/IrjZC%f'-W/kPELX.q^ZE)tCtDDmGe'Cua"<2m`!k,Q:Nohq@krrnD&NLTR_N?I#/0Cn<gI["4:QVs-LB3uTb6r-A+4[_MS+`Qm%^j+ZiZ%he9iS3rQnFnsb=\n*3,K6'#k`?XGr7r)#P%4rBTPG&:m4p;%ihLYa'/eKIf8roRU#G5G3Jp+6-Up1,]+q/\].'Nk7H[^/ETnSiJV%URQbHITDXo4+=F5+9ZbWSG.fO9=1#TI<rX%[.`mt@>n>n\6AjF1O&\)\JD7eI1#0+I9i%n9Q#V+*otS:\bfJ"S*0M'@XDO%H"Vf0%6i\=@i%Tr@%:JB\&_5uk>2%g.c*R$/I_'jrp7R_#$K#2TK@eH'mj@o1j6?9cic2+A8Uf'7YrOUE4*oR^+:e!&hqH`[GbNBJ>E6+<%qCt,ZU=g$/n7hg+N&cOB47fZ1X#jP-Vf:Vbe*fpcZ_MZjW_Q<5[^VEA__1>k@tq=+T"S@h6+<lOY9%TZ(c3j(g7<HDg<o_OHdp#m%Kqa4#mD\LoE9I3uqRLcgHN&FYqf72(0'o,:\")>:IIPJ/CqJlI"h3B;Gii-g%IiB#;7*ZYp?2Sqr:d>Rq##R-mHdDoZJGK5_9qFh%p7o=.`Z/h@#\]IMn(m0Cg;_+e<GQ77WL4^cm@Ok0f#RN<AB>[p2Snp&Hg];-pEN7Nm8q0c\NtO2dq^"jIa>_]XR>dXM.<159fC5"%rOI+HrV<>f26VF8?[K5l9MN79,;-3EJ&?XPI]FJ!O5eQjgmIjR!A;uN-S+rQ[)V@:qJkoEramN@3'E`ea'[`TUAK0&D$-[pc-sqN%Fo:nlGlH2T$C]!c:X%hRk*#l?GkAu!m&23tn]qZK_G1#ks(N#<_Dh8_OaQO$fE?"X3ifA7mA.kPej9)ue($@FXDqbJF),BrR,/#c%]c-PgUL:aV0%Ps&5;'ZPjX-A>CS"G/g_rt!AsSc4$c]!jf?[bE!Og.ANCMkZY&BGpo(><ET1+6bDNs-rraln[o.lnr[Z[-OoOJb"%B<,s./NDhi/4NdSG'%j&P6[p(mD!WPf8d\,,2Ze77Xak`Gb6=lit8J0oM=nV)#:-dLNR_kO)I5qR54eBoI,>er_q0q3<(hRR#2Ym%]N;1LKIZ8!nIL;pjir)sCLtZYg[SsaAi/Ar2Y@ub(*!$>G3mp<Gu%Hf]6H(kS'>DQ_<G`fEoRb^&LNQ6CZ8;8O0Fq>@jc!uWN6jk%HsJE:5uR]ud6;dOpUC!2I,Q[??0%RtNbJo`QWB41ha9akP(JFA>OiaEChDi(q(LEM/;#=2s8"ROqE:o#]mJ/[=b"d\,#/(o*#BH;%X[BDbCiAM6bE"/8G9/B#'Z7L;0C>+oOlirlZ2XajgU#/Uf5L!0-Po#9M^TNC-^)=3l/p4"g9L.=bo*h+-4LlbkgnG8r"Ds+?LQ2>%3Ke@qelHa6rS<+:I.M`1n7h4-Mk:sK$ekC,X;uDkp=Bhip5V^sD6I<8a\`i+G$'#)[(i^pIGa9qs0_^Dr+@cOhd()k/07eMlsdI]%AiH0<j0PlM_sM(]h$TV!o3ji:(oN)dRI-''DW==lRAR3*oCbrR<7J6P#9RFOCoLWeH15GUo--nc[.WM/J&ODC%FYHKdXTY(q$kfk%Bmg/>/n&I'1/HQ:?S=ka9%I>:4`b9*G4rf;7j"=@YSoUWVbpOqIp!P'8:,^Kfq2J%2XCMa@/bE2c2-UY)fK?'$s4MSX%8M()Ri-P%m2t(!b?MSCde[Y3aKiV$\a?SCSu(o0HUkLB[kA$CM)kf#7h_;&<60MP[e=,q!)GQ-p?XSNs"gu+rP(JBk5Nr\MqKG>f:+WW2,<A=%`PL$(5E>>_@5WKkg$RW1,A$7nE1!Q2_tNp.I=:h<S/aZE&(f^qado8SoWUoVFV3M?oS9%kmV\WrH"VgXr9]t<r@c@$gh!5YNJj,2%A;Il^N=,ejJRS%jj!&kmBCnQBm(l<SZ5qkjSkn"[G%50%qp4AuQZVEVQ\Td/[Q?jNb&B8RbQP6fmo;Sbl,hfRNAn&m8QpMSI,u\9%r&@o-oBPfcCi03iq]CsTj6ljg]bhg*%ed&kgJ@_Dc/,jj*E?Dbq`d77b\Vin46sT:q:g/UjngDf^hW@LofK7ec/:G9g`>^-s(^TI%7QfH3bi7CVSV]/tr3_io^/uk63/W2<[q]`;D(i'drcnEYkMc>J9^M%-ff+hK%S<RNSXj]jGL!JABRT:CCM3VERt^_ik6m%s&q9We%`q(qQ>]O47>M=D[Hh^lcXGelX[NA/cJpo(.q`X3RD='M[5knc*UYfbGFM+#fa!LlQ,u_$p]%QAX/A)<_T+?P:gHRX#p%TJ,r`HXJ%mZ?N'e/OPHntOB'<_R[lFT.j,O08er(EZ@=Nq(MT=,j?%A\RAjDse.Ae"6bIS'UM[0O!buH+Y\g!:cYoJ!@#k^Y`t@I<tUu]$XhJ%0\#>qLXhEQ=W-b[g[*,W\$*-1C%>n\ephRbSLYu:H%C1XFmZkFg511n1?WKN\GE0^WP^F1rlhg_PLk.oUa`//?X=aJb&1p]Y!q*i%mB?E-haf\/"iE?kh`b0KriF([q&<dmmk`>ph!i_IosH/cmr.T"[Q\UTmli;ShE616<]`9E+Nrd/m*dWP`eA.!``3`c.$(B4]:\g=%6J4?V-H)J,%^jDk8,)HmmX2Wns5VZZmFOfh]=5<CHu=CnQ(*C!=d(h7]c`ids&_FtGBg8!)Nt^qk\i+:[&;sD%;0hVD<'sY]6f/r%1%HA+n_"pEf\8D/9MUV6QR70-E$s<:r,g2+;92i4d(]EtHFhONnE)$rFGmPtXcLdLC.k%0QRpA)Y(#Varq!!VmiJ@0:0.+m2-FdF%S\JPsg<-J&e^jG'pQHcGR$cT9ZLd2Bjl#)"[/8fB9F6XFp.:R_4;UHKM>cpco@<!8-eE=T75&t25*O^uo7.<rrTBPkkdh+eBm\`E%c-12.6ofm2U<aY,52,i.Ci-5dQ]./:GDKVphUsqQr8-7GrGaJ6`/aS-S]A?J%>SmT5e?p^a]8?2Zta@Q/))`.=#[;%2/bF[[CPte%;Eb4Z?E^24)R$SEoC(5s:X-`SC\sP"kWLmL\c;>4Xa@e^OEPFQ=UK;.s7thknhd<n]44t6plUOm"N`<3gIJY.5@CnhgXbVY5"T9n%'lLJ+md=oB^7=S,Y+H^s]D'D5f(/)p9lEpVpga9Yd;FAFD/1g`)ree[s&`WRh`P,hY'T!X03K?M%(_4A<eNoFc[U/8U?52DZM([(%noE]/qXbZIQ_0mN58FJ=&Yn.L_bL/cYiEe&olm<(_m-otgZQJVjb(S$qT>i\(LtTJrR[21A#HZt68&MQriEq^h7+`p2mN;lg=>fW%fC+0hS+68s4PLrq4o<t%D_3%!Cp2+@Rsdr>q!mOejo4;9N%],K+RsUE$(B;BR3Om3c]Y;O<8BSulB/=fS6h4Qi,8S<pSY>ZG@%BF%mX?0mST]A'$GtpN2:(Csg\J([H28d)OcQhUTH'bH`/9G[F77#-<Y-Sok?C_(cSeA6aK>5F:YpNb(Yu7^bj@=F_moUX4Q=7ZF6tJO%L#Kni!;'-[ki(<EQLn58P?.>J7r@."6tBmo\QE3cI!'Y'(;1VSIl469],:/V5M=(qj6^$Uo\p;sKdi)"NHh1)GJYS)-N13Uf@`>Z%3]-EUo";82%r1@fb8iWrO0<?Tg?G+k$LRbLCg%WrUcelo.k_\_P,(VBn,*rt:8#:jb;@-jSF=:EM"moI$c48QD[<>V#MUUJHcak8%Z`B_4nR<:ASJ=P=qJj3nJO?>@/3J7Xl1s!"OOX*3d8&<^YpnW5R23Vmo\gAZia??^FKJWGFPI&io%ADpd;E<>^Lk9BE,83a+)`5+%CCeEBGh8^U+):1h'2aUu#hB-dKC7T(CN9Ae_eVj\_d_3WnqBTE^O>[.rBcgoS_hY8G4=k0ZLRP>_&aQ<X/D<YmuuH(_iAg^70@d+%*.*%#&"?&!6)Rh5^V-lO@"C6*ldAMp*krsUHuY3:hHAE!Ss_1MI_WVJhO,J;_68'+31]J&_ETtdD<KeZTI`4nJ'(:*Ogl^'oP![;%r'sj;YH"_:.r.nRoo4./[B#U<Ui!<5+3q<1g!fp#U$nhK\`ZWS2U1""rb?N9r["]B@"*Laa$24[MZch)EmgK=QGZmLI!%=o&t%X,%H;f;_\m@<t4WQG-f3*%diDt*fM]sk!82E&;J"$:so^0PeSb4d*o#'E`j*(@.D"R9^^^bT\kjpt`I:V_Vm;R'9cK4D$B7(C_cL$hS%+5^hdddeJV#jjMA,&u+HDT!?NL4/gibI]<RZMA>.r,^m/=BL'SYJ#e,DS:;"p.#]G^A]#7@lsA\gZtnIhNHT\^0(`Y`LeNrjZd%4%bWWY>*OM%)'25q8@D+o*iK()WcQbdR],Ofi6hO=Rf:UKdDo9lE/@F8\Zuq\e5LpU*J%"_(T+AEQ$@;JgB5QhM@:R-G$J+9`P2g&#%B2lOX^[Po"rF:b,#A>;g2UfQ5GE'!"X*\3?7aB8D7cWQC-*0=Y^!U.A7o)?sqTtpW)/P8EH.(d(fAki8pFjF*A6V0(gM!RmGSKa8%N$!4n@RtMXVq%X<FRX53C7XCkI_jbcHMe[fZ4%_rZ'abK*@\1!LU;USB8Nb()30.\*.)$SHCGt8p+F*^s05'E^O/9)ZG\AFInq9R%.d5K9[9$F>5#L1<N<a5h>7XrgPI8Aj0/dRui\()>hkIM4XVM8k[%6rHj#"Dc;Pl?ICATZU+^B?e&c3,79^0eD,TN8F=6o=e5KJ/Q%DZ?*[g!743mB7VWh\*h0qPZ7NDVsl3ro#i\hTh`lqqd__XEM'Km!Q,/Edk`fG';ao^_4EMNIF68s5hN.6K`]f[[00iB,gC<BPHi*%>@/2mC.DM,L\BnhqNFE[)paXd[:Uc+.scL9M!3rFjl4\=Qe'3h@u+1X_e)'RSBGVP6uP!0f,I@e]C!l;f0k'!^A7BgcJ4>;N6^PX%VoA)VqBu4![bqQGfUp:Zn^2M8if"NqItH\LXMGB^mihLkZVL`_EYL>WI4d&)p$Y*\CRlhs?LN96q\"JtrnMgKk;4#MchID*lg!p;%ZNIi1iU&A%V7GVc6p`cO/Y32[FS_fqc-lZBNr/,/b2"_cQ!0F5h\NY-0'#EC$]@D?8,_h=a3U]b\+d)oj_qUmhoj@&PDr6lHNq7_%o%2UCq8iVXr*PMC]5D'=H2#rU6WQKM1RFCdb(c2"38?.T9!e>MRTPb:N:QPf1`_ho]@KS'&9bb2dp^;KE\QPHHTKt[KeDH/i`ZEk%*N8YNE,TS,QQJ-AjbJJ&V8/no^:Vg53.@]6Hkk('1>&YuU-iKZ]@&S%nle&Y@-XCT`LWZOj7:s'$q@j7T=f,%]bC[RjS.r1ZWkRf%i$"_!^F9<eDk',nU31TP]5^2mn+]:h*Yu;XotcVf&(&P(G&/=c[l=]_OS(]s%]ADEW$22R2K@FFQ<P3Fn_I"Bme/:.(?`q"jMkeh%qGu^7Nh\?'pNmb'9iZiWVR7=NkTj_<PM[Skl0TBXpa]9un"+D;D>=hr@K!.qk[Xid4Cfg8f8YYRo)5L)1\R7]rYOZFdiABPW$DB2%*RDrHe5%\n`sgQMp,Y!7&T2QiR+Xm&Z/_UFUSFRZI@CNm[@-!tJ#%u!D\W)f6]"+jP3].9c1%KboY9hi7/%MspN5Qb9TI^E5J5%i%\Z]u!p_EfZmH(hI^ZDZE$m)e:pD^&d]hoYBhWK_nYCC'F2etA=3.AM_Ve)L\4AI\3+H9*'1W+^0,iD:moKQTW1^Wc@98d-VUSsg^%Dk>OfHFei+bKstn<S6i)\d%=4k/hWZ-Xh]u?D\3A3ebp-b9d`>%+SGR#So)6W6lNQBK:odia>WT1FQ$$h^lra`N`"$6Q>+q95&$B%_QZ.`N,*(T!:@)R/.,mA;)bifL?/`$-*SX&;hF,\E@taSW7G`%QJ3[/YUHp-?^.Gi$YX6O_D#J6hZT5J+m*T<l]tsN[[b?WaKWb,%(^(5A!::DNd0'GBQ\.-1>\N[o/FDYbb_38RM0)82%Cd:,CbD@.[\Ro]YV=@I$^-=C(WuG?=hn7'K[`YVnBQ)4>JSI'&ij'a-BWp`%@kgH'mB[9<)/O__0*cJ2])JeUC"sh8%^Id.j3i<aJm%@lMB"2*rdof"2(@[N"W>4p0[JMk#.oG)K/@"=S1c7(*cjDH/rprae4g9P%8m<V=&mI],KVoIGL8P[)FFYfmBSAQ`*"cXj!_\>a(hU"7^c`)JnS7)lR4'Rt=@bsI?pPK0L1M^iDke<&L/Wh0S3119>a2`=c"0Bi%_Uj_Y-segq=C<k#$R5l?[QJFqG_:UkJ6B\hC1\[0gQW1'8R/S=<!(h_1Kaoi@3E'RGf`mE5^jjs:rr88#d#h@;MIT5aW)kRZ(3$i%2Fr3Wg(_E:0VhF*rJZO>P([E[7a#ce3tSM%T>pN&?m@i=s,06*fduXKU#%WBBU246m:]64()G?\(tiE7cqPM.q,l=J0F.-e!m>-m%"A?6Bd;9FBmSd:I25<BlP@k@@AN2F`57N4c_9s/j7WV@!BKRi'n1?AOTU6bB2,g-SC>Tsb?@Z]$KLTi')4qBZ;\isDdju_;V$/O,%0K3kOiWq=e/.-GaGFAM?Y7XlI;[:KUC`^DJ@qE[(V5,,k0,kWZ1SZ,S26hoJ!ROLG`rfEf%MiVh(<c[b:7):i8hf7Qfn_0Zj3LWg%1^@WEJmtDZioIXtA2?5Y5Q[N,ED0dH"L:Uh1WWa.iri"+81mNE&@R4&3>`OL6N?GKW7[S"<q)@W#iQ/2BHs``#R@TT$>u`/E,?d%%'0CTLJZKo7AOpdYZo,i1rY(&\J`8Xj_KG[?FtU$3T4&cIEWVQ'OkVl^lk$NsMrK_QP%bl:*e\uMf8ionHjrY(AC?Q76-^oM>XEV)%-5=VM#YZJ]'#?&>Xc^B<-<,/_YoSfeBl$K%FrF</RHJ]>9;nB06:,;F+cnkm.P"%SNAra=dYLVka[s@/0Ra(#*^f8!TV%%E+bk<a%YUhXA(+#rB$)@4iT!AWq;YgZH,!tg,P[t&aU<l'&?4=`SJV$Eg884;:KgHYtNs;cr&@8&t-=iE&'.hH8Kq^COFQ$L30JL)]8?ic#%8cmC0fVefHO#;s3Bg5%/+c<UD<'3af$=Y3$VQg>bKkRPW'qo2)X,1=\D!U(dd/qJ5Ju2L\b"%1&&4F?+1@)^"CmqRhB;%Nd@9K_,%%8.]<Tfl%O`M3a8eo`@@+>(jVEUK8aEQTXp>dXP8i1NAh,Dk4^6-(EC`'oQM@sKDTWYIdE%6X"idgN]l*i0nnkMY+rUUsSlo%69c%`(LPB_*W43<Kn0[[Sc<tUkB@Ejg6#%+3.K)qO:msF,ZfW)M092d)Nf78_dp:-hZ#_F$^^I#pVPrNX1+8,-,8.a8-qTABL+e(8l#$%^00PleM^br,jd:N1Y5L!KL%YnPn?n]>ReLa/R6cU<NTTVr\Z2l0d[Tu6aKH#$V%IE</X;RS2:UHZc"\Y9t0K3(8,7gC)3XXH"n+p%@`W<XY%AJ#p9S@DX7j&8[qk]Njp092"e&dapHOo@'WO6im.J`<,F1#3(*%J^3:iLojhm(J.RMsF`fX76)F#_69B\b06KUr5^iW%:%/ei&oP@5@1\sH^#h2H2eR*h#@)`no(*\k"V@X3el*CB"T@6lN'*Pj:K4>=:t,60W\82&,*g6!u@7=[fd7I.0%"YBb@aMn60J1+8)%btU%QKN=Xr2eG(bXlNk53(T:]=F'>L2,FMX9Cp@h=q[oq5X?B95Dr5EbrDKW;*3U-/3#"+&U:*#GGlNI>m$%)^cPoO+@goQ0k7;?%:^<X9M*3DI(e/&#(HrDiN.All`2W7>A>F+<>nDn38DrIe+c%%X2b$&Y"4X3,FsRp2,ORpV$,-T7b<4"'X@gmg6:"c68>OEGL'=QO%g-G9FW*sCL49l2>2.4A^NIup>0o7;)I.l?IT<Y,m9#3Eek:-[8"'?BS/u/b?=D2j.]6n;7,g\(_ROqcBUn8!QFIg?eeV(U.)KcIW%_YutXLnIV_^qs=^js=_:gbJMq3-??1(tiMM*K+<Y94[]B!])%q#YAiI1]B9Jh@4i<A'm]HX9'E?8^<tc(5%RkKrl7Wa@(iRp+_Wg%PRiq914_aGKMJ%'.#Fn"4j+K>O_!G=Y\2>HEOL-<<WVS`@-+miSq`giUq*-%)5jb"!Mji#%&95;qT`#'7d;pUR%-O'G$;@2+VT[n%gl::22dni%ciOSbO3'DL04>qJYfGH3%rq]:`ZFX_(sW*bWUO4')-*J4OBWq2Puol;dYL[D;N7%YRb(Yo`^2L_UMqK<EG5hV@tYc<%<;C9srD$kOAThBhqjMb+`J>jYb!N'Y\2<`QM*XR6.RI,m^!"tY_^qj'"q$(e0e*OO=m4I_&NE_mr>I^q7)r%`:.cL`@8P>O,6\3W%"-sePJKebr-HI3d1h,0_g?_'qR5A8KO@WYf=Hn)5OKa]Vid>bO,JBU5`61:lMEmo;m,Z-`7R/k@4u36P!p"p)*"a&/U'6R8%fsZV%Ch1?@Ln-KS47U3BA=/?mjBu\dbI>%,I(L4:*JT9\<=Y<LJ#<bIhhFtn)3u!(83N$PTZW4p/6jO>fm+JkRs5bl#Jh&3(4aA\1WEmD%<WP[CS?YbF`8_Q:Rg12G=QJU<Y`tOnE?@.@"W!mn+MaMj";3L&:nEHj$k^+q3i>K4Go/7QJe=K4=SX8B[`lAmTT%]=!/3Fo$:2H=%1:dmMQ6>2Y@8L>`9A53lQkXm6*H214ZG8L<D.:ep4HS#8(nNMt=ILT@%/__0eGKTTZCG!R,A*@aYVZhm&YK5irh0#V(_DM+5Cu<X%G>nD_kRKNj9HAl@2#"3SW1=Pj,r1,iN<!*I7eXj\^dsb\.9jS"gi4kNTt:GAk[4G$5Dtdp80Ba^$7i@%ok34*P]k!+V*BFj0k"0r%"F0u?Go=Pg`H!/<"BIr@0G1Ap961\bUq?DF!@&:d)1.2X(.A;J@cf1_qLlqhN'VmQ*gT,Y,,&h+'1QLQAb%FhOu.;817Mh\n^RXS%i1So1]VT.TjUk8l9+.RXir:?gjX,8AGSodKChXrqM%1A>="LRP[Y8/&>WRm1[M0--bsdnVU*+G0k*18Q@`STdL7uM:0SqnC?o8W<%;.pZ0H,Kgg%uVD\_g!fPg-]:p"tFF5THGXJ!@'Q1C6;(b^o(TDAm%4t7YBfsl%[&V",P0+Q>6PF,r,n?%(=:]Tl1_j%*r%@,p!i]%J4'_:ZK8ZJQmP?<H#m7BC!Kk9+f5:^6L(C,G2^kF7,$SD<tC4q8>MDm!+2'lhTZde;b#+i+9O5bR7bl%"n*ob\"n_6,RI223s@,8%MZPGNL3<X,%#SZeP'^QR2:Z$B!-Ck"ZRAG#LMi`Km24+);=#K,AQ;]670?R*AOW6Be8@]<f@5%Fh:KjP`Hk@>%)iuZ9bt^Td7b\5%<)P7s`U6XJ1X1m-X?FfV9_e9iR9\ZM65IRC=&ai9Z]+Qr7'Na$5YM0_!,Qs.OYNfDN;k@)ZJp65/C&p<8'^@a_snh%!m<]^T.=Ls%i`p0-Mp8M''()#NZ#pI.F9*Lnf84"0?<MusaU-NX(>g76isB0.N9Plr_$EMDOKq-t;DC1P0F7(W7T/M1.>Nf+$::$o0r>p]6EhU(%+Y,TH+g<'uI<[^d*<c4fl?>$n+TP>DJ7("7MW;;N#$V=R?:oskU'd=(WURhQE`'8CRsInC,2ifiMs_0.Ft0(T`=kq<0P*,)7&(>X%PbT$cI>b4Nm/dRQOB"bZUV7c=&5aZ.8$@FhOgGK_n]U)$;G&nkc\`kSGcS&03=<WF@RL8B%`BK[+tK<G`RN@-"sF,75*%"o"]I3b%:(1/RA=2A9nVfalQf&QchueK5R@'M[5M1",iOs%49?9/'R#*U01BGf3/6Si?rT2[i#VO_6$pnpH&?Lo%PSIg[UHO_l5bohimPcRi%fLR350$>(M_B?-<Ooc$M9-AC[MsRjU>SDjS)BV%CS@VL1)$301PTcaLaT1;@%,BopaM7elQRif;&`WpHK0d=I7/[H`jbVUJih0]G%@)QS0BHbKm!+&sJ?A9?F_ANP9R>eLX`(sJo@[Q@i*)cm58.n<iUd)e25feI%*2Wrl@t>!%6CrE=m:n&R/FhVP@Hn9Fa=08?EN'W?%=Vg*/Aok4;A!?b$@/tYF@?GO`V]!jl42W<L^o6@!>'K%8+Y6+8VKn\Yc,F:VW!NO.WE4C:oNR%rEG?IE`/ZW)/RW*:>=LE3ZIUg$%TG0Z:m>qFpYk&WDiE.-fc<tqe27V!N?id;L&`d9X=Is)$$(.58_npZ8:?HK29\</O;pRcd.)E,s8bsC`%b"lhSp2l)9ThF4G&5kV%I,JCH>ekTb^d<o%84RVAdE*5k`*r^Z/k7/lLIoJ;c/M&\L!5^:S#)h54_V3rE4n)J>`(^rnI"\Te67YRQ3;^aib?N.ept":ZPAN&%5)lmF5d:ds&;dY)iQhX0GZS"[""(9%J7=o4O>T>b=&tVO\st7n1JR9di_^;^Wi4GnZ6He9q-MVS'Ql^j.TGN)UnVOk9\H^J%$51H%MIt2!m2jM9;X>gVhU9V'c$Ij?4O"eoX[^RH/6eg:[AmH=Re9mnOu7#YZas/s]PPK$[_Cl;d!Q)0O$WA+P^F78DaX2KBYG,(VkWun%1`q_>bL(]$MJGcW+DIFEZ:@OY>\P63bnHt$bV[XLf`S-3l4eGKg#lF[$u5c/e^(2i,?;4Lk1qS85rES[mT%fMY@TAhk0;Gi^7'7J%o-.u,k-A&lo3Q3=DT*Kr]$*%X]&J7lr:FQM^?51Air`I)iOTh\8Kb:4?KR[FF26Fs,+)(F_p"5G@3$m3V?`<8ol)Th!Mq=IdE:\q%i)()n/<"=qJd\l8Ko$X,$0%Ut?t<]>>:_`mOok`Cgh@_ko&.4f>(tf:(lF2EUJ%g$ElDW!6gCcc3Ha/BO>q4[e>l!Ys,#CB#SA&0%h?oX62PEZE3fKF>Jn#$1KV1V?:<N)\esAs0-d7Kr"ISpH#0R`=!mVD=70+0-an*Y?\!V51qLPuWTG:kWpbWXIKfqP7M;XtcW"r2E%=Ciu]Bome_.i$22bTb5tNKms<'1L2IER#\#bj[pITuNgh+Fkq47qR,1(>t?4)<ku*LBruX#$@7\eBKno_8K^ijM_I8[Q-pQ-V5e2%A(`!SbXUF"/6egZ[9C"R2=">KOqhJ1[CJ0L]PPH#QG2bud/4*:ImNZnPl2>c?UJscBO6jb1I^oGBYGA/LSMG,1lma\3DphjANuDk%05,N_C49hs9%fY1N#p5%dVL>fegfEbRdI!,Ga^4_R#GV";R8VG96H+\X'!)I$X'g322b\FbV]c71%[>QJF5ACr!V-T&=U@#pM4IA%&)C$U\5UOV(X5%:HZ:l\:Y@7oH&m&#PNIiSH`]-nQKA?LS7T9-:%Q&(pX!W'4Penm\-7`a155rZF<H]/":5^u.^Ub%!m#@?$SlW0%K1p.j(`T.oN,toT#-@ZGR)96ch#Wq_:cPP#'uoT3J8?#b3'bb:1rC.Z.u?IqZKG,?OhU0FKh3?.VjVP'87F/mm8D%t"Y>2?!gkcl%"5L>AjjR&Y(;hn@M`e)nOTZ'ilk1,,@S-ZnM89W`/`mY0`>FHRNm5ApN&0%9!dAJ^1s9JQkt39.4F;tgcur+B`<E3u_E]:[?u[+]%!!;V9%-+.F.M:G>XH'hqBSb]ik!;P,OaI6u`m(D<p[W>k]9C$A!nEDeL$Zo81n5K*l5ISTm*8"P,@Jk_6Kj?%cGW93JcZR*jNBSd%KJ4+a?..;Oep5,[!O0@FLE[R*>B0NdG'BPk&0?I%'DaQbN!!S26$=<HOER%)@O3_=a&e`)D?rotCIJ_daF`RG#1&C4mLXYR9EJ$,%)3VjV,##g4@7DS]P%VX1A!as4?.,-aBAr^C"ta_nLNgpM?nGWbKpBjO!l1O`H!BS0,,`OqYfZqZq\:e?PS.Vn=J*cLK1u&QmdtG%%Zk0eK\:qPR!*B<'KLh\0?o5%Z+MS##pl;4,dD9>RiA&2^YipLO3/)_a/2BO/kf,?=a@09BQ;'BWJl$P4oE*2CGacZAEb#5O4bbW8%qW,^GjOmtHM06&LEd.&Z$[Tj`hNnMhfbM`IYYR[/;-[A;%YMj=CuQ6H4/u#FAd*npB$HQ&C.8l5XTL!T77nm=IEJcr8/*c;a##m5%%hV[Yl(#85afnme!";O&YdatHZ\JetkN`:"G.iSqlt=?W-uN-u51MJt/NRA(>?pM-O3-+TF\KXB6/]1\mTL2h#fNQ.K$,OgTL,/d%mdjX7)[mlF"<r>qQ8LFL)<29`)73fh[J*8B`,>\"]X[!,#53NZ//H]?Y)`"\=I8];$PCR/^eF%.NH/W6(=t5I]$#>I7)jN7nN$rD%h'L_!JrWbN,Jb[qr&QA;4dkfA$@n)I]9_pi+i&'A.JF.d!Noi2B#>gLfYB*@bSZsD:Q-q=OJg#6^(SUO47a/Ui7:`A0[_O.&"DMO%/-SW]rM<Vnm)4iCf5tQ*_W8Qc+.#K\,!V<'/XWpoqC1H!meW,uh/*hnc3P?(EPo8m^f&UV?muGPdFaT$[`[r2@tP-#e;S:i2HO^>%c.5sE!h/RCo.apmLaas7Z=d\&q4[US1d?lWDGe)&MXs=/n`[][lTQPMBZFqXa,kRl_@^W=R`HphiiNSrh?gr`)aOm@B-f>eV[1.%%iG:(_Ti:npW]s2MRjmb_bmUFplSPf:iqu_[KSh!OnMb338^2aaq)R!,2D+f#bE;r96(8^R\^X+n1>G0*QqPgQioEpB%-uV9"Q6eo%:+*Nrqi<;/^cEdW)S]P).6-c[GIq<N<bM5kAF;@:liSb1GoZ](OMP3mf#ks;*TSmb6Y9+>8<(ZS+EV:`6lp\%;,ImhE$`K^o#5u,%2eRrFC`kF;lFd9Fb]4;%8Qp?d13U;rGaZLNoH^Ub(0!\KnnkbXb!?:60/jPb"@KEd/<`DmXqel+j)@E3C-W%=haU)t.52-J&01Nl%3TOBq,I1Wa#V2o8TN_koFeMq]MQro/1n*g,fgr\+V:f,*9JaqFRqCoM/OIEqeEfiQ%b9oGc)t'k?d21q>LT%kX]ahE&[.Z"MF4&t%2GcB3b%W_n>iscJF"\1Jjq21(^f&2WZ-WX=C^_ZWdZM'G6d"%lD3hbSa9%rhJM(,r=2t(B6u_)=OZk&uGa9's/EZq^"YN+F(D\s)%WJB=R`k)Ae3Zn18-MYMYj'#I*2!%G5ne>B6X>4OjV5AhoR]<O;Q5*b$6.Qcb:#XY;o<JG$.JeofTG\6>JY<r*MS5`%2.b6,1QaL]%8i*rZ>@i]Z2T<V`9Yln6W0rrM9Mi]+/K;'ciN!p=MB/gegR;8OZJIG`?hFS9/q]=&6$#>*SdN`9TiiY0je>m;O@m'9"`=`8%i[KJ%Q\cfA@.\0WbUn#r<M4L^XPc>_83JNbpbnLDj=Xa_XGs_!QYdRF7qIh*N],qd(cm>->SS4dC1lTn1o.W#&$a>$8X[Ds^^Q&c_"GY'%'23Ij\3[*W,p45D13UYCd:Wq)0d:XCbhkJBbE!g.<$H(Ir"'6Ek5J"!V;YAJlnY7@"Q:1D^iZ*#6g[e$o&,1bcrCWJEQ,^K_r<0j%H^r#Mk$fU;;mMQ'(-ArD4!nQjSZIg%lZl;8N.JEPh4EY%!,(#=`i%Ya9G"Sj&iadlTQO`I.'U_YS\ZeS4&T*X<uoG8X[+="W?15B%9jiC\D^/m4iW?3<,3N8I`J]EY$P\tZflS`O;eB$4<YfqK=Ob9e/nW;d=;0GXGh:FF9jQ-<Gt%1'bQHCQd&[\q.ab=6e]Q:@TsE(A%fiEX>'@.#2>$-Rml^e6#a^p2c3G5A:V-"UC#.f)uIW^L*);#Ks$rJ'=n,haV_>/(K:h]eb0@E_E+-Mb,#9r5)R?mHoSZUWg[X,7/%8"LnJ+:'5/nOqfR(;pTW!#=Mt.Rp["N`*&q9D/k3XH^\lU03a`_;uAsTs5Ae""AUiB4i.;]?VBR(92?-&j+[3p(ZXq(';(Od"I9'%I*+cJ&S?o%:NcYN:-upfW2:/@kscZ[cC#ipJpDlX@3c+sNL5J=%,Y#`1>;'<obSGlJf#?d^Z?Xp5ks,Ki##N>8.i^.hMi7j&g&n,%SE7q^_k9kY7BU#mL=F=9oZnqL4Hp7GR8.tNS-jkZ#SA$KT]"IPRr_mDE&NUP(^V.;i@(lUj!:(\nNCnF7R\:<9AW6r#X0WI`i6$3%O^cd"N93b)E8HF.b;5JEJFjO7L88If%jU&D+L!5nV!?RYr#]K7M+5`NeSEr+j!#DNdC>@Z]uj#Dj+Su/e9J%6K,%^pY]L(0*YPu^%!86&?9iD@=>I<GM'I[)JdNjpK)2knc"@]b4T(.bR[fbgOMi\)&6DP5OjIQHI"n>N2!,s]//:21WOo>rM$p#Gu"jXr>g5Bq?7`[YG%r_gAi&fW5'3"g9Z%gAko,kTd;KV;gC3m#'3b<X)B2Xq8U\6q"%jRm,=Zpn@]Ru-qh)-kfXP`sVShG/]"50^2X*@;D/JGj<DOlr6X%W(_`hm\C<tE_[,LbW/X!"cPl+/VEQ0?]U6#V\UJ32Y@,+Q2VEb1<+/4ka$%D`s%9_EC(?r%DCC&3R\D*h<6b__*e]j=Yl@>Oc)Po%\I>M('JFh6MJ49.F#*Od7P\5$67p9_o8*O".(:T4(AJ95ej^:B%oVrZAPfWepM#feRQmmmYo_u]r4E&:=-i_*"LA:uHmkaB.RPo-%d?Y@*917h`M_N;Da2:nY,oH12YTi?"f(2qtOTd.W2K]5%L6:mj&UkU!QPCl=(*!9b-B"]QN*@,]Z2t>$0E]2W+7R`+5&HQ1^VK&`%Vt/mt]XuDJ2-HTo$r+0D1.[U/RS;1AT-bf+Z;d1$A_F0+E6[(;q4on*[H?N#I,UO?>]Hl]*dCDRBp)7(OGXn*UhuMhb7n-5`&Q3^%f7>L%/TZLDgsP'#+tG0Sbnchb?-uNZK?cn"Au"lAQ$&?/SAGLgI];m<NW3a@>3"cahq-qA,"<8\UIcb3H>-8PObT=S<2HW>KQUF'%QKa:jf//0)7;J9oaO)1U,KWt7P:P8f(imH\(WNa2"O#JOJD3%U$Wn$$DfmIP/7RZa=[A\$"[V*]A;)F""]Dn&O\6]nQ8Xl;H@r:I%`(f1eE1p@aK0fd]f%oBfB89K<4(;6,r!8u6TH<&^,b1;>c=P6sBerAo#*YbC2fuSmQTJQYr`FIa:5]o.^st/UZ8"o,p,A$FY1I'?%Qo]9EBu9h2^$&9VA7NY8//3R[qir#E$t<l#f?l=HJ0J4m(.(c]7V(4YT/!jj!rL/K[i'c\J\$mKk:Y&=Ep6E*\]AQ+mk;)J9UO=6%IsZk/FFXOG]=WjRZ:rsU;-[?J@;?N4EU#C4SVB-4!]I"gTM@6k<]O('GF#Yq^b=A),dEp1C&"^p.<9H[UBY-;O^Df2@Zlq^Ob>Fp%QA=6*-S?0ZM?jJ)L;ASqaB.%[hud2L`KCaeOsYq21%7:.`VPEWArMaNDOQ9hm:@9dEs^_>(#(]?!81eo#>fIUQ5tjOj&'ko.ZV_%%g-f*0d'OH\LX@q!9d<OMVilA&BjmI=VJ11ap/ffX'kL:l3>L@Ldp[B!pU\"K,m8GOR,2jfg]P[WX2*97]El6l/27Ts6XAD0OuSk3%ianI,PTr19'@_1SX?!:EZi#ePe`S/+EsR)uXt5'_4.ZN5ie7H>I$9kS&-op;B?mf6D\--Vjm\7-[W4l18:Xrnp5Re#1l1+[dfJlW%><ffOK,Z4p*4WTh&]k]f!l^R;58=eS[/L%^T(la!Rn./cV4/YgQgeFB]#/u`ikWB(RekhsS2qb5U1MePE-_O2hW@@=C_Q`hY07IB%h;k(<$pGST4:+!AK^Ejb'gVhi-B*+NiZ1)2D/k_.KhcD>@C)*>-K\c#TaVMO;l!qia^PcHj>4UR:@!V3fp*s[&bq<<hrg`a?Y>85%.A8X5#4_p:3:AMg(\,aq^8p4S_Eqn1eae.a5gU?lN,Z[A^+CNW)6.("/@XL/BlV1W0CrhU08,eP<[@F+qbfli$l-me.#+#1/F9NZ%24-2_8]<Ot#uTGV$6nGVU=9?9pgOH"G+JiNVG`Y/gC^<YDLb-f0L.!!(%5(49\Gqhi-hX<Vc3f/!YTc\#]\*E830*D*7;Y(E`>;/%]MgL.Ln4,QJPRg(cC;b_AYH#B4+9uDa(H#S*)*uC\lfNrBV?Fu"JeGCoRN);GLE9^8NJ:e9U0ah9N4EX-=M$g>aF$2ACiYg&l#$%%DF3;BOfLs@,$,&O1J!0U"@e3:1!\l`i,:q/5X2g),;K:r\!"P3(mhhU:KW.dE34W!Lk+e(E8HX/1E8dTj(h8IRA;O&'*^nN;W[65%:^[A)!#*b=hDkFe)cK3oB*qs;VuuT_K%MS8`;ObS<aSZ=0GNi7C)hdh`CV[*Tb!a$coUEB*;Km%,!2""0<H;:RB^PYh6fm8bjJS,%kV=eHW@Ym;`Y*L7!,,eo)>d'Fa9"Y@*j@o(;d:9%okLl*KocW6q+_uS3>HB6=Vag_i9>C["2FohaBVh7[L`(%!Yc3,X5*&</q@X0%7'u8*b-_oMHA[$.7Chf[>`)CqXElj,$em/i>qHJdnfEKRl("j!nMJOi0[MSAeTnF:ZHJbD&HI]Ud%lLBF>V[HaY605BbF:,S9QS.%!9kcM_=QVNKBJ.0(8Sp`NDlRIdN^\3Af*>(9.@r;;eI-_L&MiBH^,l(;9f2'/(1i0Zm^,7RZ5K+j=6LIf69m!P,;,kR[9nFBmQ;L%m9Nd#2;N80N`je!24[b!D9FuEW[a>mC0gE`.HlX-YA*m&<A;C<-s7F!n)#s/?.l-Rq>SP!\%j!@9p<re:RDP++'tm;6@VXl80qc!%$KB9:K/Hnk#MC6&C'K-qYXe4e:7Crg>8Bb[R5"@A]pt\86I2!1[<U%LPVLU\)If*/EO4ZSdYs#9)jM2:_hC+-N[*F'9".9_A^nXQ%5"Itu9F-eT:$Z1#ZmQ@6>\`D/p).ao?V]9*AQ(JDL[$,3HmtN17J"c;4rhi!;t^JGINuhFUjA^kDjBJ8d_&qUQV?qHBjNaK4/[Ao%1iK#G'\%Mc>RJ_-f.@(b*#sP:fHjl5S%/&:Fi.8lZ?WO,3E;7;:hRqE)Sf7Cd$#D!%*aIENJ@Wt4nMf)9?%;G^O?04HQjn::f%Ra%:kJToJ)_[eP/L9[R4f:bp]_$qfA1O-r*#+l=QhXa0B,B#8Bmra[kC4pL*Q3)>F@-2HiTJEKVK/k0YMGa/"/$0W'J"^%d-c<NHEK'%S+<sJME2\nf%TDr>u5];gJrCj[8Ts5;`Sk%1GfM<0hoPVpt\<"PC[l8I1(4c0MEN^id3ZdRlc!&ahnPT#6Q;R#/3c!&OW"pX4)a6%EhO0+/cguEQ_PB=f+Duph]b0ajchQ.cn",jA_'QqG=4\b1`-n94f9oQp-U+E`<5lk0dXOW&fY1HN,Na@TTrSGf`R)8&>UTi,i2\L%d8@W3P(YS&c3:;RTTs.=R@CJ0Knhe]bU;5/h@qasN]eeA`.N-Pms0`@d1ThF.SjRYNM[1t!gcVO7i1a*aA=LnDNZK:<Y?BmJ:S;M%iFEn</;W+L=_T,R,OdT-dSCDnc)#lY,^(Kh@?emJj(9-k#K<Ae7n`OYhjD2i,j-%H!#%K;#Z+u?q3:Yq:/#!lX_q)@AMSh5DJ]]\%Q5P2<&lOf-%rX9o9h!6klP]ULWd[UN.HX__(5A;2P1gc5RQtP2@B$koL8S7LE<@!"H_m6tL=d,HRG7o&Ga"-J>F-n`&`[!e.Esu5%LR,f>E*)NqStCuZQF]51TnrGHpd1]7ni3fX*XB6O-le,:J)tOF&PV2b]#AWIbCnu%O9l3R`ZZ[lTaDZMdu*o/EsG9FcuKt.ChL;o%^_8G#8mGaI=;tX6i7JP+QjV`j*;('k2NFi:R84jJ3'A'#3s#T,ETN]O)uGM<Ut3QpZgOVd=Utii?stOB,JpOMoG4>nrB4+COpY.=%j8X7,=(t!r*L4W$>#\%9$>#PA5abD]r']R,)Lp31=IIp/=e`bm<W9#g@?"VECgH$!0qQl`7L2\#8KU<G-V)p"5IbfMI^59ABj9pa%nqtmuUgN?4&8sAqjUR5aAOg4-GtV]d\_\(=/L<cOgj1"R=[[7kcL!+4i7\=Kj:lP^9'b3-n8bdAGA#/_LYZT6l4E$pb5bdkK.R3T%6lND9(PBUOHfNZaXpU"C&f!+U<alHkV+rD:@MK5$:*m1UNefY5>:iUP7(o/<MK+bhP.-4YDTp",KK'CUL%AOhFJ13"KSrm@f>o8H%@O&)o_$*+P0A,e'(6]r9?1'H\\I+J*?`^oPaVTqVQUoIZpS*<3aMedX]S$FCfc!?I@X9GX)+R@%7^T6"hS<C[.:E`=$R]JbF)4Pp%'G8*>!9Gh+I3'XR9F6W1e9`qOUTnju!92eq;K4T+d1OQ]E;hai/!BTOA76Vf_.<?6!O5#Ff>Tia,[S]4;OgL)G[f!>U#XZ!M^sI>%&ar;YqPtqg_]n4a\U-mNIN4g_h[-qG.`cnPGWI\RS]+'o?Z&5\*@&mTq<[SE5.iT3cJT@U([]S-j^W6_Z(eI\@AT>5eZ+Gc1kpXJ%H!#'[N$Gdt)+nDr/5L=iH0AS@f)2SK+'/!bC49I5s/YpO21MpsGLi9nTERaS&;2aIXsQqj#70r'Q5T!e)+AeI&N$3:_+<"m$qk*n%.DjQ:/@A<A/+NFB.8kfV8rm99!j!IRHd9h+)-a%LS;Q;@]>lhf4bH*5\4nH7G61o,$fP'(eJ40hL@>EmPRGM4h+Z&5QB$?48^8:_%#"%HBLa+:+gbhh(MW,%"o>2AVTX!ubF.lrB-3k4cMg_o3k)f12:3D_uc4nOfU,cjC-][?U.6E5?kE51Cd[X1'dn95`kk8Z2:1]ek%aRX:LC)^5N=dP=rm(#=pYi,Gu0_Et^9cAn@QR0YL^kG<<6TZM'h#J4@LJ,8#BCp4r!lKtt/I0"$KY^*&OgGp/esHjiJ"bVt$l?Fa%SjtWKf8Md=d-'u@NPQDm/@Q"-f8dD#="T=lm"l/T(.Phf_j@^<aT\pi(/.UTB_UJ)``0BYK$&iN`ERd?;(DPP87^d"l#4S?O%[3'%NeIE;j8M5&FtE&7T`<<I^B>k_-cYt#`]/NuBk0U@$KWT<,C%!X.',jhEuY2/dEXllStQ.!,+=(dV-.sLs*'6/`'*VZmEFq+C99GI%C7Pc:h+kZXX0P'bTMjV5$n?>+>n^14\sHLS@AcueT@^98Q-4'?3F>pb<ibkB7!;d&INUdBKU,23-Zkn&PSo7r?o1?K0eA<hBadgJ%PSup>(pCfL2+F`(Hqc:CB!,_ULUbY4^PC0DE>oPP<]M.f>ON-BM@b&,;ra@Pf,V$AD)7]9.Do!J2"nsuq--7@e"S0=RlNA<qb]au%L)4:o?2(FF>pEc4BT5F:";]p9.0l)Y;nuL8a1]AEn[3R4[>Ge:'lT??-q2'-c+4#ke?!4c*<k,E69imZT[_[$N7#h01uN;_P^Mn,%=TV(u,0F>6WJiJk!#B4X+%)Pp(=&Jl(XS;KY2qKW+'QhViWLXVR%gH1.5/!uR@d'&A8WA_kej)bFX6qk=;DZ2hKV=o6U>10YV&GV%-,=>[pi"?=;:TD)CVV;7Q3@1b@ut6LA"6b1cRV[,dC:Tl:Q*='O;,['h336E_*Y)Jf@),F7*(eS6<g^qe/dJL?a`@c`-<Gq,tou5%mLfC18O*Todr77q[6kcIM.`>8)L5@X<`7/!1LHXcnRXHdMi0%)m#9(0Wer"]YujG>Mah5-r)+*Vli;1NAEn'C1>R^<]+oX',0j+o%I20`Ci*QfPNBaV'S'6b!:X%V7]<1i_0u)LZk@F`\1DDZu68L_\"%>"V1kag;+K,VUiaUg'V$%#SdjeZcE$"uq2e-o`j^E-0J5`I5%>]CI&#A5)6O2/pGY.>G,1c.NAf"%H8N`P*I_`7.j3UAM!a!+qXn3/&LQ<01p;`UJm+]Z"Gid<:=.5bb8iq(Z)ULa\1k%<0!Z'sFU%jP3`t^oF/3F!tgaB?``E3O6j-DT+-/q9Ci6]B5"&>kXV%?OHl_T`QO7TEZIE!/230:uWL!=@<Oh-rH91HNBZaEG:[MQPG,KJk&S<%&/WImiDr'KEAiEb`!4]!eji>g1'A@a7Ldsu^agh'X"3r[o0qWjJ_Yl&f1E_f>DWk7)YkL.s/$=D-r,TbD`T%2h@O(NGTj_OS&:n\%3cCEfU6D)^k#h3*`$UDJ8:2NI<>oKA+hP!'KOe"/YIMrDRt+;"`EP%oYX;`-ES20Y"eL`nDjX7V\kE]Yd=7de$Z?Z#^:rb04echo%YA4Qm]TY59&.RB7r:Gnt6Cpk%"o)60bnHLQ@e/M:9:?/KNGRrSn8PJ$YI4.9p1m%nVbJE>Mc*#i'Xf8JJ9VOV5n)"!/$@HY>aLOa%_QO3b:/"bj";<'7]>ouj$Y-R\"U0g>PB'N?YpZscWnTeGo$FWcK^oQ^g]m=5YKd2K<hXLINU\Fp8RZ*I]@49a_E5.jG1f4nmlnKL%bt&dGI)iNAa3E76%hNJ!`aUhq6@8Y.<9c$e.$IaSr:-1R0Oh#/`YI'-`ZUc+fgi!sS$OEV@1+^hfLl9J'Zrj<'^>i8j6A3cY"9fm%&m75P4O3m8KW%'8Qma0LAq_3_B/2IaY%09h\7uQ]SfqP'6-UPbcj=T5_:O5Y$X@oY`F,Ba!`Akm,XNR]F%.`J6[0=Sh\%l0E02Xb%%p1$""oo%aj.#OZH.Ii%SGNC>047WaA5&ZkLe,K67fq\\4':^$2(h[`K4Ae5_-!]<ZZpl`hXj(L82cnL:;r2T$o_C9.RED'CS[n2%L.1OU.[OQW!f[?=\MrG__BjVX1.-r3B!,P%;S>ma&<d13Vl?=g!o`+l"[V9B-*t5b$#ZOTj9*9[J5''4+CgYiA-V%nM8jpW2O/4:%)hO_ZjF*g"@[=SEYSNZ@qI;IA=/uDrSm_-/a'`DM#fgb_A1F9J%\C9uCkl@]'3N&D+"fD6a;[#4@Y'6Dcu"`bp0[u-YV,If('\JG%>`d;9rh)V^mLR]AB.C^CKl,f6Uq'8R+p+M+MtsKHgbCV&%$"!N76[J!#2u4\(cl^`6IpJ*0]R43:jW2^6-L5(?9RGl+K+):%`7\^%!Kq$6B34%D:VJ;$$.iFp"[5)b_D(Zu9=Sju%hMl^h6=ABjQghifE(o_$K`+WM)RU@'14rEB*Ih#=q"#/H=Ftg#A$Da]*"']nj!t*%jb51uBZ]d+*0(R6mS"!<#1tKa$p9Wp#"Cf0N#u<cBO;DIHj22_cK.3a,)t&<hZJg>M868e4H\an"jB;(?cp>2ge87S;,_HJnO&m%%H;[LP9tcjV`o=$)S5'<+-r-UEjR*W<RS^e+P/&.C?kM[sZO\E7XqTmtHX0H0bBQ6r`4XLgO8eDUqu1!o7P:D=2i(nYMD2Li/qpqM%X92]g$G8]m,)XNe-,SI76V(8kG?5ms5F.P%'CtRV<#-2;4^'sRRJ<7h"t.K0-W^B`Tk"Yt6*%@Vd$`ls$![M!)"'>]9_l3@F?CeO%(,7%e%I_G%+EnU,"a+-W4n&H+S&9n=aaJgi'YI&(`HB,T0lEZ$?0l@`#/Y(P.@).%,1_5Wert.[9*6Or@MAO"9Gs`7+N!N(lmY+j%eX*914E]7hab-Vi)\g%TfmBE=36H[]c!R4@<Aa`6k,2'53`Ye#1dk'%<&@?E1Y!1A:!YD4#7d#=joL-1mSe`?@JOm%gJP4e+:9Wo%f%2,RdQg2p'GQUCjjlD?<g<3]L*qr7NNk.;*OG0p[rC?F(-"3I!Kqj>%)GfXR=hF0/fBE-)F/T5*\u%"I%h*JpId+MEU#X8Rulrg%\XN;L!ePQgGZQY;#IKIgfr`8[2>4.,Gtf!;,_dXJ<;E:[WKJf27%PS?<<9*+>"'Lu@f*`Uf2M`E<R=\P:%ck4'Le;7<$#$sdSqVh%e^@DP9m+oa4@Kq5'Lkg%e.b_R;:QE8P2`MkaJpGd/)4^T]WAh_9"nmGkXIqm\Bp0Gh,l*F22^drR7NbqV3tSWBr7;;R]33SKOrV0%1GLacZtus]B!#tMQH`sZSCYo%"J;p=*6]435@6[rRAHF&`gahJ+m`Zg)A7C!)T*MRGJ0QGjnM@ria$;\j%7ZYFLmcXc>BMGS:8\#%Hcu@33::5s2HY,H!30/hoSh!'b!@)llQTpU3`sJfK2>e58R+BGc2ha1\4m5mjX4aehDu,Q!lgqTK[kc-FPWcADCTYPfVNUT[n\0!%"jS'Z,+19S3%FI(["*^15^0VVA9]t<`\#':!m;Qh7&#g?K_hd7ip<a_?A<2OLk-iL.\q2@@TUE\\9^>H==0+WiQUT2_%PdqD<@F/%5W+pfR5-jIICg'/%j@)]Jj+-#i_R>k=7Ids;Ak3tJa=+<1Rr]@K!C@5YbIKj/=3h5!5h10+[6Va-OCShb2!s(Ch4G2Le#gP;Fe1B%C`25MU2`9s\gE=-(Qf,a)PSB>O.L^=S&,!;JE8Cn*&7`A"tUATWt_lN"D1o(:rlR!1WVs36us.HM`:`#F>1uR$2FXobAg%?;J:Xd%eq9$#)+ZZ[IQ2hjMpd->KX_<UW`Ot#>RFrtUu"6eA_:r_"pp[-c^@S^LQ!a9-7XnBEEWW#WWq%T:baIe\58I2*_+C.A\:M!'Qk,?%!@?bmHP6)m!XV@56<4*bbr11njWQ6ZAHaX)9,-"[k(hBW_8A'RH]a\LUip^Y#q?um9;FpH4.KnUEMapHkklc0>$O]XXDgH,`'p?-%BU:_TIic5+'_8jl*t&QWO>onFe6bQQJXV\b/r[kKPgnq"8X0&Sc4G-F(hNj<KF\W,jG,B$aV_oWeZf_"dH3'(!09Ra(<&%fA:\9m%VSin$Clo'kTE6,J#O?,3B7.02Al]JSF=Y<#:lV$pI\WWDZfTDC>ML+XLW'"_"K\.VnQBbL,+f)NItpI4)trOeX2dZqUhnk&?3&ec%;"cAPh?V:uTm/B#/.4<S6cn%Y6MT#M6cqD7HEKh"-`*?D1*s\(ab/"3A]f9U>5jMQVc1n(dIManr#d;F8BWp>Z]`Ja9B@]P,oK>$%RF;$LRX_+!#LWJr-+AcsI*m<uRP1RTnKKe[;\kQB5k4)3`mGcM8,/?:LYeg,`%8j3DO1W^nR0UllJ8!6c,leC__e9Zk$6B*E14+.%,C>D5-sT/M2@<C2R$YtV1hN[@9ng,m9NYlW)H/S4S,)?3UKoL"l^S!$nJYWugD,SF!@2s1mG*sJ%VFnL[1Km^b&D@RH!H00Hmq7.%gl1]VpjE0IJ;!'?KOjCAQo<d\![i!Ogag[a1q4ogE$4cf;3#T/+2l>5/eeqehdD&c2PDeHb%_Lc*WE_ZP_B9L_,Ff3+#18:"^[/r%H*/%_E3W)rFBMHsi.-MU_E(TU1Hq!FE#p2n\qZb/1:bICT.S2]#m$?&70Y2h.c5u;HVkeA-+AN-+nA\8,\@BH/1I_,7,X[GP@kp2%bqhlpp-OJ$B.[pVicXJ?4\LTBJ6X:IVcritZmtE'k5]'<(i0C=ck8c2%5\C(MOVX-Ag?BX`(1A34X1D&E&9\tiiAWc^1@NTP%0Kt%q6V^;\Ct^\.XqkZ(u>j3mY$Ubr@S(Anc[)WUOXRlms*P3on#!G`PE>br+OTG#R+h7e;GIm%7#V>KersG7:\UR,aN`qJE?4l/_k^5%F?OdJ7D>@8_WEO:\s7Q.7VQFke0nC"gWJfPV?Uf#U7tY&b,;,4QBbTIQqVS-QJJg'f2ct\.SaBr=fcmJbC3O;4fc,52/f[up.(YP%&*#%QS#NZ>S!2_t&%MaaT`KiY3%.%)@UE9d-I*%+Z$W#XKpX"m&9.u6QZt;]=c@C#Y:f[H@6kkXe\-4M,Y!M:W/oh3'5hTIQ[s>Z%,(^PVR>ZoY01'0k3qLpi]I"%$TqMdZ.ATff+cXu.P13$(V/VD+BFLZ[=;:b0Ypk['Bl$RTO#e5nc>GMJXKui)bq%4-',m<Yd=dT*%X>HWJ$9q6UC;Np`\sdS=A@NuO'obK/)bSh<We6O9Pqp*Nh$L+96#f[oEFY6g*L^2#Fe<>b(<mkp\SX1tNogPogdRZ9WU,%"M0ZW2%!:i<u7#>"K)>M3<T+9-7@YR./W(;[R&KM>VZ<cbe4XM&Se4tQ8*b5a!EWdB(e@B)H2@RJP?gFJ#ZdEBeXA7LQ`D`[[oG#?<l6"OR%Lml(UnOkA"b60.>#VtD;_`]PZ=#+A#`4d-UJ7gD6'35t?,I5DOQ1l$KQ]Yk5i6-GGK2!C_;&fpektK+cV/e:J:_=[--KBVJ5okc5%P7lgBdW$-Ygpo80/(Z1'K^B39hRTQ*nKnCqWA$?ID!Y=;T:djrBuo)Aa15/*2`]L/o/G,2/1D!hdp$d&0r4uJr8sTo?dfXb@@;k0%+BXR6M&_X:TYQ+tS(Tr^J[d"t,n3`0aq[Q7d1<B0!154@r=a>g"oQjPK2UoX!_TcBLHH#<D&C>AGLniAG)B!6bSUSk\BP;HYqG+,%ES3/Q)&JF[`$^,LZZ>:CYQR/mQ6\(TS&m07f_74EV)Al#Zn]JrVSi`LLR9,!^Q<UN@d:M>gr#"(=)#n>\FZFU#dapCATHNETYLV+%+9J;^eIP6KJAoNS=9(M"n/[&+QfKif!Q-*iO!o@*k@K4;R<qUYiRaD@L8F=7&;3PM5/eZ9<(]GKr/a;Q_d%I@^lWaA=:h;tbVLG<%_ltif2[Ekdhr$h4@XO,cn,gO[P%C?5oo!3XJ>a*IWY4o7?*#W@MKuN#r;8?Y;(,NH4U'P(ee(=LF;#KNLA`En!b$mj@p?emnccmL%\X3L#*\Hp(0R4^ogs!8VD%uM]TS=O:.&-J6AdM6caZX(JqeFc+(&DBh+n"2(^:.!r('neqk*-6Y]g8n8^_.GI6gd:00IV*%?>qJ%%f2E,colS%c3;pUM41cOqMB`Pe7lp\/g`XFe`UqbUcQttI,2*0aC_EO'6>O4g::snKf`9=$:Hrc?O*Aq"XoT\7KE1,%dka/Cp!muo%<G.d]b>;BWPuSJ;Q=\^^MH]'#e1aX"cu/]]Z/8([e>_ZW'"?.=HJ2b$*6s3<l&,kN]3a/YY%Y8)g+0tcMO=QCA4s+JKt8niAL[<)%ku=@:6F$F+5?C$1S51?lOj39-&tN&S:</Y*)S:5'@(\r`?:1,diu'$P's0hjhAp6bJ&G#EUB3au't%BUZo-1)W^ssf0m2%J>UX&)%#@\J*R8>ZLk!>n>7b::Q0Ps$5e]F2>jppq`<tWDb9@p'sG.%`\'I$=ma?8a_4[kOOUuW+?H,NAtJWiUrj:O`GH(u@*WFpu;:4Qg:%)4>1)l@Iu>n!Mrlc1__H4`GoV,1pB74@k'.1#Q%IGSLKZTn64hi7:%N$q;kuO[Frco-Wl#Prp+b4^F8llK"'l\J.mnPLPV4b%%=>%(p#is.ut:cA'T*#[QGT`O0?aeolBiB4J&b^pr"0+Yrt1:a("29SU%6O=!9Y*j/F;2F*S,<;hR5dkp]Y's*AE`(o1i8_6G5&k%)R^%0u`nVhEh=Hg"mQ[Y@hDAT_D"J\<g`2c(&mEZecHbLH_i?+gng4^QTDZKo4i85gF)?dR,jt=A5]-f`[Kj4hql5#bb1)SQi=2e4Nud%VD>>K>gl;?!r01rU[i=QV][>Q56mO5d[FD3AB=g;7Q-?&'GMk1*(AD^l<@(/WRP8hbAlo)['R%U^![:CG+CrLR[&Ph0-OcNZ[L&r%#gWQ=b:6@83+C1_eH_qF3.&_mEA\X9SW7CJq%t-3&P:@tdKl_3"Z"$UB"!\NLdkF@]U"*mWkB6,abe2H[]Ts=6%YRpWf(RcdVl0D%8jJ],=+o2M(+b`jX!R^ZYcg;HW-HpM0c"!2/ge]X0)6?^4Vl2X9R58?#D;,H[9QClO8\W'@XBYoO#bs)dl\&.LNRY\E?9/G6eJq7%]H(6qmoF[J+[[_/MGDG]<\<Bkbu<H315F"qA9E'.!XRFk_-Jil:7Nnl?gR^%`>uXVQi(JQX&&$eFM;9K66\dUU"$cA^ckap&#QYf%S;NMVE=t*7*llIu3,'N@qrT$^*$Cf)\+=!Q*dl:fq0?2jhkJCkhX,M_/U6Qu;)=e)o!R%T\Tpfod?VF<FYrPn61<@6X6]L,_)!*l%L%,V7A$8#$[Pr]-RIn_&B6J^p]JnlB\NenkIWdKqL1Xa_\:A^^.KB_:JkM%Roh@rq3aP%VC`k(HJ-7#/GMSZlm6X`Vh7HcA&lA:r%lXjmMbR<D]JFjg"GhTZ$1Xm?E9l783TY3u9ZJ+:4J@;I(P>Y1fK3Mbk9%LE:"3DuFM<-%qp.6tlH0-C*]O[P!Zh%(A?4,%P'fmd4%0D5**MUG./mP:A?@an2HHAU4$6Is95qWZga)V@\!4'?,Bq<Y2/B5b:\CN&#k.u::/GTMl0/7pJHVIG[hq)5Y(6s(+:Y$h)RPD"h'%4ieDFd`<&)"G/T^#7Z5&Cm&6R/r2!N+)A,`B2Ulu9O/tJJaR(2[(VGjHb\Z:&Q!MdbrJuQXfEe$Nh\2QXJSup2iI%%XV<7F-CY!O%=L0!'68A4E&jpW%iV+5KSXtO6LVTMLmgj;tAP@.q9;lm3Eg=`:1rfhBfmbl'#/#fHc)3A`hT,.MUA(q+7H#d=cdhSk1=#DMrupR9%>%0ID$c'nUAmKQG3`HXco2Yd+(8RU,:-Bl%?Xt\[7R9/,;U\dGAN&)pgT]d>kojT5Y&"U#(o6J[:#ku(rm=SDElu(LIEm[`=Oc=U%84FX7FZs_+n]5=P(^&%&9W])(9mN$O$YK3m(ms%h5]r!tS0F]ip([Y:aO\?H=e\VlQm$I>loInP,\_g'O[M_*m3Uo2?<(+6M*h93%^tBSNZDC0J9oLF:NGcL#=Ao!jOY(MJ,>c+>A<Dao(3t<CIRsbgS&l8H"f?Pc5IZsPog3)R<I9-[,asNfK,FFe2flsa7BC4gY>t*b%"6A+#CtHn=%BH$Y=nZ")Nf=KY<K*7o0?%US,dU<91ALn&ajo1uN3VK(O;3[HE`>?Y,2$d3TTYua.!;oqA#]>XS+Z_+")u)ID<L4[%&.mpTUd#8Z-5dOu)Bmg\(E.q6W$e#)OC<8L,K-`MGS3.[$Y=/9bi*0TO:KN&#m:ZlA5aBrWbItOfebN,0GKfQZ=t=?.Q?\MA7TVj%au`UrMK<sTe<L)*"Tgt1#V?:i..(<J17"NP_JN_bZSJC8D$<d][`F'nJOZMCdk$L,bp+KiX&^.0,V5COko51L"(85QfSYN![80q8%(hqN6X-q6I4b#qAMk_Q?/:1GK16PMpP*h0foK719_RnoTj7c>OG;`LiFP$GLN/"X[Bd7HIq/Dq/kP9e&n*'P6ShKC*XIa@rpqVon%gl*['-$dnROUYi+c'SRpTnG\:e^g$QOXa5R;?uQMUrc+Bc'mk7b=$K/F?[VKimWcjeeVS=5!.f2%7gC"D$BZ@2pTL5kmg9JR-ZSi%41oHhj\dt,*Y_>WVb?Vp/t-@KAs7p[/R:9`r%1`Vh!ZP;b)okhA!r)/Z/7Cpk41F([opC=^#/^YMJuRPVfFoMjJah'ea4*GV`$^2%lD\2^?$g<,feQ'EiasKP2pQ9#Z6gk74,4^D;P^E1X)F(3`t/i9o[Sb-$tM6rq!3-=1%KFVgr:M,F<1mYoA-Nf`3BAAR`5=6NXAfZ%MOWd*2(>U^>>W6an5k9B[Y:G6V0k]SJ9ALkKeP)t[U.DO9puUBSi95`NQVC\;"PMrm&j)+Ml'cgkSRPPS\kTl&^9.!42hhbAKWXq%2hfiuERX9f^qgZ<,E#$2\lSp1m"ILdVb/K'gp3PSF(@DfIcsIHC>tSfCt+m,A0Q2'p%_3OU[Z#NqP9X%/VC%\rYRC_^_GmM8a0$j%qF6"&q9m&1ia;cOb?o\SC6o*K7<MnE-NlmF0NPK)*O;*W$aNmp]Bb7Q6naW,KO>*iSCPnWqRs^_?1Tn?:pZZjf(p*;ab[WOpIJ"j%+;!Sm*#pDK:#f)%)2ra0m"o5UUQ>1\PMMZcjBu/tmIeH>iPd'/8mAp;8!KP%;c0`(f@a?'gD@ISk;irE`DESuWHPubnJlW[@-!9f%;XD/"6688DD)AjWobr&22YIY!b<.+3/rOFoai`$gTsB!4MSH7oed;C]f.CQ]n?V\1S,,.0fOT;QfCb\F-.oj=!Xos;(q]d+A$Ofr%BNfjM\_"C4Mi29%ZUc,RIGUr![.)#M5-OIPQM42bT-bmZ"!>q7GLjs&g!Vf^I/'aA?L2;5BO\q*W53&_81ekopqmdNG<uGDD_EjV%"pc1q/WG44IejhGf"UV(BP3mG2'WQQ2`4UH/1K[k\>bUZ8q^=H?eeTuT*%UDkJ=#broO],C?+m\q66haiU"IZl5hi`*S==3Yc69A%B_si!i24LPGQ9[&*8FL1^o9W6F;HpE@:^NN:6hMAeirH(LRebS4>h*2/O1m.4>h*=$SE0T2o:=U6SZJ23j]gUlKSjo\UY.'?(`Sm%`m;Xr.l]N.JcsBiY%),jgDX\#ZH'#rU4BuFQ!Q\=ZIKp-d"d'VfUN+2I21,4@=q?V'Ie%t]F;;9jm7aV,BR[kT,45ta$Q"t^Hoiq%3PR<eFX4I?ablL*="?+@\03)b7*SRc;(C_o:NRtIs,Y4IF.LQ7L34E$.sE=V!%ER]aAsh38ZGQPWMJ'LUGG"*8=41`(R[]k+nXJ/%_B,JSg@E?*qqf1*%r96qcP2"0JLC_*SLcuuY*rW"HVhiEfV;>*J8^WG?[BPr+&=k9LDQSmEJt_&G]AiZ54,,H('W.)Oc8=('`X#s%XM$da@]X2u="I<+Xihhg6Su8PH!G]CkVKgaNC#QBlYT#)0bJtkM+FKK.uRF!#810<0H!CNHrf0DCUESL[dpC_8],(+n=FYefY#](%^hRmkS[1<32=(L@?GPh0[SHbdKZQtGm02=+B.b'7rZSLQ/2Et_$I_?SS,pn\K2@L:4a,AHDnL/\6#hI@B2[pC@"CAO`c7mZ@-t$`%d-0Gn8VqAYltB<"-FF?$^XDdDZEA"hU1CaaFlS9]/#G1];gtrNc(*`8S)T0Pb"3[-(gYiu5N3$.IW+J1?qB7SC1F>TN/8+jL96b!%P)Ih$\Y]h5RZ"jr>ddk1_aZJJ!BUtH+7iGnD*AI=h`A&"XlDf6l9VBCft'r@WjUVEc!I!jAE%NhXS8)/OXg%DL'Vo(cW,Db3YJXe%\#+Um9m-5BMt@F412jIuK*u5g4Kf%.ZC5S9)nH$09`<g=<TUAMH+p8!DIEp*9u5?>3G$q0r>@S#;0"_Bq`kM7@^I-8C<RbCE&b'3%,f6Pp4WT`f"*cUPcNW)^DPTa2dmdB=3<W>NXR$/A4rSV&FBgmu3^(s&)J;,&37Ac1HNBX\k=k%aRl1g=%jXeL-Wun/A8)t(daVh=%,YOKEP,1Nh2d'>\]kp(.O=AcjnhD<o`G@H[[4&Bp*NB,q32L'k<&mtTAVot\$s9*<;poJRWfs4/*p%t-OGh97BFbNeXXXD4hPgu-%g]R8Bh]'@e];C&X,F[khLZonBLS&#Oj("s95TY=%TAFM_J'#OfaP?g4K?7c[<-ab;-+'sg^4NE1l<(D!\sWg@e%%s>0VRuKJcZ^_%Ha-TL?q^[+"%<Fq?k0bc:"'+2V')NVmeah2G5k]oFmnt@fNgXJ&fo0[(g&F[k,$M)M:Ru(l3t#H?BYL\mB:H#>CA43$DJF[g@*up%/U]ZsgL[r,;.Li>\b8-umYD$=m]*BEp&tAG'_'P7M.5()""PU%qR?\A7@^8l[;j8C8:^aX32a=E>@hbRLc<BAh6?L%QCN(;c8H&5%,tgnW=OK*[i$M8Z?cV-l.WpEI[H40blOs);"q8nQlVpPRk;_WW9,ojEk0gB/HB>-%>G)`*\n+K8Tg1Ri[JhPr`Fd4WV@6=#dRBlI%H59RM6$CrVP)(f?cn9G?Oo<PXAXB5:"3D.n$+,`%/PM8Jjrr0+iW[@`pPG>!*6+iC+?.EpbFC%0dh_Rd!M@K9_5\";c0,V6>BBi$%$1M,\//QLhml\<sLU0be++3X)q>.GLcd+6#?J[ei@fQDkjboJ/-#"=>rgMPJr0'g$>F=f-e$1#XHZo2RS*N"ODdL0Qp@b9AfkZ)p%hS&(35Mt>1I/SXkgb/Nb`RXomqoRe]mB>c!IXN'nQE'(%Cd]%dPF]JIMXT="I;r((Fo/IhG>1Lt*<LWoZ'-RVD(aT:pK&/dWP;7#%D;Vf%pjN%+Il5Uaa*dg&naHLFNmGu;4o^["DB=1_o;fdL?iTBeg%Fb*P;?P4=H=^Fa@\SB#AVHQr1A`[g(<*\ci;c!oltr??B_Y?%%fG\h.gGfbH\iLM6*5M5c/HR<D=p%$AbkP7rhCP.r83;$02CY_%q"DVT$5=E\PKAEcTR"VC;t$Vc;Pgfpqs@TV5N03h#/bl$n!ZL%)f5mu`7SD%rA-+oT2YXUr,g)-MKVE>U&S>`4Z!a,\QRjXmsVLj/'!i:+nQ1Fks"oa+0YM#hLLi1(R]gJ%<upTSZ-;JhDQ0km,P5I%E#kYD'8F,KjdkAuY,tt$p\UhQK,1fDmi1u]b.H+pn!Kr4)oo<D/`[A>P*PSO(A-jVO1f1PoGuK7*<Z!6+n&c`pIhsY2iTJYa3*qm%S*AD8rfg3(Ei$O-b+_V[^?!aT`nT7RWRsc+ku;9OhQA<hA/>/b33:.25<=8d\+[#m=oTUMo[WQNgngTVpu'>R(RO;D(GB,Q_slZt%Msi<[(U%1Qhd5)E^1i(;HuX6'h<jm[ATPnpImDG")4,jDr;,+.f:Tg(oq1\jD_BaD?ajB,IXHKfF7o*HqgmdcbM2(=O-ec%`ia,!%h=G5'g/[g.X+#EolMBZ7X#<qhE.6lbgUD+(?eeo!q=a3&`r1X)J)np_?%.;!.R*VP++3S2(V`'0&&NBQDu~>%AI9_PrivateDataEnd